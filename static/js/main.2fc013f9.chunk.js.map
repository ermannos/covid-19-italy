{"version":3,"sources":["data/dataloader.ts","data/regioni.ts","pages/Home.tsx","data/vaccini.ts","components/DataPaper.tsx","pages/Vaccini.tsx","pages/Header.tsx","pages/Regione.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["regionalData","nationalData","loadData","url","data","axios","get","then","response","json","forEach","row","point","stato","codiceRegione","codice_regione","denominazioneRegione","denominazione_regione","lat","long","lang","ricoveratiConSintomi","ricoverati_con_sintomi","terapiaIntensiva","terapia_intensiva","totaleOspedalizzati","totale_ospedalzzati","isolamentoDomiciliare","isolamento_domiciliare","totalePositivi","totale_positivi","variazioneTotalePositivi","variazione_totale_positivi","nuoviPositivi","nuovi_positivi","dimessiGuariti","dimessi_guariti","deceduti","decedutiTotali","casiDaSospettoDiagnostico","casi_da_sospetto_diagnostico","casiDaScreening","casi_da_screening","totaleCasi","totale_casi","tamponi","tamponiTotali","positiviTamponi","casiTestati","casi_testati","note","push","catch","err","console","error","calculateDerivedData","previousPoint","Math","round","getByRegionCode","regionCode","filter","map","p","newPoint","refresh","Promise","all","rData","nData","splice","length","Regioni","abbreviazione","useStyles","makeStyles","theme","container","padding","spacing","formControl","minWidth","marginRight","marginBottom","lastUpdate","textAlign","footer","backgroundColor","grafici","1","value","description","field","2","3","4","5","6","7","8","9","10","11","ValueLabelComponent","props","children","open","enterTouchDelay","placement","title","arrow","Home","classes","regione","Number","parseInt","useParams","useState","grafico","setGrafico","datapoints","setDatapoints","range","setRange","min","setMin","max","setMax","history","useHistory","useEffect","chartData","useMemo","i","moment","format","selectedRegione","find","r","Container","maxWidth","className","Grid","item","xl","lg","md","sm","xs","FormControl","variant","size","Select","labelId","id","onChange","evt","target","placeholder","MenuItem","Object","values","g","Button","onClick","Typography","width","height","margin","top","right","left","bottom","dataKey","strokeDasharray","type","name","stroke","blue","fill","style","marginTop","Slider","valueLabelDisplay","event","Array","isArray","valueLabelFormat","x","href","vaccines","somministrazioni","consegne","vaxx","d","vax","index","area","dosiSomministrate","dosi_somministrate","dosiConsegnate","dosi_consegnate","percentualeSomministrazione","percentuale_somministrazione","ultimoAggiornamento","ultimo_aggiornamento","refreshSomministrazioni","ss","s","dataSomministrazione","data_somministrazione","totale","sessoMaschile","sesso_maschile","sessoFemminile","sesso_femminile","primaDose","prima_dose","secondaDose","seconda_dose","doseBooster","dose_addizionale_booster","refreshConsegne","cc","c","fornitore","replace","dataConsegna","data_consegna","numeroDosi","numero_dosi","paper","minHeight","color","grey","paperContent","display","flexDirection","alignItems","flexGrow","fontSize","fontWeight","addendum","bigIcon","DataPaper","icon","percent","delta","Paper","Intl","NumberFormat","toFixed","buttons","mb2","StyledToggleButton","withStyles","root","palette","primary","main","contrastText","light","selected","withTheme","ToggleButton","Vaccini","vacc","setVacc","shipped","setShipped","given","setGiven","view","setView","regionMap","setRegionMap","statusByRegion","setStatusByRegion","consegneBySupplier","setConsegneBySupplier","useTheme","isXs","useMediaQuery","breakpoints","down","isSm","loadRegioni","useCallback","status","a","undefined","sort","b","getStatusByRegionType","getTotaleConsegneBySupplier","viewRestriction","stackId","localeCompare","v","chartData2","chartData3","date","isBefore","Hidden","mdDown","LocalShipping","LocalHospital","xsDown","ToggleButtonGroup","exclusive","val","barGap","angle","textAnchor","interval","lightGreen","position","formatter","parseFloat","lightBlue","pink","orange","indigo","subtitle","lineHeight","github","link","Header","linkName","openGitHub","window","AppBar","Toolbar","IconButton","GitHub","sectionTitle","section","Regione","code","covidData","setCovidData","setSomministrazioni","setConsegne","previousData","lastData","previousSomministrazione","lastSomministrazione","lastConsegna1","lastConsegna2","lastConsegna3","lastConsegna4","App","basename","exact","path","to","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","secondary","amber","createMuiTheme","ReactDOM","render","StrictMode","ThemeProvider","document","getElementById"],"mappings":"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","file":"static/js/main.2fc013f9.chunk.js","sourcesContent":["/* eslint-disable no-param-reassign */\nimport axios from 'axios';\nimport { calendarFormat } from 'moment';\nimport DataPoint from '../types/datapoint';\n\nconst regionalUrl =\n  'https://raw.githubusercontent.com/pcm-dpc/COVID-19/master/dati-json/dpc-covid19-ita-regioni.json';\nconst nationalUrl =\n  'https://raw.githubusercontent.com/pcm-dpc/COVID-19/master/dati-json/dpc-covid19-ita-andamento-nazionale.json';\n\nconst regionalData: DataPoint[] = [];\nconst nationalData: DataPoint[] = [];\n\nconst loadData = (url: string): Promise<DataPoint[]> => {\n  const data: DataPoint[] = [];\n  return axios\n    .get(url)\n    .then(response => response.data)\n    .then(json => {\n      json.forEach(row => {\n        const point: DataPoint = {\n          data: row.data,\n          stato: row.stato,\n          codiceRegione: row.codice_regione,\n          denominazioneRegione: row.denominazione_regione,\n          lat: row.lat,\n          long: row.lang,\n          ricoveratiConSintomi: row.ricoverati_con_sintomi,\n          terapiaIntensiva: row.terapia_intensiva,\n          totaleOspedalizzati: row.totale_ospedalzzati,\n          isolamentoDomiciliare: row.isolamento_domiciliare,\n          totalePositivi: row.totale_positivi,\n          variazioneTotalePositivi: row.variazione_totale_positivi,\n          nuoviPositivi: row.nuovi_positivi,\n          dimessiGuariti: row.dimessi_guariti,\n          deceduti: 0,\n          decedutiTotali: row.deceduti,\n          casiDaSospettoDiagnostico: row.casi_da_sospetto_diagnostico,\n          casiDaScreening: row.casi_da_screening,\n          totaleCasi: row.totale_casi,\n          tamponi: 0,\n          tamponiTotali: row.tamponi,\n          positiviTamponi: 0,\n          casiTestati: row.casi_testati,\n          note: row.note,\n        };\n        data.push(point);\n      });\n\n      return data;\n    })\n    .catch(err => {\n      // eslint-disable-next-line no-console\n      console.error(err);\n      return data;\n    });\n};\n\nconst loadRegionalData = (): Promise<DataPoint[]> => {\n  return loadData(regionalUrl);\n};\n\nconst loadNationalData = (): Promise<DataPoint[]> => {\n  return loadData(nationalUrl);\n};\n\nconst calculateDerivedData = (point: DataPoint, previousPoint?: DataPoint): DataPoint => {\n  return {\n    ...point,\n    deceduti: previousPoint ? point.decedutiTotali - previousPoint.decedutiTotali : 0,\n    tamponi: point.tamponiTotali - (previousPoint ? previousPoint.tamponiTotali : 0),\n    totaleOspedalizzati: point.terapiaIntensiva + point.ricoveratiConSintomi,\n    positiviTamponi:\n      previousPoint && point.tamponiTotali > previousPoint.tamponiTotali\n        ? Math.round(\n            (point.nuoviPositivi / (point.tamponiTotali - previousPoint.tamponiTotali)) * 10000\n          ) / 100\n        : 0,\n  };\n};\n\nconst getByRegionCode = (regionCode: number): DataPoint[] => {\n  const points = regionalData.filter(point => point.codiceRegione === regionCode);\n\n  let previousPoint: DataPoint;\n  return points.map(p => {\n    const newPoint = calculateDerivedData(p, previousPoint);\n    previousPoint = p;\n    return newPoint;\n  });\n};\n\nconst getLastByRegionCode = (regionCode: number): DataPoint => {\n  const data = getByRegionCode(regionCode);\n  return data[data.length - 1];\n};\n\nconst refresh = (): Promise<void> => {\n  return Promise.all([loadRegionalData(), loadNationalData()]).then(([rData, nData]) => {\n    regionalData.splice(0, regionalData.length);\n    nationalData.splice(0, nationalData.length);\n\n    rData.forEach(point => {\n      regionalData.push(point);\n    });\n\n    let previousPoint: DataPoint;\n    nData.forEach(point => {\n      nationalData.push(calculateDerivedData(point, previousPoint));\n      previousPoint = point;\n    });\n  });\n};\n\nexport { refresh, getByRegionCode, getLastByRegionCode, nationalData };\n","import Regione from '../types/regione';\n\nconst Regioni: Regione[] = [\n  {\n    codiceRegione: 99,\n    denominazioneRegione: 'ITALIA',\n    abbreviazione: 'ITA',\n  },\n  {\n    codiceRegione: 13,\n    denominazioneRegione: 'Abruzzo',\n    abbreviazione: 'ABR',\n  },\n  {\n    codiceRegione: 17,\n    denominazioneRegione: 'Basilicata',\n    abbreviazione: 'BAS',\n  },\n  {\n    codiceRegione: 18,\n    denominazioneRegione: 'Calabria',\n    abbreviazione: 'CAL',\n  },\n  {\n    codiceRegione: 15,\n    denominazioneRegione: 'Campania',\n    abbreviazione: 'CAM',\n  },\n  {\n    codiceRegione: 8,\n    denominazioneRegione: 'Emilia romagna',\n    abbreviazione: 'EMR',\n  },\n  {\n    codiceRegione: 6,\n    denominazioneRegione: 'Friuli Venezia Giulia',\n    abbreviazione: 'FVG',\n  },\n  {\n    codiceRegione: 12,\n    denominazioneRegione: 'Lazio',\n    abbreviazione: 'LAZ',\n  },\n  {\n    codiceRegione: 7,\n    denominazioneRegione: 'Liguria',\n    abbreviazione: 'LIG',\n  },\n  {\n    codiceRegione: 3,\n    denominazioneRegione: 'Lombardia',\n    abbreviazione: 'LOM',\n  },\n  {\n    codiceRegione: 11,\n    denominazioneRegione: 'Marche',\n    abbreviazione: 'MAR',\n  },\n  {\n    codiceRegione: 14,\n    denominazioneRegione: 'Molise',\n    abbreviazione: 'MOL',\n  },\n  {\n    codiceRegione: 21,\n    denominazioneRegione: 'P.A. Bolzano',\n    abbreviazione: 'PAB',\n  },\n  {\n    codiceRegione: 22,\n    denominazioneRegione: 'P.A. Trento',\n    abbreviazione: 'PAT',\n  },\n  {\n    codiceRegione: 1,\n    denominazioneRegione: 'Piemonte',\n    abbreviazione: 'PIE',\n  },\n  {\n    codiceRegione: 16,\n    denominazioneRegione: 'Puglia',\n    abbreviazione: 'PUG',\n  },\n  {\n    codiceRegione: 20,\n    denominazioneRegione: 'Sardegna',\n    abbreviazione: 'SAR',\n  },\n  {\n    codiceRegione: 19,\n    denominazioneRegione: 'Sicilia',\n    abbreviazione: 'SIC',\n  },\n  {\n    codiceRegione: 9,\n    denominazioneRegione: 'Toscana',\n    abbreviazione: 'TOS',\n  },\n  {\n    codiceRegione: 10,\n    denominazioneRegione: 'Umbria',\n    abbreviazione: 'UMB',\n  },\n  {\n    codiceRegione: 2,\n    denominazioneRegione: \"Valle D'Aosta\",\n    abbreviazione: 'VDA',\n  },\n  {\n    codiceRegione: 5,\n    denominazioneRegione: 'Veneto',\n    abbreviazione: 'VEN',\n  },\n];\n\nexport default Regioni;\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/no-redeclare */\nimport React, { useEffect, useState, useMemo } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\n\nimport {\n  Container,\n  FormControl,\n  Select,\n  MenuItem,\n  Grid,\n  Typography,\n  Slider,\n  Tooltip as MUITooltip,\n  Button,\n} from '@material-ui/core';\nimport { blue } from '@material-ui/core/colors';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n  ResponsiveContainer,\n  AreaChart,\n  Area,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n} from 'recharts';\nimport moment from 'moment';\nimport { refresh, getByRegionCode, nationalData } from '../data/dataloader';\nimport Regioni from '../data/regioni';\nimport DataPoint from '../types/datapoint';\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    padding: theme.spacing(2, 3),\n  },\n  formControl: {\n    minWidth: 200,\n    marginRight: theme.spacing(1),\n    marginBottom: theme.spacing(1),\n  },\n  lastUpdate: {\n    textAlign: 'right',\n    padding: theme.spacing(1),\n  },\n  footer: {\n    textAlign: 'center',\n    padding: theme.spacing(2, 0),\n    backgroundColor: '#c0c0c0',\n  },\n}));\n\nconst grafici = {\n  1: { value: 1, description: 'Pazienti degenti', field: 'ricoveratiConSintomi' },\n  2: { value: 2, description: 'Pazienti intensiva', field: 'terapiaIntensiva' },\n  3: { value: 3, description: 'Totale degenti', field: 'totaleOspedalizzati' },\n  4: { value: 4, description: 'Decessi giornalieri', field: 'deceduti' },\n  5: { value: 5, description: 'Decessi totali', field: 'decedutiTotali' },\n  6: { value: 6, description: 'Tamponi giornalieri', field: 'tamponi' },\n  7: { value: 7, description: 'Tamponi totali', field: 'tamponiTotali' },\n  8: { value: 8, description: 'Nuovi positivi', field: 'nuoviPositivi' },\n  9: { value: 9, description: 'Totale positivi', field: 'totalePositivi' },\n  10: { value: 10, description: 'Totale casi', field: 'totaleCasi' },\n  11: { value: 11, description: '% positivi/tamponi giornalieri', field: 'positiviTamponi' },\n};\n\ninterface Props {\n  children: React.ReactElement;\n  open: boolean;\n  value: number;\n}\n\nfunction ValueLabelComponent(props: Props) {\n  const { children, open, value } = props;\n  return (\n    <MUITooltip open={open} enterTouchDelay={0} placement=\"top\" title={value} arrow>\n      {children}\n    </MUITooltip>\n  );\n}\ninterface ParamTypes {\n  regione: string;\n}\n\nconst Home: React.FC = () => {\n  const classes = useStyles();\n  const regione = Number.parseInt(useParams<ParamTypes>().regione, 10);\n  const [grafico, setGrafico] = useState(1);\n  const [datapoints, setDatapoints] = useState<DataPoint[]>();\n  const [range, setRange] = useState([0, 100]);\n  const [min, setMin] = useState(0);\n  const [max, setMax] = useState(100);\n  const history = useHistory();\n\n  useEffect(() => {\n    refresh().then(() => {\n      setMin(0);\n      setMax(nationalData.length - 1);\n      setRange([0, nationalData.length - 1]);\n    });\n  }, []);\n\n  useEffect(() => {\n    if (regione) {\n      if (regione === 99) {\n        setDatapoints(nationalData);\n      } else {\n        setDatapoints(getByRegionCode(regione));\n      }\n    }\n  }, [regione]);\n\n  const onChangeRegione = evt => {\n    history.push(`/epidemia/${evt.target.value}`);\n  };\n\n  const onChangeGrafico = evt => {\n    setGrafico(evt.target.value);\n  };\n\n  const chartData = useMemo(() => {\n    if (!datapoints) return [];\n    return datapoints\n      .filter((p, i) => i >= range[0] && i <= range[1])\n      .map(p => ({\n        data: moment(p.data).format('DD.MM.YYYY'),\n        value: p[grafici[grafico].field],\n      }));\n  }, [datapoints, grafico, range]);\n\n  const selectedRegione = useMemo(() => {\n    return Regioni.find(r => r.codiceRegione === regione);\n  }, [regione]);\n\n  return (\n    <>\n      <Container maxWidth=\"xl\" className={classes.container}>\n        <Grid container spacing={1}>\n          <Grid item xl={6} lg={8} md={8} sm={7} xs={12}>\n            <FormControl variant=\"outlined\" size=\"small\" className={classes.formControl}>\n              <Select\n                labelId=\"demo-controlled-open-select-label\"\n                id=\"demo-controlled-open-select\"\n                value={regione}\n                onChange={onChangeRegione}\n                placeholder=\"Regione\"\n              >\n                {Regioni.map(r => (\n                  <MenuItem key={`reg-${r.codiceRegione}`} value={r.codiceRegione}>\n                    {r.denominazioneRegione}\n                  </MenuItem>\n                ))}\n              </Select>\n            </FormControl>\n\n            <FormControl variant=\"outlined\" size=\"small\" className={classes.formControl}>\n              <Select\n                labelId=\"demo-controlled-open-select-label\"\n                id=\"demo-controlled-open-select\"\n                value={grafico}\n                onChange={onChangeGrafico}\n                placeholder=\"Grafico\"\n              >\n                {Object.values(grafici).map(g => (\n                  <MenuItem key={`gf-${g.value}`} value={g.value}>\n                    {g.description}\n                  </MenuItem>\n                ))}\n              </Select>\n            </FormControl>\n\n            {regione === 99 ? null : (\n              <FormControl variant=\"outlined\" size=\"small\" className={classes.formControl}>\n                <Button\n                  variant=\"outlined\"\n                  onClick={() => {\n                    history.push(`/regione/${selectedRegione?.codiceRegione}`);\n                  }}\n                >\n                  Focus {selectedRegione?.denominazioneRegione}\n                </Button>\n              </FormControl>\n            )}\n          </Grid>\n\n          <Grid item xl={6} lg={4} md={4} sm={5} xs={12}>\n            <div className={classes.lastUpdate}>\n              <Typography>\n                Ultimo aggiornamento:{' '}\n                {datapoints && datapoints.length\n                  ? moment(datapoints[datapoints.length - 1].data).format('DD/MM/YYYY')\n                  : '-'}\n              </Typography>\n            </div>\n          </Grid>\n\n          <Grid item xs={12}>\n            <ResponsiveContainer width=\"100%\" height={700}>\n              <AreaChart data={chartData} margin={{ top: 5, right: 30, left: 20, bottom: 5 }}>\n                <XAxis dataKey=\"data\" />\n                <YAxis />\n                <CartesianGrid strokeDasharray=\"3 3\" />\n                <Tooltip />\n                <Legend />\n                <Area\n                  type=\"monotone\"\n                  name={grafici[grafico].description}\n                  dataKey=\"value\"\n                  stroke={blue[900]}\n                  fill={blue[700]}\n                />\n              </AreaChart>\n            </ResponsiveContainer>\n            <Grid item xs={12} style={{ marginTop: '24px' }}>\n              <Slider\n                value={range}\n                min={min}\n                max={max}\n                valueLabelDisplay=\"on\"\n                onChange={(event, value) => {\n                  if (Array.isArray(value)) setRange(value);\n                }}\n                ValueLabelComponent={ValueLabelComponent}\n                valueLabelFormat={x =>\n                  nationalData && nationalData.length\n                    ? moment(nationalData[x].data).format('DD.MM.YYYY')\n                    : x\n                }\n              />\n            </Grid>\n          </Grid>\n        </Grid>\n      </Container>\n\n      <div className={classes.footer}>\n        Fonte dati:{' '}\n        <a href=\"https://github.com/pcm-dpc/COVID-19\" target=\"_new\">\n          Presidenza del Consiglio dei Ministri - Dipartimento della Protezione Civile\n        </a>\n      </div>\n    </>\n  );\n};\n\nexport default Home;\n","/* eslint-disable import/no-mutable-exports */\nimport axios from 'axios';\nimport { StatoVaccinazioni, Somministrazione, Consegna } from '../types/vaccini';\n\nlet vaccines: StatoVaccinazioni[] = [];\nlet somministrazioni: Somministrazione[] = [];\nlet consegne: Consegna[] = [];\n\nconst loadVaccini = (): Promise<StatoVaccinazioni[]> => {\n  return axios\n    .get(\n      'https://raw.githubusercontent.com/italia/covid19-opendata-vaccini/master/dati/vaccini-summary-latest.json'\n    )\n    .then(response => response.data)\n    .then(json => {\n      const vaxx: StatoVaccinazioni[] = [];\n      json.data.forEach(d => {\n        const vax: StatoVaccinazioni = {\n          index: d.index,\n          area: d.area,\n          dosiSomministrate: d.dosi_somministrate,\n          dosiConsegnate: d.dosi_consegnate,\n          percentualeSomministrazione: d.percentuale_somministrazione,\n          ultimoAggiornamento: d.ultimo_aggiornamento,\n        };\n        vaxx.push(vax);\n      });\n      return vaxx;\n    });\n};\n\nconst loadSomministrazioni = (): Promise<Somministrazione[]> => {\n  return axios\n    .get(\n      'https://raw.githubusercontent.com/italia/covid19-opendata-vaccini/master/dati/somministrazioni-vaccini-summary-latest.json'\n    )\n    .then(response => response.data)\n    .then(json => {\n      const ss: Somministrazione[] = [];\n      json.data.forEach(d => {\n        const s: Somministrazione = {\n          index: d.index,\n          area: d.area,\n          dataSomministrazione: d.data_somministrazione,\n          totale: d.totale,\n          sessoMaschile: d.sesso_maschile,\n          sessoFemminile: d.sesso_femminile,\n          primaDose: d.prima_dose,\n          secondaDose: d.seconda_dose,\n          doseBooster: d.dose_addizionale_booster,\n        };\n        ss.push(s);\n      });\n      return ss;\n    });\n};\n\nconst loadConsegne = (): Promise<Consegna[]> => {\n  return axios\n    .get(\n      'https://raw.githubusercontent.com/italia/covid19-opendata-vaccini/master/dati/consegne-vaccini-latest.json'\n    )\n    .then(response => response.data)\n    .then(json => {\n      const cc: Consegna[] = [];\n      json.data.forEach(d => {\n        const c: Consegna = {\n          index: d.index,\n          area: d.area,\n          fornitore: d.fornitore.replace('Pfizer/BioNTech', 'Pfizer').replace('(AstraZeneca)', ''),\n          dataConsegna: d.data_consegna,\n          numeroDosi: d.numero_dosi,\n        };\n        cc.push(c);\n      });\n      return cc;\n    });\n};\n\nconst refresh = (): Promise<StatoVaccinazioni[]> => {\n  return loadVaccini().then(vaxx => {\n    vaccines = vaxx;\n    return vaccines;\n  });\n};\n\nconst refreshSomministrazioni = (): Promise<Somministrazione[]> => {\n  return loadSomministrazioni().then(ss => {\n    somministrazioni = ss;\n    return somministrazioni;\n  });\n};\n\nconst refreshConsegne = (): Promise<Consegna[]> => {\n  return loadConsegne().then(cc => {\n    consegne = cc;\n    return consegne;\n  });\n};\n\nconst getSomministrazioniByRegion = (regionCode: string): Somministrazione[] => {\n  return somministrazioni\n    .filter(s => s.area === regionCode)\n    .sort((a, b) => (a.dataSomministrazione > b.dataSomministrazione ? 1 : -1));\n};\n\nconst getStatusByRegionType = (): Somministrazione[] => {\n  const status = {};\n  somministrazioni.forEach(s => {\n    if (!status[s.area]) {\n      status[s.area] = {\n        ...s,\n        dataSomministrazione: undefined,\n      };\n    } else {\n      const a: Somministrazione = status[s.area];\n      a.primaDose += s.primaDose;\n      a.doseBooster += s.doseBooster;\n      a.secondaDose += s.secondaDose;\n      a.sessoFemminile += s.sessoFemminile;\n      a.sessoMaschile += s.sessoMaschile;\n      a.totale += s.totale;\n    }\n  });\n  const values: Somministrazione[] = Object.values(status);\n  return values.sort((a, b) => (a.area > b.area ? 1 : -1));\n};\n\nconst getConsegneByRegion = (regionCode: string): Consegna[] => {\n  return consegne\n    .filter(s => s.area === regionCode)\n    .sort((a, b) => (a.dataConsegna > b.dataConsegna ? 1 : -1));\n};\n\nconst getTotaleConsegneBySupplier = (): Consegna[] => {\n  const map = {};\n  consegne.forEach(c => {\n    if (!map[c.fornitore]) {\n      map[c.fornitore] = { ...c, index: 0, dataConsegna: '', area: '' };\n    } else {\n      map[c.fornitore].numeroDosi += c.numeroDosi;\n    }\n  });\n  return Object.values(map);\n};\n\nexport {\n  refresh,\n  refreshSomministrazioni,\n  refreshConsegne,\n  vaccines,\n  somministrazioni,\n  consegne,\n  getSomministrazioniByRegion,\n  getConsegneByRegion,\n  getStatusByRegionType,\n  getTotaleConsegneBySupplier,\n};\n","import React from 'react';\nimport { Paper, Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { grey } from '@material-ui/core/colors';\n\ntype Props = {\n  title: string;\n  value: number;\n  percent?: number;\n  delta?: number;\n  icon?: React.ReactNode;\n};\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    padding: theme.spacing(1),\n    minHeight: '80px',\n  },\n  title: {\n    color: grey[500],\n  },\n  paperContent: {\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  value: {\n    flexGrow: 1,\n    textAlign: 'right',\n    fontSize: '1.7rem',\n    fontWeight: 'bold',\n  },\n  addendum: {\n    fontSize: '1.3rem',\n  },\n  bigIcon: {\n    fontSize: '400%',\n  },\n}));\n\nconst DataPaper: React.FC<Props> = ({ title, value, icon, percent, delta }) => {\n  const classes = useStyles();\n\n  return (\n    <Paper className={classes.paper}>\n      <Typography variant=\"h6\" className={classes.title}>\n        <strong>{title}</strong>\n      </Typography>\n      <div className={classes.paperContent}>\n        {icon || <span>&nbsp;</span>}\n        <span className={classes.value}>\n          {new Intl.NumberFormat().format(value)}\n          {percent ? <span className={classes.addendum}>{` (${percent.toFixed(1)}%)`}</span> : ''}\n          {delta ? (\n            <span className={classes.addendum}>\n              {` (${delta > 0 ? '+' : ''}${Intl.NumberFormat().format(delta)})`}\n            </span>\n          ) : (\n            ''\n          )}\n        </span>\n      </div>\n    </Paper>\n  );\n};\n\nexport default DataPaper;\n","/* eslint-disable no-nested-ternary */\nimport React, { useEffect, useState, useMemo, useCallback } from 'react';\nimport { withStyles, makeStyles, useTheme } from '@material-ui/core/styles';\nimport { Container, Grid, Hidden, Typography, useMediaQuery } from '@material-ui/core';\nimport { ToggleButton, ToggleButtonGroup } from '@material-ui/lab';\nimport { blue, grey, lightBlue, pink, lightGreen, orange, indigo } from '@material-ui/core/colors';\nimport {\n  LocalShipping as LocalShippingIcon,\n  LocalHospital as LocalHospitalIcon,\n} from '@material-ui/icons';\nimport moment from 'moment';\nimport {\n  ResponsiveContainer,\n  BarChart,\n  Bar,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  LabelList,\n} from 'recharts';\nimport {\n  refresh,\n  vaccines,\n  refreshConsegne,\n  refreshSomministrazioni,\n  getStatusByRegionType,\n  getTotaleConsegneBySupplier,\n} from '../data/vaccini';\nimport Regioni from '../data/regioni';\nimport DataPaper from '../components/DataPaper';\nimport { Consegna, Somministrazione } from '../types/vaccini';\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    padding: theme.spacing(2, 3),\n  },\n  buttons: {\n    textAlign: 'center',\n  },\n  lastUpdate: {\n    textAlign: 'right',\n    padding: theme.spacing(2),\n  },\n  bigIcon: {\n    fontSize: '400%',\n  },\n  title: {\n    color: grey[500],\n  },\n  footer: {\n    textAlign: 'center',\n    padding: theme.spacing(2, 0),\n    backgroundColor: '#c0c0c0',\n  },\n  mb2: {\n    marginBottom: theme.spacing(2),\n  },\n}));\n\nconst styles = theme => ({\n  root: {\n    color: theme.palette.primary.main,\n    '&$selected': {\n      color: theme.palette.primary.contrastText,\n      backgroundColor: theme.palette.primary.main,\n      '&:hover': {\n        backgroundColor: theme.palette.primary.light,\n      },\n    },\n    padding: theme.spacing(0.75, 2),\n  },\n  selected: {},\n});\n\nconst StyledToggleButton = withStyles(styles, { withTheme: true })(ToggleButton);\n\nconst Vaccini: React.FC = () => {\n  const classes = useStyles();\n  const [vacc, setVacc] = useState(vaccines);\n  const [shipped, setShipped] = useState(0);\n  const [given, setGiven] = useState(0);\n  const [view, setView] = useState('values');\n  const [regionMap, setRegionMap] = useState({});\n  const [statusByRegion, setStatusByRegion] = useState<Somministrazione[]>([]);\n  const [consegneBySupplier, setConsegneBySupplier] = useState<Consegna[]>([]);\n\n  const theme = useTheme();\n  const isXs = useMediaQuery(theme.breakpoints.down('xs'));\n  const isSm = useMediaQuery(theme.breakpoints.down('sm'));\n\n  const loadRegioni = useCallback(() => {\n    const map = {};\n    Regioni.forEach(r => {\n      map[r.abbreviazione] = r.denominazioneRegione;\n    });\n    setRegionMap(map);\n  }, []);\n\n  useEffect(() => {\n    loadRegioni();\n    refresh().then(vaxx => {\n      setVacc(vaxx);\n      let c = 0;\n      let s = 0;\n      vaxx.forEach(vax => {\n        c += vax.dosiConsegnate;\n        s += vax.dosiSomministrate;\n      });\n      setShipped(c);\n      setGiven(s);\n    });\n    refreshSomministrazioni().then(() => {\n      setStatusByRegion(getStatusByRegionType());\n    });\n    refreshConsegne().then(() => {\n      setConsegneBySupplier(getTotaleConsegneBySupplier());\n    });\n  }, [loadRegioni]);\n\n  const chartData = useMemo(() => {\n    return vacc\n      .sort((a, b) => {\n        return a.area.localeCompare(b.area);\n      })\n      .map(v => ({\n        regione: regionMap[v.area] || v.area,\n        'Dosi consegnate': v.dosiConsegnate,\n        'Dosi somministrate': v.dosiSomministrate,\n        'Percentuale somministrazioni': v.percentualeSomministrazione,\n      }));\n  }, [vacc, regionMap]);\n\n  const chartData2 = useMemo(() => {\n    return statusByRegion.map(v => ({\n      regione: regionMap[v.area] || v.area,\n      ...v,\n    }));\n  }, [statusByRegion, regionMap]);\n\n  const chartData3 = useMemo(() => {\n    return consegneBySupplier.sort((a, b) => {\n      return a.numeroDosi < b.numeroDosi ? 1 : -1;\n    });\n  }, [consegneBySupplier]);\n\n  const lastUpdate = useMemo(() => {\n    let date;\n    vacc.forEach(v => {\n      const d = moment(v.ultimoAggiornamento);\n      if (!date || date.isBefore(d)) {\n        date = d;\n      }\n    });\n    return date;\n  }, [vacc]);\n\n  const getBar = (viewRestriction, name, dataKey, color, stackId) => {\n    return view === viewRestriction ? (\n      <Bar dataKey={dataKey} name={name} stackId={stackId} fill={color} stroke={color} />\n    ) : null;\n  };\n\n  const getChartData = () => {\n    if (view === 'type' || view === 'sex' || view === 'dose') return chartData2;\n    if (view === 'supplier') return chartData3;\n    return chartData;\n  };\n\n  return (\n    <>\n      <Container maxWidth=\"xl\" className={classes.container}>\n        <Grid container spacing={2} className={classes.mb2}>\n          <Hidden mdDown>\n            <Grid item xs={12} sm={6} md={6} lg={3} />\n          </Hidden>\n          <Grid item xs={12} sm={6} md={6} lg={3}>\n            <DataPaper\n              title=\"Consegnati\"\n              value={shipped}\n              icon={<LocalShippingIcon className={classes.bigIcon} />}\n            />\n          </Grid>\n          <Grid item xs={12} sm={6} md={6} lg={3}>\n            <DataPaper\n              title=\"Somministrati\"\n              value={given}\n              icon={<LocalHospitalIcon className={classes.bigIcon} />}\n              percent={shipped === 0 ? 0 : (given * 100) / shipped}\n            />\n          </Grid>\n          <Hidden mdDown>\n            <Grid item xs={12} sm={6} md={6} lg={3} />\n          </Hidden>\n        </Grid>\n\n        <Grid container spacing={2}>\n          <Grid item xs={12} sm={6}>\n            <Typography variant=\"h6\" className={classes.title}>\n              <strong>Dati per regione</strong>\n            </Typography>\n          </Grid>\n          <Hidden xsDown>\n            <Grid item sm={6} className={classes.lastUpdate}>\n              Ultimo aggiornamento: {lastUpdate ? lastUpdate.format('DD/MM/YYYY') : ''}\n            </Grid>\n          </Hidden>\n          <Grid item sm={12}>\n            <div className={classes.buttons}>\n              <ToggleButtonGroup\n                size=\"medium\"\n                value={view}\n                exclusive\n                onChange={(evt, val) => {\n                  setView(val);\n                }}\n              >\n                <StyledToggleButton value=\"values\">Cons./som.</StyledToggleButton>\n                <StyledToggleButton value=\"percent\">Sommin. (%)</StyledToggleButton>\n                <StyledToggleButton value=\"sex\">Sesso</StyledToggleButton>\n                <StyledToggleButton value=\"dose\">Dose</StyledToggleButton>\n                <StyledToggleButton value=\"supplier\">Fornitore</StyledToggleButton>\n              </ToggleButtonGroup>\n            </div>\n          </Grid>\n        </Grid>\n\n        <ResponsiveContainer width=\"100%\" height={isXs ? 500 : isSm ? 600 : 700}>\n          <BarChart\n            data={getChartData()}\n            margin={{ top: 5, right: 30, left: 20, bottom: 5 }}\n            barGap={isXs ? -3 : isSm ? -7 : -15}\n          >\n            <XAxis\n              dataKey={view === 'supplier' ? 'fornitore' : 'regione'}\n              angle={-60}\n              textAnchor=\"end\"\n              height={130}\n              interval={0}\n            />\n            <YAxis width={view === 'percent' ? 30 : 70} />\n            <CartesianGrid strokeDasharray=\"3 3\" />\n            <Tooltip />\n            <Legend />\n            {view === 'values' ? (\n              <Bar dataKey=\"Dosi consegnate\" stackId=\"b\" fill={blue[700]} stroke={blue[900]} />\n            ) : null}\n            {view === 'values' ? (\n              <Bar dataKey=\"Dosi somministrate\" stackId=\"a\" fill={blue[400]} stroke={blue[600]} />\n            ) : null}\n            {view === 'percent' ? (\n              <Bar\n                dataKey=\"Percentuale somministrazioni\"\n                fill={lightGreen[700]}\n                stroke={lightGreen[900]}\n              >\n                {isSm ? null : (\n                  <LabelList\n                    dataKey=\"Percentuale somministrazioni\"\n                    position=\"top\"\n                    formatter={v => `${Number.parseFloat(v).toFixed(1)}%`}\n                  />\n                )}\n              </Bar>\n            ) : null}\n\n            {view === 'sex' ? (\n              <Bar\n                dataKey=\"sessoMaschile\"\n                name=\"Maschi\"\n                stackId=\"a\"\n                fill={lightBlue[400]}\n                stroke={lightBlue[600]}\n              />\n            ) : null}\n            {view === 'sex' ? (\n              <Bar\n                dataKey=\"sessoFemminile\"\n                name=\"Femmine\"\n                stackId=\"a\"\n                fill={pink[300]}\n                stroke={pink[500]}\n              />\n            ) : null}\n\n            {view === 'dose' ? (\n              <Bar\n                dataKey=\"primaDose\"\n                name=\"Prima dose\"\n                stackId=\"a\"\n                fill={orange[700]}\n                stroke={orange[900]}\n              />\n            ) : null}\n            {view === 'dose' ? (\n              <Bar\n                dataKey=\"secondaDose\"\n                name=\"Seconda dose\"\n                stackId=\"a\"\n                fill={orange[400]}\n                stroke={orange[600]}\n              />\n            ) : null}\n\n            {getBar('supplier', 'Dosi consegnate', 'numeroDosi', indigo[600], 'a')}\n          </BarChart>\n        </ResponsiveContainer>\n      </Container>\n\n      <div className={classes.footer}>\n        Fonte dati:{' '}\n        <a href=\"https://github.com/italia/covid19-opendata-vaccini\" target=\"_new\">\n          Commissario straordinario per l&apos;emergenza Covid-19\n        </a>\n      </div>\n    </>\n  );\n};\n\nexport default Vaccini;\n","import React, { useCallback } from 'react';\nimport { AppBar, Toolbar, Typography, IconButton, Button } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { GitHub as GitHubIcon } from '@material-ui/icons';\nimport { useHistory } from 'react-router-dom';\n\nconst useStyles = makeStyles(() => ({\n  title: {\n    display: 'flex',\n    flexDirection: 'column',\n    flexGrow: 1,\n  },\n  subtitle: {\n    lineHeight: 'normal',\n  },\n  github: {\n    color: 'white',\n  },\n  link: {\n    color: 'white',\n  },\n}));\n\ntype TitleProps = {\n  title: string;\n  subtitle: string;\n  linkName: string;\n  link: string;\n};\n\nconst Header: React.FC<TitleProps> = ({ title, subtitle, linkName, link }) => {\n  const classes = useStyles();\n  const history = useHistory();\n\n  const openGitHub = useCallback(() => {\n    window.open('https://github.com/ermannos/covid-19-italy', '_new');\n  }, []);\n\n  return (\n    <AppBar position=\"static\">\n      <Toolbar>\n        <div className={classes.title}>\n          <Typography variant=\"h6\">{title}</Typography>\n          <Typography variant=\"overline\" className={classes.subtitle}>\n            {subtitle}\n          </Typography>\n        </div>\n\n        <Button\n          className={classes.link}\n          color=\"inherit\"\n          onClick={() => {\n            history.push(link);\n          }}\n        >\n          {linkName}\n        </Button>\n        <IconButton className={classes.github} onClick={openGitHub} title=\"GitHub repository\">\n          <GitHubIcon />\n        </IconButton>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nexport default Header;\n","import React, { useMemo, useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Container, Grid, Typography } from '@material-ui/core';\nimport { useParams } from 'react-router-dom';\nimport moment from 'moment';\nimport Regioni from '../data/regioni';\nimport Header from './Header';\nimport {\n  refreshSomministrazioni,\n  getSomministrazioniByRegion,\n  refreshConsegne,\n  getConsegneByRegion,\n} from '../data/vaccini';\nimport { refresh, getByRegionCode } from '../data/dataloader';\nimport DataPaper from '../components/DataPaper';\nimport DataPoint from '../types/datapoint';\nimport { Somministrazione, Consegna } from '../types/vaccini';\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    minHeight: 600,\n    padding: theme.spacing(2, 3),\n  },\n  sectionTitle: {\n    marginBottom: theme.spacing(2),\n  },\n  section: {\n    marginBottom: theme.spacing(4),\n  },\n  subtitle: {\n    fontSize: '60%',\n  },\n  footer: {\n    textAlign: 'center',\n    padding: theme.spacing(2, 0),\n    backgroundColor: '#c0c0c0',\n  },\n}));\n\ninterface ParamTypes {\n  code: string;\n}\n\nconst Regione: React.FC = () => {\n  const classes = useStyles();\n  const code = Number.parseInt(useParams<ParamTypes>().code, 10);\n  const [covidData, setCovidData] = useState<DataPoint[]>([]);\n  const [somministrazioni, setSomministrazioni] = useState<Somministrazione[]>([]);\n  const [consegne, setConsegne] = useState<Consegna[]>([]);\n\n  const regione = useMemo(() => {\n    return Regioni.find(r => r.codiceRegione === code);\n  }, [code]);\n\n  useEffect(() => {\n    refresh().then(() => {\n      setCovidData(getByRegionCode(code));\n    });\n    refreshSomministrazioni().then(() => {\n      setSomministrazioni(getSomministrazioniByRegion(regione?.abbreviazione || '?'));\n    });\n    refreshConsegne().then(() => {\n      setConsegne(getConsegneByRegion(regione?.abbreviazione || '?'));\n    });\n  }, [code, regione]);\n\n  const previousData: DataPoint | undefined = covidData.length\n    ? covidData[covidData.length - 2]\n    : undefined;\n  const lastData: DataPoint | undefined = covidData.length\n    ? covidData[covidData.length - 1]\n    : undefined;\n  const previousSomministrazione: Somministrazione | undefined = somministrazioni.length\n    ? somministrazioni[somministrazioni.length - 2]\n    : undefined;\n  const lastSomministrazione: Somministrazione | undefined = somministrazioni.length\n    ? somministrazioni[somministrazioni.length - 1]\n    : undefined;\n\n  const lastConsegna1: Consegna | undefined =\n    consegne.length >= 4 ? consegne[consegne.length - 4] : undefined;\n  const lastConsegna2: Consegna | undefined =\n    consegne.length >= 3 ? consegne[consegne.length - 3] : undefined;\n  const lastConsegna3: Consegna | undefined =\n    consegne.length >= 2 ? consegne[consegne.length - 2] : undefined;\n  const lastConsegna4: Consegna | undefined = consegne.length\n    ? consegne[consegne.length - 1]\n    : undefined;\n\n  return (\n    <>\n      <Header\n        title=\"Covid-19 Italia\"\n        subtitle={`Focus ${regione?.denominazioneRegione}`}\n        linkName=\"Epidemia\"\n        link={`/epidemia/${code}`}\n      />\n      <Container maxWidth=\"xl\" className={classes.container}>\n        <Typography variant=\"h4\" className={classes.sectionTitle}>\n          Situazione epidemia{' '}\n          <span className={classes.subtitle}>\n            {lastData ? ` al ${moment(lastData.data).format('DD/MM/YYYY')}` : ''}\n          </span>\n        </Typography>\n        <Grid container spacing={2} className={classes.section}>\n          <Grid item md={3} sm={4} xs={12}>\n            <DataPaper\n              title=\"Pazienti degenti\"\n              value={lastData?.ricoveratiConSintomi || 0}\n              delta={\n                (lastData?.ricoveratiConSintomi || 0) - (previousData?.ricoveratiConSintomi || 0)\n              }\n            />\n          </Grid>\n          <Grid item md={3} sm={4} xs={12}>\n            <DataPaper\n              title=\"Pazienti intensiva\"\n              value={lastData?.terapiaIntensiva || 0}\n              delta={(lastData?.terapiaIntensiva || 0) - (previousData?.terapiaIntensiva || 0)}\n            />\n          </Grid>\n          <Grid item md={3} sm={4} xs={12}>\n            <DataPaper\n              title=\"Pazienti deceduti\"\n              value={lastData?.deceduti || 0}\n              delta={(lastData?.deceduti || 0) - (previousData?.deceduti || 0)}\n            />\n          </Grid>\n          <Grid item md={3} sm={4} xs={12}>\n            <DataPaper\n              title=\"Tamponi effettuati\"\n              value={lastData?.tamponi || 0}\n              delta={(lastData?.tamponi || 0) - (previousData?.tamponi || 0)}\n            />\n          </Grid>\n          <Grid item md={3} sm={4} xs={12}>\n            <DataPaper\n              title=\"Tamponi positivi\"\n              value={lastData?.nuoviPositivi || 0}\n              percent={lastData?.positiviTamponi || 0}\n            />\n          </Grid>\n          <Grid item md={3} sm={4} xs={12}>\n            <DataPaper\n              title=\"Attualmente positivi\"\n              value={lastData?.totalePositivi || 0}\n              delta={(lastData?.totalePositivi || 0) - (previousData?.totalePositivi || 0)}\n            />\n          </Grid>\n        </Grid>\n\n        <Typography variant=\"h4\" className={classes.sectionTitle}>\n          Campagna vaccinale\n          <span className={classes.subtitle}>\n            {lastData\n              ? ` al ${moment(lastSomministrazione?.dataSomministrazione).format('DD/MM/YYYY')}`\n              : ''}\n          </span>\n        </Typography>\n        <Grid container spacing={2} className={classes.section}>\n          <Grid item md={3} sm={4} xs={12}>\n            <DataPaper\n              title=\"Vaccini somministrati\"\n              value={lastSomministrazione?.totale || 0}\n              delta={(lastSomministrazione?.totale || 0) - (previousSomministrazione?.totale || 0)}\n            />\n          </Grid>\n          <Grid item md={3} sm={4} xs={12}>\n            <DataPaper\n              title=\"Somm. prima dose\"\n              value={lastSomministrazione?.primaDose || 0}\n              delta={\n                (lastSomministrazione?.primaDose || 0) - (previousSomministrazione?.primaDose || 0)\n              }\n            />\n          </Grid>\n          <Grid item md={3} sm={4} xs={12}>\n            <DataPaper\n              title=\"Somm. seconda dose\"\n              value={lastSomministrazione?.secondaDose || 0}\n              delta={\n                (lastSomministrazione?.secondaDose || 0) -\n                (previousSomministrazione?.secondaDose || 0)\n              }\n            />\n          </Grid>\n          <Grid item md={3} sm={4} xs={12}>\n            <DataPaper\n              title=\"Somm. dose booster\"\n              value={lastSomministrazione?.doseBooster || 0}\n              delta={\n                (lastSomministrazione?.doseBooster || 0) -\n                (previousSomministrazione?.doseBooster || 0)\n              }\n            />\n          </Grid>\n        </Grid>\n\n        <Typography variant=\"h4\" className={classes.sectionTitle}>\n          Ultime consegne vaccini\n        </Typography>\n        <Grid container spacing={2} className={classes.section}>\n          <Grid item md={3} sm={4} xs={12}>\n            <DataPaper\n              title={\n                lastConsegna1\n                  ? `${lastConsegna1.fornitore} - ${moment(lastConsegna1.dataConsegna).format(\n                      'DD MMM'\n                    )}`\n                  : ''\n              }\n              value={lastConsegna2?.numeroDosi || 0}\n            />\n          </Grid>\n          <Grid item md={3} sm={4} xs={12}>\n            <DataPaper\n              title={\n                lastConsegna2\n                  ? `${lastConsegna2.fornitore} - ${moment(lastConsegna2.dataConsegna).format(\n                      'DD MMM'\n                    )}`\n                  : ''\n              }\n              value={lastConsegna2?.numeroDosi || 0}\n            />\n          </Grid>\n          <Grid item md={3} sm={4} xs={12}>\n            <DataPaper\n              title={\n                lastConsegna3\n                  ? `${lastConsegna3.fornitore} - ${moment(lastConsegna3.dataConsegna).format(\n                      'DD MMM'\n                    )}`\n                  : ''\n              }\n              value={lastConsegna3?.numeroDosi || 0}\n            />\n          </Grid>\n          <Grid item md={3} sm={4} xs={12}>\n            <DataPaper\n              title={\n                lastConsegna4\n                  ? `${lastConsegna4.fornitore} - ${moment(lastConsegna4.dataConsegna).format(\n                      'DD MMM'\n                    )}`\n                  : ''\n              }\n              value={lastConsegna4?.numeroDosi || 0}\n            />\n          </Grid>\n        </Grid>\n      </Container>\n\n      <div className={classes.footer}>\n        Fonti dati:{' '}\n        <a href=\"https://github.com/pcm-dpc/COVID-19\" target=\"_new\">\n          Presidenza del Consiglio dei Ministri - Dipartimento della Protezione Civile\n        </a>\n        <br />\n        <a href=\"https://github.com/italia/covid19-opendata-vaccini\" target=\"_new\">\n          Commissario straordinario per l&apos;emergenza Covid-19\n        </a>\n      </div>\n    </>\n  );\n};\n\nexport default Regione;\n","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom';\n\nimport Home from './pages/Home';\nimport Vaccini from './pages/Vaccini';\nimport Regione from './pages/Regione';\nimport Header from './pages/Header';\nimport './App.css';\n\nconst App: React.FC = () => {\n  return (\n    <Router basename=\"/covid-19-italy\">\n      <Switch>\n        <Route exact path=\"/\">\n          <Redirect to=\"/epidemia/99\" />\n        </Route>\n\n        <Route exact path={['/epidemia/:regione']}>\n          <Header\n            title=\"Covid-19 Italia\"\n            subtitle=\"Andamento epidemia\"\n            linkName=\"Vaccini\"\n            link=\"/vaccini\"\n          />\n          <Home />\n        </Route>\n\n        <Route path={['/vaccini']}>\n          <Header\n            title=\"Covid-19 Italia\"\n            subtitle=\"Andamento campagna vaccinale\"\n            linkName=\"Home\"\n            link=\"/\"\n          />\n          <Vaccini />\n        </Route>\n        <Route path={['/regione/:code']}>\n          <Regione />\n        </Route>\n      </Switch>\n    </Router>\n  );\n};\n\nexport default App;\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\nimport { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport { blue, amber } from '@material-ui/core/colors';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst palette = {\n  primary: {\n    main: blue['900'],\n  },\n  secondary: amber,\n};\n\nconst theme = createMuiTheme({\n  palette,\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}