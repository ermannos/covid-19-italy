{"version":3,"sources":["data/dataloader.ts","data/regioni.ts","pages/Home.tsx","pages/Page.tsx","pages/Header.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["datapoints","refresh","data","axios","get","then","response","json","forEach","row","point","stato","codiceRegione","codice_regione","denominazioneRegione","denominazione_regione","lat","long","lang","ricoveratiConSintomi","ricoverati_con_sintomi","terapiaIntensiva","terapia_intensiva","totaleOspedalizzati","totale_ospedalzzati","isolamentoDomiciliare","isolamento_domiciliare","totalePositivi","totale_positivi","variazioneTotalePositivi","variazione_totale_positivi","nuoviPositivi","nuovi_positivi","dimessiGuariti","dimessi_guariti","deceduti","casiDaSospettoDiagnostico","casi_da_sospetto_diagnostico","casiDaScreening","casi_da_screening","totaleCasi","totale_casi","tamponi","casiTestati","casi_testati","note","push","catch","err","console","error","loadAllData","points","Regioni","useStyles","makeStyles","theme","container","padding","spacing","formControl","minWidth","grafici","1","value","description","field","2","3","4","5","6","7","8","Home","classes","useState","regione","setRegione","grafico","setGrafico","setDatapoints","useEffect","regionCode","filter","chartData","useMemo","map","p","moment","format","Container","maxWidth","className","Grid","item","xl","lg","md","sm","xs","FormControl","variant","size","Select","labelId","id","onChange","evt","target","placeholder","r","MenuItem","Object","values","g","width","height","margin","top","right","left","bottom","dataKey","strokeDasharray","type","name","stroke","blue","fill","style","textAlign","fontSize","href","Page","title","flexGrow","Header","AppBar","position","Toolbar","Typography","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","palette","primary","main","secondary","amber","createMuiTheme","ReactDOM","render","StrictMode","ThemeProvider","document","getElementById"],"mappings":"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","file":"static/js/main.97acccc2.chunk.js","sourcesContent":["import axios from 'axios';\nimport DataPoint from './datapoint';\n\nconst url =\n  'https://raw.githubusercontent.com/pcm-dpc/COVID-19/master/dati-json/dpc-covid19-ita-regioni.json';\n\nconst datapoints: DataPoint[] = [];\n\nconst loadAllData = (): Promise<DataPoint[]> => {\n  const data: DataPoint[] = [];\n  return axios\n    .get(url)\n    .then(response => response.data)\n    .then(json => {\n      json.forEach(row => {\n        const point: DataPoint = {\n          data: row.data,\n          stato: row.stato,\n          codiceRegione: row.codice_regione,\n          denominazioneRegione: row.denominazione_regione,\n          lat: row.lat,\n          long: row.lang,\n          ricoveratiConSintomi: row.ricoverati_con_sintomi,\n          terapiaIntensiva: row.terapia_intensiva,\n          totaleOspedalizzati: row.totale_ospedalzzati,\n          isolamentoDomiciliare: row.isolamento_domiciliare,\n          totalePositivi: row.totale_positivi,\n          variazioneTotalePositivi: row.variazione_totale_positivi,\n          nuoviPositivi: row.nuovi_positivi,\n          dimessiGuariti: row.dimessi_guariti,\n          deceduti: row.deceduti,\n          casiDaSospettoDiagnostico: row.casi_da_sospetto_diagnostico,\n          casiDaScreening: row.casi_da_screening,\n          totaleCasi: row.totale_casi,\n          tamponi: row.tamponi,\n          casiTestati: row.casi_testati,\n          note: row.note,\n        };\n        data.push(point);\n      });\n      return data;\n    })\n    .catch(err => {\n      // eslint-disable-next-line no-console\n      console.error(err);\n      return data;\n    });\n};\n\nconst getByRegionCode = (regionCode: number): DataPoint[] => {\n  return datapoints.filter(point => point.codiceRegione === regionCode);\n};\n\nconst refresh = () => {\n  return loadAllData().then(points => {\n    points.forEach(point => {\n      datapoints.push(point);\n    });\n    return datapoints;\n  });\n};\n\nexport { refresh, datapoints, getByRegionCode };\n","import Regione from './regione';\n\nconst Regioni: Regione[] = [\n  {\n    codiceRegione: 13,\n    denominazioneRegione: 'Abruzzo',\n  },\n  {\n    codiceRegione: 17,\n    denominazioneRegione: 'Basilicata',\n  },\n  {\n    codiceRegione: 18,\n    denominazioneRegione: 'Calabria',\n  },\n  {\n    codiceRegione: 15,\n    denominazioneRegione: 'Campania',\n  },\n  {\n    codiceRegione: 8,\n    denominazioneRegione: 'Emilia romagna',\n  },\n  {\n    codiceRegione: 6,\n    denominazioneRegione: 'Friuli Venezia Giulia',\n  },\n  {\n    codiceRegione: 12,\n    denominazioneRegione: 'Lazio',\n  },\n  {\n    codiceRegione: 7,\n    denominazioneRegione: 'Liguria',\n  },\n  {\n    codiceRegione: 3,\n    denominazioneRegione: 'Lombardia',\n  },\n  {\n    codiceRegione: 11,\n    denominazioneRegione: 'Marche',\n  },\n  {\n    codiceRegione: 14,\n    denominazioneRegione: 'Molise',\n  },\n  {\n    codiceRegione: 21,\n    denominazioneRegione: 'P.A. bolzano',\n  },\n  {\n    codiceRegione: 22,\n    denominazioneRegione: 'P.A. Trento',\n  },\n  {\n    codiceRegione: 1,\n    denominazioneRegione: 'Piemonte',\n  },\n  {\n    codiceRegione: 16,\n    denominazioneRegione: 'Puglia',\n  },\n  {\n    codiceRegione: 20,\n    denominazioneRegione: 'Sardegna',\n  },\n  {\n    codiceRegione: 19,\n    denominazioneRegione: 'Sicilia',\n  },\n  {\n    codiceRegione: 9,\n    denominazioneRegione: 'Toscana',\n  },\n  {\n    codiceRegione: 10,\n    denominazioneRegione: 'Umbria',\n  },\n  {\n    codiceRegione: 2,\n    denominazioneRegione: 'Valle D\\'Aosta',\n  },\n  {\n    codiceRegione: 5,\n    denominazioneRegione: 'Veneto',\n  },\n];\n\nexport default Regioni;\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/no-redeclare */\nimport React, { useEffect, useState, useMemo } from 'react';\nimport { Container, FormControl, Select, MenuItem, Grid } from '@material-ui/core';\nimport { blue, amber } from '@material-ui/core/colors';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n  ResponsiveContainer,\n  AreaChart,\n  Area,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n} from 'recharts';\nimport moment from 'moment';\nimport { refresh, getByRegionCode } from '../data/dataloader';\nimport DataPoint from '../data/datapoint';\nimport Regioni from '../data/regioni';\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    padding: theme.spacing(2, 3),\n  },\n  formControl: {\n    minWidth: 200,\n  },\n}));\n\nconst grafici = {\n  1: { value: 1, description: 'Pazienti degenti', field: 'ricoveratiConSintomi' },\n  2: { value: 2, description: 'Pazienti intensiva', field: 'terapiaIntensiva' },\n  3: { value: 3, description: 'Totale degenti', field: 'totaleOspedalizzati' },\n  4: { value: 4, description: 'Decessi', field: 'deceduti' },\n  5: { value: 5, description: 'Tamponi', field: 'tamponi' },\n  6: { value: 6, description: 'Nuovi positivi', field: 'nuoviPositivi' },\n  7: { value: 7, description: 'Totale positivi', field: 'totalePositivi' },\n  8: { value: 8, description: 'Totale casi', field: 'totaleCasi' },\n};\n\nconst Home: React.FC = () => {\n  const classes = useStyles();\n  const [regione, setRegione] = useState(0);\n  const [grafico, setGrafico] = useState(1);\n  const [datapoints, setDatapoints] = useState<DataPoint[]>();\n\n  useEffect(() => {\n    refresh().then(() => {\n      setRegione(3);\n    });\n  }, []);\n\n  useEffect(() => {\n    if (regione) setDatapoints(getByRegionCode(regione));\n  }, [regione]);\n\n  const onChangeRegione = evt => {\n    setRegione(evt.target.value);\n  };\n\n  const onChangeGrafico = evt => {\n    setGrafico(evt.target.value);\n  };\n\n  const chartData = useMemo(() => {\n    if (!datapoints) return [];\n    return datapoints.map(p => ({\n      data: moment(p.data).format('DD.MM.YYYY'),\n      value: p[grafici[grafico].field],\n    }));\n  }, [datapoints, grafico]);\n\n  return (\n    <Container maxWidth=\"xl\" className={classes.container}>\n      <Grid container spacing={2}>\n        <Grid item xl={2} lg={2} md={3} sm={4} xs={6}>\n          <FormControl variant=\"outlined\" size=\"small\" className={classes.formControl}>\n            <Select\n              labelId=\"demo-controlled-open-select-label\"\n              id=\"demo-controlled-open-select\"\n              value={regione}\n              onChange={onChangeRegione}\n              placeholder=\"Regione\"\n            >\n              {Regioni.map(r => (\n                <MenuItem key={`reg-${r.codiceRegione}`} value={r.codiceRegione}>\n                  {r.denominazioneRegione}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n        </Grid>\n\n        <Grid item xl={2} lg={2} md={3} sm={4} xs={6}>\n          <FormControl variant=\"outlined\" size=\"small\" className={classes.formControl}>\n            <Select\n              labelId=\"demo-controlled-open-select-label\"\n              id=\"demo-controlled-open-select\"\n              value={grafico}\n              onChange={onChangeGrafico}\n              placeholder=\"Grafico\"\n            >\n              {Object.values(grafici).map(g => (\n                <MenuItem key={`gf-${g.value}`} value={g.value}>\n                  {g.description}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n        </Grid>\n\n        <Grid item xl={8} lg={8} md={6} sm={4} xs={12}>\n          &nbsp;\n        </Grid>\n\n        <Grid item xs={12}>\n          <ResponsiveContainer width=\"100%\" height={700}>\n            <AreaChart data={chartData} margin={{ top: 5, right: 30, left: 20, bottom: 5 }}>\n              <XAxis dataKey=\"data\" />\n              <YAxis />\n              <CartesianGrid strokeDasharray=\"3 3\" />\n              <Tooltip />\n              <Legend />\n              <Area\n                type=\"monotone\"\n                name={grafici[grafico].description}\n                dataKey=\"value\"\n                stroke={blue[900]}\n                fill={blue[700]}\n              />\n            </AreaChart>\n          </ResponsiveContainer>\n        </Grid>\n\n        <Grid item xs={12} style={{ textAlign: 'center', fontSize: 'smaller' }}>\n          Data source:{' '}\n          <a href=\"https://github.com/pcm-dpc/COVID-19\" target=\"_new\">\n            Presidenza del Consiglio dei Ministri - Dipartimento della Protezione Civile\n          </a>\n        </Grid>\n      </Grid>\n    </Container>\n  );\n};\n\nexport default Home;\n","import React from 'react';\n\nconst Page: React.FC = () => {\n  return <div>page</div>;\n};\n\nexport default Page;\n","import React from 'react';\nimport { AppBar, Toolbar, Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(() => ({\n  title: {\n    flexGrow: 1,\n  },\n}));\n\ntype TitleProps = {\n  title: string;\n};\n\nconst Header: React.FC<TitleProps> = ({ title }) => {\n  const classes = useStyles();\n  return (\n    <AppBar position=\"static\">\n      <Toolbar>\n        <Typography variant=\"h6\" className={classes.title}>\n          {title}\n        </Typography>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nexport default Header;\n","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Home from './pages/Home';\nimport Page from './pages/Page';\nimport Header from './pages/Header';\nimport './App.css';\n\nconst App: React.FC = () => {\n  return (\n    <Router>\n      <Header title=\"Covid-19 Italia\" />\n      <Switch>\n        <Route exact path=\"/\">\n          <Home />\n        </Route>\n        <Route path=\"/page\">\n          <Page />\n        </Route>\n      </Switch>\n    </Router>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport { blue, amber } from '@material-ui/core/colors';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst palette = {\n  primary: {\n    main: blue['900'],\n  },\n  secondary: amber,\n};\n\nconst theme = createMuiTheme({\n  palette,\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}