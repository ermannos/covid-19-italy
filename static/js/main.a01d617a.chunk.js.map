{"version":3,"sources":["data/dataloader.ts","data/regioni.ts","pages/Home.tsx","pages/Page.tsx","pages/Header.tsx","pages/Footer.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["regionalData","nationalData","loadData","url","data","axios","get","then","response","json","forEach","row","point","stato","codiceRegione","codice_regione","denominazioneRegione","denominazione_regione","lat","long","lang","ricoveratiConSintomi","ricoverati_con_sintomi","terapiaIntensiva","terapia_intensiva","totaleOspedalizzati","totale_ospedalzzati","isolamentoDomiciliare","isolamento_domiciliare","totalePositivi","totale_positivi","variazioneTotalePositivi","variazione_totale_positivi","nuoviPositivi","nuovi_positivi","dimessiGuariti","dimessi_guariti","deceduti","decedutiTotali","casiDaSospettoDiagnostico","casi_da_sospetto_diagnostico","casiDaScreening","casi_da_screening","totaleCasi","totale_casi","tamponi","tamponiTotali","positiviTamponi","casiTestati","casi_testati","note","push","catch","err","console","error","calculateDerivedData","previousPoint","Math","round","Regioni","useStyles","makeStyles","theme","container","padding","spacing","formControl","minWidth","lastUpdate","textAlign","footer","backgroundColor","color","grafici","1","value","description","field","2","3","4","5","6","7","8","9","10","11","Home","classes","useState","regione","setRegione","grafico","setGrafico","datapoints","setDatapoints","useEffect","Promise","all","rData","nData","regionCode","filter","map","p","newPoint","getByRegionCode","chartData","useMemo","moment","format","Container","maxWidth","className","Grid","item","xl","lg","md","sm","xs","FormControl","variant","size","Select","labelId","id","onChange","evt","target","placeholder","r","MenuItem","Object","values","g","Typography","length","width","height","margin","top","right","left","bottom","dataKey","strokeDasharray","type","name","stroke","blue","fill","Page","title","flexGrow","github","Header","openGitHub","useCallback","window","open","AppBar","position","Toolbar","IconButton","onClick","GitHub","Footer","href","App","basename","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","palette","primary","main","secondary","amber","createMuiTheme","ReactDOM","render","StrictMode","ThemeProvider","document","getElementById"],"mappings":"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","file":"static/js/main.a01d617a.chunk.js","sourcesContent":["/* eslint-disable no-param-reassign */\nimport axios from 'axios';\nimport DataPoint from '../types/datapoint';\n\nconst regionalUrl =\n  'https://raw.githubusercontent.com/pcm-dpc/COVID-19/master/dati-json/dpc-covid19-ita-regioni.json';\nconst nationalUrl =\n  'https://raw.githubusercontent.com/pcm-dpc/COVID-19/master/dati-json/dpc-covid19-ita-andamento-nazionale.json';\n\nconst regionalData: DataPoint[] = [];\nconst nationalData: DataPoint[] = [];\n\nconst loadData = (url: string): Promise<DataPoint[]> => {\n  const data: DataPoint[] = [];\n  return axios\n    .get(url)\n    .then(response => response.data)\n    .then(json => {\n      json.forEach(row => {\n        const point: DataPoint = {\n          data: row.data,\n          stato: row.stato,\n          codiceRegione: row.codice_regione,\n          denominazioneRegione: row.denominazione_regione,\n          lat: row.lat,\n          long: row.lang,\n          ricoveratiConSintomi: row.ricoverati_con_sintomi,\n          terapiaIntensiva: row.terapia_intensiva,\n          totaleOspedalizzati: row.totale_ospedalzzati,\n          isolamentoDomiciliare: row.isolamento_domiciliare,\n          totalePositivi: row.totale_positivi,\n          variazioneTotalePositivi: row.variazione_totale_positivi,\n          nuoviPositivi: row.nuovi_positivi,\n          dimessiGuariti: row.dimessi_guariti,\n          deceduti: 0,\n          decedutiTotali: row.deceduti,\n          casiDaSospettoDiagnostico: row.casi_da_sospetto_diagnostico,\n          casiDaScreening: row.casi_da_screening,\n          totaleCasi: row.totale_casi,\n          tamponi: 0,\n          tamponiTotali: row.tamponi,\n          positiviTamponi: 0,\n          casiTestati: row.casi_testati,\n          note: row.note,\n        };\n        data.push(point);\n      });\n\n      return data;\n    })\n    .catch(err => {\n      // eslint-disable-next-line no-console\n      console.error(err);\n      return data;\n    });\n};\n\nconst loadRegionalData = (): Promise<DataPoint[]> => {\n  return loadData(regionalUrl);\n};\n\nconst loadNationalData = (): Promise<DataPoint[]> => {\n  return loadData(nationalUrl);\n};\n\nconst calculateDerivedData = (point: DataPoint, previousPoint: DataPoint): DataPoint => {\n  return {\n    ...point,\n    deceduti: previousPoint ? point.decedutiTotali - previousPoint.decedutiTotali : 0,\n    tamponi: previousPoint ? point.tamponiTotali - previousPoint.tamponiTotali : 0,\n    totaleOspedalizzati: previousPoint ? point.terapiaIntensiva + point.ricoveratiConSintomi : 0,\n    positiviTamponi: previousPoint\n      ? Math.round((point.tamponiTotali - previousPoint.tamponiTotali) * 10000) / 100\n      : 0,\n  };\n};\n\nconst getByRegionCode = (regionCode: number): DataPoint[] => {\n  const points = regionalData.filter(point => point.codiceRegione === regionCode);\n\n  let previousPoint: DataPoint;\n  return points.map(p => {\n    const newPoint = calculateDerivedData(p, previousPoint);\n    previousPoint = p;\n    return newPoint;\n  });\n};\n\nconst refresh = (): Promise<void> => {\n  return Promise.all([loadRegionalData(), loadNationalData()]).then(([rData, nData]) => {\n    rData.forEach(point => {\n      regionalData.push(point);\n    });\n\n    let previousPoint: DataPoint;\n    nData.forEach(point => {\n      nationalData.push(calculateDerivedData(point, previousPoint));\n      previousPoint = point;\n    });\n  });\n};\n\nexport { refresh, getByRegionCode, nationalData };\n","import Regione from '../types/regione';\n\nconst Regioni: Regione[] = [\n  {\n    codiceRegione: 99,\n    denominazioneRegione: 'ITALIA',\n  },\n  {\n    codiceRegione: 13,\n    denominazioneRegione: 'Abruzzo',\n  },\n  {\n    codiceRegione: 17,\n    denominazioneRegione: 'Basilicata',\n  },\n  {\n    codiceRegione: 18,\n    denominazioneRegione: 'Calabria',\n  },\n  {\n    codiceRegione: 15,\n    denominazioneRegione: 'Campania',\n  },\n  {\n    codiceRegione: 8,\n    denominazioneRegione: 'Emilia romagna',\n  },\n  {\n    codiceRegione: 6,\n    denominazioneRegione: 'Friuli Venezia Giulia',\n  },\n  {\n    codiceRegione: 12,\n    denominazioneRegione: 'Lazio',\n  },\n  {\n    codiceRegione: 7,\n    denominazioneRegione: 'Liguria',\n  },\n  {\n    codiceRegione: 3,\n    denominazioneRegione: 'Lombardia',\n  },\n  {\n    codiceRegione: 11,\n    denominazioneRegione: 'Marche',\n  },\n  {\n    codiceRegione: 14,\n    denominazioneRegione: 'Molise',\n  },\n  {\n    codiceRegione: 21,\n    denominazioneRegione: 'P.A. Bolzano',\n  },\n  {\n    codiceRegione: 22,\n    denominazioneRegione: 'P.A. Trento',\n  },\n  {\n    codiceRegione: 1,\n    denominazioneRegione: 'Piemonte',\n  },\n  {\n    codiceRegione: 16,\n    denominazioneRegione: 'Puglia',\n  },\n  {\n    codiceRegione: 20,\n    denominazioneRegione: 'Sardegna',\n  },\n  {\n    codiceRegione: 19,\n    denominazioneRegione: 'Sicilia',\n  },\n  {\n    codiceRegione: 9,\n    denominazioneRegione: 'Toscana',\n  },\n  {\n    codiceRegione: 10,\n    denominazioneRegione: 'Umbria',\n  },\n  {\n    codiceRegione: 2,\n    denominazioneRegione: \"Valle D'Aosta\",\n  },\n  {\n    codiceRegione: 5,\n    denominazioneRegione: 'Veneto',\n  },\n];\n\nexport default Regioni;\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/no-redeclare */\nimport React, { useEffect, useState, useMemo } from 'react';\nimport { Container, FormControl, Select, MenuItem, Grid, Typography } from '@material-ui/core';\nimport { blue } from '@material-ui/core/colors';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n  ResponsiveContainer,\n  AreaChart,\n  Area,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n} from 'recharts';\nimport moment from 'moment';\nimport { refresh, getByRegionCode, nationalData } from '../data/dataloader';\nimport Regioni from '../data/regioni';\nimport DataPoint from '../types/datapoint';\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    padding: theme.spacing(2, 3),\n  },\n  formControl: {\n    minWidth: 200,\n  },\n  lastUpdate: {\n    textAlign: 'right',\n    padding: theme.spacing(2),\n  },\n  footer: {\n    backgroundColor: 'black',\n    color: 'white',\n  },\n}));\n\nconst grafici = {\n  1: { value: 1, description: 'Pazienti degenti', field: 'ricoveratiConSintomi' },\n  2: { value: 2, description: 'Pazienti intensiva', field: 'terapiaIntensiva' },\n  3: { value: 3, description: 'Totale degenti', field: 'totaleOspedalizzati' },\n  4: { value: 4, description: 'Decessi giornalieri', field: 'deceduti' },\n  5: { value: 5, description: 'Decessi totali', field: 'decedutiTotali' },\n  6: { value: 6, description: 'Tamponi giornalieri', field: 'tamponi' },\n  7: { value: 7, description: 'Tamponi totali', field: 'tamponiTotali' },\n  8: { value: 8, description: 'Nuovi positivi', field: 'nuoviPositivi' },\n  9: { value: 9, description: 'Totale positivi', field: 'totalePositivi' },\n  10: { value: 10, description: 'Totale casi', field: 'totaleCasi' },\n  11: { value: 11, description: 'Percentuale di positivi giornalieri', field: 'positiviTamponi' },\n};\n\nconst Home: React.FC = () => {\n  const classes = useStyles();\n  const [regione, setRegione] = useState(0);\n  const [grafico, setGrafico] = useState(1);\n  const [datapoints, setDatapoints] = useState<DataPoint[]>();\n\n  useEffect(() => {\n    refresh().then(() => {\n      setRegione(99);\n    });\n  }, []);\n\n  useEffect(() => {\n    if (regione) {\n      if (regione === 99) {\n        setDatapoints(nationalData);\n      } else {\n        setDatapoints(getByRegionCode(regione));\n      }\n    }\n  }, [regione]);\n\n  const onChangeRegione = evt => {\n    setRegione(evt.target.value);\n  };\n\n  const onChangeGrafico = evt => {\n    setGrafico(evt.target.value);\n  };\n\n  const chartData = useMemo(() => {\n    if (!datapoints) return [];\n    return datapoints.map(p => ({\n      data: moment(p.data).format('DD.MM.YYYY'),\n      value: p[grafici[grafico].field],\n    }));\n  }, [datapoints, grafico]);\n\n  return (\n    <Container maxWidth=\"xl\" className={classes.container}>\n      <Grid container spacing={2}>\n        <Grid item xl={2} lg={2} md={3} sm={4} xs={6}>\n          <FormControl variant=\"outlined\" size=\"small\" className={classes.formControl}>\n            <Select\n              labelId=\"demo-controlled-open-select-label\"\n              id=\"demo-controlled-open-select\"\n              value={regione}\n              onChange={onChangeRegione}\n              placeholder=\"Regione\"\n            >\n              {Regioni.map(r => (\n                <MenuItem key={`reg-${r.codiceRegione}`} value={r.codiceRegione}>\n                  {r.denominazioneRegione}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n        </Grid>\n\n        <Grid item xl={2} lg={2} md={3} sm={4} xs={6}>\n          <FormControl variant=\"outlined\" size=\"small\" className={classes.formControl}>\n            <Select\n              labelId=\"demo-controlled-open-select-label\"\n              id=\"demo-controlled-open-select\"\n              value={grafico}\n              onChange={onChangeGrafico}\n              placeholder=\"Grafico\"\n            >\n              {Object.values(grafici).map(g => (\n                <MenuItem key={`gf-${g.value}`} value={g.value}>\n                  {g.description}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n        </Grid>\n\n        <Grid item xl={8} lg={8} md={6} sm={4} xs={12}>\n          <div className={classes.lastUpdate}>\n            <Typography>\n              Ultimo aggiornamento:{' '}\n              {datapoints && datapoints.length\n                ? moment(datapoints[datapoints.length - 1].data).format('DD/MM/YYYY')\n                : '-'}\n            </Typography>\n          </div>\n        </Grid>\n\n        <Grid item xs={12}>\n          <ResponsiveContainer width=\"100%\" height={700}>\n            <AreaChart data={chartData} margin={{ top: 5, right: 30, left: 20, bottom: 5 }}>\n              <XAxis dataKey=\"data\" />\n              <YAxis />\n              <CartesianGrid strokeDasharray=\"3 3\" />\n              <Tooltip />\n              <Legend />\n              <Area\n                type=\"monotone\"\n                name={grafici[grafico].description}\n                dataKey=\"value\"\n                stroke={blue[900]}\n                fill={blue[700]}\n              />\n            </AreaChart>\n          </ResponsiveContainer>\n        </Grid>\n      </Grid>\n    </Container>\n  );\n};\n\nexport default Home;\n","import React from 'react';\n\nconst Page: React.FC = () => {\n  return <div>page</div>;\n};\n\nexport default Page;\n","import React, { useCallback } from 'react';\nimport { AppBar, Toolbar, Typography, IconButton } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { GitHub as GitHubIcon } from '@material-ui/icons';\n\nconst useStyles = makeStyles(() => ({\n  title: {\n    flexGrow: 1,\n  },\n  github: {\n    color: 'white',\n  },\n}));\n\ntype TitleProps = {\n  title: string;\n};\n\nconst Header: React.FC<TitleProps> = ({ title }) => {\n  const classes = useStyles();\n\n  const openGitHub = useCallback(() => {\n    window.open('https://github.com/ermannos/covid-19-italy', '_new');\n  }, []);\n  return (\n    <AppBar position=\"static\">\n      <Toolbar>\n        <Typography variant=\"h6\" className={classes.title}>\n          {title}\n        </Typography>\n\n        <IconButton className={classes.github} onClick={openGitHub} title=\"GitHub repository\">\n          <GitHubIcon />\n        </IconButton>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nexport default Header;\n","import React from 'react';\nimport { blue } from '@material-ui/core/colors';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n  footer: {\n    backgroundColor: blue[900],\n    color: 'white',\n    textAlign: 'center',\n    padding: theme.spacing(2, 0),\n  },\n}));\n\nconst Footer: React.FC = () => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.footer}>\n      Data source:{' '}\n      <a href=\"https://github.com/pcm-dpc/COVID-19\" target=\"_new\">\n        Presidenza del Consiglio dei Ministri - Dipartimento della Protezione Civile\n      </a>\n    </div>\n  );\n};\n\nexport default Footer;\n","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Home from './pages/Home';\nimport Page from './pages/Page';\nimport Header from './pages/Header';\nimport Footer from './pages/Footer';\nimport './App.css';\n\nconst App: React.FC = () => {\n  return (\n    <Router basename=\"/covid-19-italy\">\n      <Header title=\"Covid-19 Italia\" />\n      <Switch>\n        <Route exact path={['/']}>\n          <Home />\n        </Route>\n        <Route path={['/page']}>\n          <Page />\n        </Route>\n      </Switch>\n      <Footer />\n    </Router>\n  );\n};\n\nexport default App;\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\nimport { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport { blue, amber } from '@material-ui/core/colors';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst palette = {\n  primary: {\n    main: blue['900'],\n  },\n  secondary: amber,\n};\n\nconst theme = createMuiTheme({\n  palette,\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}