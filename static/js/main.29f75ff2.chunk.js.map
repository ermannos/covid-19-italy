{"version":3,"sources":["data/dataloader.ts","data/regioni.ts","pages/Home.tsx","data/vaccini.ts","components/DataPaper.tsx","pages/Vaccini.tsx","pages/Header.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["regionalData","nationalData","loadData","url","data","axios","get","then","response","json","forEach","row","point","stato","codiceRegione","codice_regione","denominazioneRegione","denominazione_regione","lat","long","lang","ricoveratiConSintomi","ricoverati_con_sintomi","terapiaIntensiva","terapia_intensiva","totaleOspedalizzati","totale_ospedalzzati","isolamentoDomiciliare","isolamento_domiciliare","totalePositivi","totale_positivi","variazioneTotalePositivi","variazione_totale_positivi","nuoviPositivi","nuovi_positivi","dimessiGuariti","dimessi_guariti","deceduti","decedutiTotali","casiDaSospettoDiagnostico","casi_da_sospetto_diagnostico","casiDaScreening","casi_da_screening","totaleCasi","totale_casi","tamponi","tamponiTotali","positiviTamponi","casiTestati","casi_testati","note","push","catch","err","console","error","calculateDerivedData","previousPoint","Math","round","Regioni","abbreviazione","useStyles","makeStyles","theme","container","padding","spacing","formControl","minWidth","lastUpdate","textAlign","footer","backgroundColor","grafici","1","value","description","field","2","3","4","5","6","7","8","9","10","11","ValueLabelComponent","props","children","open","enterTouchDelay","placement","title","arrow","Home","classes","useState","regione","setRegione","grafico","setGrafico","datapoints","setDatapoints","range","setRange","min","setMin","max","setMax","useEffect","Promise","all","rData","nData","splice","length","regionCode","filter","map","p","newPoint","getByRegionCode","chartData","useMemo","i","moment","format","Container","maxWidth","className","Grid","item","xl","lg","md","sm","xs","FormControl","variant","size","Select","labelId","id","onChange","evt","target","placeholder","r","MenuItem","Object","values","g","Typography","width","height","margin","top","right","left","bottom","dataKey","strokeDasharray","type","name","stroke","blue","fill","style","marginTop","Slider","valueLabelDisplay","event","Array","isArray","valueLabelFormat","x","href","vaccines","refresh","vaxx","d","vax","index","area","dosiSomministrate","dosi_somministrate","dosiConsegnate","dosi_consegnate","percentualeSomministrazione","percentuale_somministrazione","ultimoAggiornamento","ultimo_aggiornamento","paper","minHeight","color","grey","paperContent","display","flexDirection","alignItems","marginLeft","flexGrow","fontSize","fontWeight","bigIcon","DataPaper","icon","percent","Paper","Intl","NumberFormat","toFixed","buttons","mb2","marginBottom","StyledToggleButton","withStyles","root","palette","primary","main","contrastText","light","selected","withTheme","ToggleButton","Vaccini","vacc","setVacc","shipped","setShipped","given","setGiven","view","setView","regionMap","setRegionMap","useTheme","isXs","useMediaQuery","breakpoints","down","isSm","log","loadRegioni","useCallback","c","s","sort","a","b","localeCompare","v","date","isBefore","Hidden","mdDown","LocalShipping","LocalHospital","ToggleButtonGroup","exclusive","val","xsDown","barGap","angle","textAnchor","interval","stackId","position","formatter","Number","parseFloat","subtitle","lineHeight","github","link","Header","linkName","history","useHistory","openGitHub","window","AppBar","Toolbar","Button","onClick","IconButton","GitHub","App","basename","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","secondary","amber","createMuiTheme","ReactDOM","render","StrictMode","ThemeProvider","document","getElementById"],"mappings":"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","file":"static/js/main.29f75ff2.chunk.js","sourcesContent":["/* eslint-disable no-param-reassign */\nimport axios from 'axios';\nimport DataPoint from '../types/datapoint';\n\nconst regionalUrl =\n  'https://raw.githubusercontent.com/pcm-dpc/COVID-19/master/dati-json/dpc-covid19-ita-regioni.json';\nconst nationalUrl =\n  'https://raw.githubusercontent.com/pcm-dpc/COVID-19/master/dati-json/dpc-covid19-ita-andamento-nazionale.json';\n\nconst regionalData: DataPoint[] = [];\nconst nationalData: DataPoint[] = [];\n\nconst loadData = (url: string): Promise<DataPoint[]> => {\n  const data: DataPoint[] = [];\n  return axios\n    .get(url)\n    .then(response => response.data)\n    .then(json => {\n      json.forEach(row => {\n        const point: DataPoint = {\n          data: row.data,\n          stato: row.stato,\n          codiceRegione: row.codice_regione,\n          denominazioneRegione: row.denominazione_regione,\n          lat: row.lat,\n          long: row.lang,\n          ricoveratiConSintomi: row.ricoverati_con_sintomi,\n          terapiaIntensiva: row.terapia_intensiva,\n          totaleOspedalizzati: row.totale_ospedalzzati,\n          isolamentoDomiciliare: row.isolamento_domiciliare,\n          totalePositivi: row.totale_positivi,\n          variazioneTotalePositivi: row.variazione_totale_positivi,\n          nuoviPositivi: row.nuovi_positivi,\n          dimessiGuariti: row.dimessi_guariti,\n          deceduti: 0,\n          decedutiTotali: row.deceduti,\n          casiDaSospettoDiagnostico: row.casi_da_sospetto_diagnostico,\n          casiDaScreening: row.casi_da_screening,\n          totaleCasi: row.totale_casi,\n          tamponi: 0,\n          tamponiTotali: row.tamponi,\n          positiviTamponi: 0,\n          casiTestati: row.casi_testati,\n          note: row.note,\n        };\n        data.push(point);\n      });\n\n      return data;\n    })\n    .catch(err => {\n      // eslint-disable-next-line no-console\n      console.error(err);\n      return data;\n    });\n};\n\nconst loadRegionalData = (): Promise<DataPoint[]> => {\n  return loadData(regionalUrl);\n};\n\nconst loadNationalData = (): Promise<DataPoint[]> => {\n  return loadData(nationalUrl);\n};\n\nconst calculateDerivedData = (point: DataPoint, previousPoint: DataPoint): DataPoint => {\n  return {\n    ...point,\n    deceduti: previousPoint ? point.decedutiTotali - previousPoint.decedutiTotali : 0,\n    tamponi: previousPoint ? point.tamponiTotali - previousPoint.tamponiTotali : 0,\n    totaleOspedalizzati: previousPoint ? point.terapiaIntensiva + point.ricoveratiConSintomi : 0,\n    positiviTamponi:\n      previousPoint && point.tamponiTotali > previousPoint.tamponiTotali\n        ? Math.round(\n            (point.nuoviPositivi / (point.tamponiTotali - previousPoint.tamponiTotali)) * 10000\n          ) / 100\n        : 0,\n  };\n};\n\nconst getByRegionCode = (regionCode: number): DataPoint[] => {\n  const points = regionalData.filter(point => point.codiceRegione === regionCode);\n\n  let previousPoint: DataPoint;\n  return points.map(p => {\n    const newPoint = calculateDerivedData(p, previousPoint);\n    previousPoint = p;\n    return newPoint;\n  });\n};\n\nconst refresh = (): Promise<void> => {\n  return Promise.all([loadRegionalData(), loadNationalData()]).then(([rData, nData]) => {\n    regionalData.splice(0, regionalData.length);\n    nationalData.splice(0, nationalData.length);\n\n    rData.forEach(point => {\n      regionalData.push(point);\n    });\n\n    let previousPoint: DataPoint;\n    nData.forEach(point => {\n      nationalData.push(calculateDerivedData(point, previousPoint));\n      previousPoint = point;\n    });\n  });\n};\n\nexport { refresh, getByRegionCode, nationalData };\n","import Regione from '../types/regione';\n\nconst Regioni: Regione[] = [\n  {\n    codiceRegione: 99,\n    denominazioneRegione: 'ITALIA',\n    abbreviazione: 'ITA',\n  },\n  {\n    codiceRegione: 13,\n    denominazioneRegione: 'Abruzzo',\n    abbreviazione: 'ABR',\n  },\n  {\n    codiceRegione: 17,\n    denominazioneRegione: 'Basilicata',\n    abbreviazione: 'BAS',\n  },\n  {\n    codiceRegione: 18,\n    denominazioneRegione: 'Calabria',\n    abbreviazione: 'CAL',\n  },\n  {\n    codiceRegione: 15,\n    denominazioneRegione: 'Campania',\n    abbreviazione: 'CAM',\n  },\n  {\n    codiceRegione: 8,\n    denominazioneRegione: 'Emilia romagna',\n    abbreviazione: 'EMR',\n  },\n  {\n    codiceRegione: 6,\n    denominazioneRegione: 'Friuli Venezia Giulia',\n    abbreviazione: 'FVG',\n  },\n  {\n    codiceRegione: 12,\n    denominazioneRegione: 'Lazio',\n    abbreviazione: 'LAZ',\n  },\n  {\n    codiceRegione: 7,\n    denominazioneRegione: 'Liguria',\n    abbreviazione: 'LIG',\n  },\n  {\n    codiceRegione: 3,\n    denominazioneRegione: 'Lombardia',\n    abbreviazione: 'LOM',\n  },\n  {\n    codiceRegione: 11,\n    denominazioneRegione: 'Marche',\n    abbreviazione: 'MAR',\n  },\n  {\n    codiceRegione: 14,\n    denominazioneRegione: 'Molise',\n    abbreviazione: 'MOL',\n  },\n  {\n    codiceRegione: 21,\n    denominazioneRegione: 'P.A. Bolzano',\n    abbreviazione: 'PAB',\n  },\n  {\n    codiceRegione: 22,\n    denominazioneRegione: 'P.A. Trento',\n    abbreviazione: 'PAT',\n  },\n  {\n    codiceRegione: 1,\n    denominazioneRegione: 'Piemonte',\n    abbreviazione: 'PIE',\n  },\n  {\n    codiceRegione: 16,\n    denominazioneRegione: 'Puglia',\n    abbreviazione: 'PUG',\n  },\n  {\n    codiceRegione: 20,\n    denominazioneRegione: 'Sardegna',\n    abbreviazione: 'SAR',\n  },\n  {\n    codiceRegione: 19,\n    denominazioneRegione: 'Sicilia',\n    abbreviazione: 'SIC',\n  },\n  {\n    codiceRegione: 9,\n    denominazioneRegione: 'Toscana',\n    abbreviazione: 'TOS',\n  },\n  {\n    codiceRegione: 10,\n    denominazioneRegione: 'Umbria',\n    abbreviazione: 'UMB',\n  },\n  {\n    codiceRegione: 2,\n    denominazioneRegione: \"Valle D'Aosta\",\n    abbreviazione: 'VDA',\n  },\n  {\n    codiceRegione: 5,\n    denominazioneRegione: 'Veneto',\n    abbreviazione: 'VEN',\n  },\n];\n\nexport default Regioni;\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/no-redeclare */\nimport React, { useEffect, useState, useMemo } from 'react';\nimport {\n  Container,\n  FormControl,\n  Select,\n  MenuItem,\n  Grid,\n  Typography,\n  Slider,\n  Tooltip as MUITooltip,\n} from '@material-ui/core';\nimport { blue } from '@material-ui/core/colors';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n  ResponsiveContainer,\n  AreaChart,\n  Area,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n} from 'recharts';\nimport moment from 'moment';\nimport { refresh, getByRegionCode, nationalData } from '../data/dataloader';\nimport Regioni from '../data/regioni';\nimport DataPoint from '../types/datapoint';\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    padding: theme.spacing(2, 3),\n  },\n  formControl: {\n    minWidth: 200,\n  },\n  lastUpdate: {\n    textAlign: 'right',\n    padding: theme.spacing(2),\n  },\n  footer: {\n    textAlign: 'center',\n    padding: theme.spacing(2, 0),\n    backgroundColor: '#c0c0c0',\n  },\n}));\n\nconst grafici = {\n  1: { value: 1, description: 'Pazienti degenti', field: 'ricoveratiConSintomi' },\n  2: { value: 2, description: 'Pazienti intensiva', field: 'terapiaIntensiva' },\n  3: { value: 3, description: 'Totale degenti', field: 'totaleOspedalizzati' },\n  4: { value: 4, description: 'Decessi giornalieri', field: 'deceduti' },\n  5: { value: 5, description: 'Decessi totali', field: 'decedutiTotali' },\n  6: { value: 6, description: 'Tamponi giornalieri', field: 'tamponi' },\n  7: { value: 7, description: 'Tamponi totali', field: 'tamponiTotali' },\n  8: { value: 8, description: 'Nuovi positivi', field: 'nuoviPositivi' },\n  9: { value: 9, description: 'Totale positivi', field: 'totalePositivi' },\n  10: { value: 10, description: 'Totale casi', field: 'totaleCasi' },\n  11: { value: 11, description: '% positivi/tamponi giornalieri', field: 'positiviTamponi' },\n};\n\ninterface Props {\n  children: React.ReactElement;\n  open: boolean;\n  value: number;\n}\n\nfunction ValueLabelComponent(props: Props) {\n  const { children, open, value } = props;\n  return (\n    <MUITooltip open={open} enterTouchDelay={0} placement=\"top\" title={value} arrow>\n      {children}\n    </MUITooltip>\n  );\n}\n\nconst Home: React.FC = () => {\n  const classes = useStyles();\n  const [regione, setRegione] = useState(0);\n  const [grafico, setGrafico] = useState(1);\n  const [datapoints, setDatapoints] = useState<DataPoint[]>();\n  const [range, setRange] = useState([0, 100]);\n  const [min, setMin] = useState(0);\n  const [max, setMax] = useState(100);\n\n  useEffect(() => {\n    refresh().then(() => {\n      setMin(0);\n      setMax(nationalData.length - 1);\n      setRange([0, nationalData.length - 1]);\n\n      setRegione(99);\n    });\n  }, []);\n\n  useEffect(() => {\n    if (regione) {\n      if (regione === 99) {\n        setDatapoints(nationalData);\n      } else {\n        setDatapoints(getByRegionCode(regione));\n      }\n    }\n  }, [regione]);\n\n  const onChangeRegione = evt => {\n    setRegione(evt.target.value);\n  };\n\n  const onChangeGrafico = evt => {\n    setGrafico(evt.target.value);\n  };\n\n  const chartData = useMemo(() => {\n    if (!datapoints) return [];\n    return datapoints\n      .filter((p, i) => i >= range[0] && i <= range[1])\n      .map(p => ({\n        data: moment(p.data).format('DD.MM.YYYY'),\n        value: p[grafici[grafico].field],\n      }));\n  }, [datapoints, grafico, range]);\n\n  return (\n    <>\n      <Container maxWidth=\"xl\" className={classes.container}>\n        <Grid container spacing={2}>\n          <Grid item xl={2} lg={2} md={3} sm={4} xs={6}>\n            <FormControl variant=\"outlined\" size=\"small\" className={classes.formControl}>\n              <Select\n                labelId=\"demo-controlled-open-select-label\"\n                id=\"demo-controlled-open-select\"\n                value={regione}\n                onChange={onChangeRegione}\n                placeholder=\"Regione\"\n              >\n                {Regioni.map(r => (\n                  <MenuItem key={`reg-${r.codiceRegione}`} value={r.codiceRegione}>\n                    {r.denominazioneRegione}\n                  </MenuItem>\n                ))}\n              </Select>\n            </FormControl>\n          </Grid>\n\n          <Grid item xl={2} lg={2} md={3} sm={4} xs={6}>\n            <FormControl variant=\"outlined\" size=\"small\" className={classes.formControl}>\n              <Select\n                labelId=\"demo-controlled-open-select-label\"\n                id=\"demo-controlled-open-select\"\n                value={grafico}\n                onChange={onChangeGrafico}\n                placeholder=\"Grafico\"\n              >\n                {Object.values(grafici).map(g => (\n                  <MenuItem key={`gf-${g.value}`} value={g.value}>\n                    {g.description}\n                  </MenuItem>\n                ))}\n              </Select>\n            </FormControl>\n          </Grid>\n\n          <Grid item xl={8} lg={8} md={6} sm={4} xs={12}>\n            <div className={classes.lastUpdate}>\n              <Typography>\n                Ultimo aggiornamento:{' '}\n                {datapoints && datapoints.length\n                  ? moment(datapoints[datapoints.length - 1].data).format('DD/MM/YYYY')\n                  : '-'}\n              </Typography>\n            </div>\n          </Grid>\n\n          <Grid item xs={12}>\n            <ResponsiveContainer width=\"100%\" height={700}>\n              <AreaChart data={chartData} margin={{ top: 5, right: 30, left: 20, bottom: 5 }}>\n                <XAxis dataKey=\"data\" />\n                <YAxis />\n                <CartesianGrid strokeDasharray=\"3 3\" />\n                <Tooltip />\n                <Legend />\n                <Area\n                  type=\"monotone\"\n                  name={grafici[grafico].description}\n                  dataKey=\"value\"\n                  stroke={blue[900]}\n                  fill={blue[700]}\n                />\n              </AreaChart>\n            </ResponsiveContainer>\n            <Grid item xs={12} style={{ marginTop: '24px' }}>\n              <Slider\n                value={range}\n                min={min}\n                max={max}\n                valueLabelDisplay=\"on\"\n                onChange={(event, value) => {\n                  if (Array.isArray(value)) setRange(value);\n                }}\n                ValueLabelComponent={ValueLabelComponent}\n                valueLabelFormat={x =>\n                  nationalData && nationalData.length\n                    ? moment(nationalData[x].data).format('DD.MM.YYYY')\n                    : x\n                }\n              />\n            </Grid>\n          </Grid>\n        </Grid>\n      </Container>\n\n      <div className={classes.footer}>\n        Fonte dati:{' '}\n        <a href=\"https://github.com/pcm-dpc/COVID-19\" target=\"_new\">\n          Presidenza del Consiglio dei Ministri - Dipartimento della Protezione Civile\n        </a>\n      </div>\n    </>\n  );\n};\n\nexport default Home;\n","/* eslint-disable import/no-mutable-exports */\nimport axios from 'axios';\nimport Vaccino from '../types/vaccini';\n\nlet vaccines: Vaccino[] = [];\n\nconst loadVaccini = (): Promise<Vaccino[]> => {\n  return axios\n    .get(\n      'https://raw.githubusercontent.com/italia/covid19-opendata-vaccini/master/dati/vaccini-summary-latest.json'\n    )\n    .then(response => response.data)\n    .then(json => {\n      const vaxx: Vaccino[] = [];\n      json.data.forEach(d => {\n        const vax: Vaccino = {\n          index: d.index,\n          area: d.area,\n          dosiSomministrate: d.dosi_somministrate,\n          dosiConsegnate: d.dosi_consegnate,\n          percentualeSomministrazione: d.percentuale_somministrazione,\n          ultimoAggiornamento: d.ultimo_aggiornamento,\n        };\n        vaxx.push(vax);\n      });\n      return vaxx;\n    });\n};\n\nconst refresh = (): Promise<Vaccino[]> => {\n  return loadVaccini().then(vaxx => {\n    vaccines = vaxx;\n    return vaccines;\n  });\n};\n\nexport { refresh, vaccines };\n","import React from 'react';\nimport { Paper, Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { grey } from '@material-ui/core/colors';\n\ntype Props = {\n  title: string;\n  value: number;\n  percent?: number;\n  icon?: React.ReactNode;\n};\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    padding: theme.spacing(1),\n    minHeight: '100px',\n  },\n  title: {\n    color: grey[500],\n  },\n  paperContent: {\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'center',\n    '& *:last-child': {\n      marginLeft: theme.spacing(2),\n      flexGrow: 1,\n      textAlign: 'right',\n      fontSize: '170%',\n      fontWeight: 'bold',\n    },\n  },\n  bigIcon: {\n    fontSize: '400%',\n  },\n}));\n\nconst DataPaper: React.FC<Props> = ({ title, value, icon, percent }) => {\n  const classes = useStyles();\n\n  return (\n    <Paper className={classes.paper}>\n      <Typography variant=\"h6\" className={classes.title}>\n        <strong>{title}</strong>\n      </Typography>\n      <div className={classes.paperContent}>\n        {icon || <span>&nbsp;</span>}\n        <span>\n          {new Intl.NumberFormat().format(value)}\n          {percent ? ` (${percent.toFixed(1)}%)` : ''}\n        </span>\n      </div>\n    </Paper>\n  );\n};\n\nexport default DataPaper;\n","/* eslint-disable no-nested-ternary */\nimport React, { useEffect, useState, useMemo, useCallback } from 'react';\nimport { withStyles, makeStyles, useTheme } from '@material-ui/core/styles';\nimport { Container, Grid, Hidden, Typography, useMediaQuery } from '@material-ui/core';\nimport { ToggleButton, ToggleButtonGroup } from '@material-ui/lab';\nimport { blue, grey } from '@material-ui/core/colors';\nimport {\n  LocalShipping as LocalShippingIcon,\n  LocalHospital as LocalHospitalIcon,\n} from '@material-ui/icons';\nimport moment from 'moment';\nimport {\n  ResponsiveContainer,\n  BarChart,\n  Bar,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  LabelList,\n} from 'recharts';\nimport { refresh, vaccines } from '../data/vaccini';\nimport Regioni from '../data/regioni';\nimport DataPaper from '../components/DataPaper';\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    padding: theme.spacing(2, 3),\n  },\n  buttons: {\n    textAlign: 'center',\n  },\n  lastUpdate: {\n    textAlign: 'right',\n    padding: theme.spacing(2),\n  },\n  bigIcon: {\n    fontSize: '400%',\n  },\n  title: {\n    color: grey[500],\n  },\n  footer: {\n    textAlign: 'center',\n    padding: theme.spacing(2, 0),\n    backgroundColor: '#c0c0c0',\n  },\n  mb2: {\n    marginBottom: theme.spacing(2),\n  },\n}));\n\nconst styles = theme => ({\n  root: {\n    color: theme.palette.primary.main,\n    '&$selected': {\n      color: theme.palette.primary.contrastText,\n      backgroundColor: theme.palette.primary.main,\n      '&:hover': {\n        backgroundColor: theme.palette.primary.light,\n      },\n    },\n    padding: theme.spacing(0.75, 2),\n  },\n  selected: {},\n});\n\nconst StyledToggleButton = withStyles(styles, { withTheme: true })(ToggleButton);\n\nconst Vaccini: React.FC = () => {\n  const classes = useStyles();\n  const [vacc, setVacc] = useState(vaccines);\n  const [shipped, setShipped] = useState(0);\n  const [given, setGiven] = useState(0);\n  const [view, setView] = useState('values');\n  const [regionMap, setRegionMap] = useState({});\n\n  const theme = useTheme();\n  const isXs = useMediaQuery(theme.breakpoints.down('xs'));\n  const isSm = useMediaQuery(theme.breakpoints.down('sm'));\n\n  console.log('XS', isXs);\n  console.log('SM', isSm);\n\n  const loadRegioni = useCallback(() => {\n    const map = {};\n    Regioni.forEach(r => {\n      map[r.abbreviazione] = r.denominazioneRegione;\n    });\n    setRegionMap(map);\n  }, []);\n\n  useEffect(() => {\n    loadRegioni();\n    refresh().then(vaxx => {\n      setVacc(vaxx);\n      let c = 0;\n      let s = 0;\n      vaxx.forEach(vax => {\n        c += vax.dosiConsegnate;\n        s += vax.dosiSomministrate;\n      });\n      setShipped(c);\n      setGiven(s);\n    });\n  }, [loadRegioni]);\n\n  const chartData = useMemo(() => {\n    return vacc\n      .sort((a, b) => {\n        return a.area.localeCompare(b.area);\n      })\n      .map(v => ({\n        regione: regionMap[v.area] || v.area,\n        'Dosi consegnate': v.dosiConsegnate,\n        'Dosi somministrate': v.dosiSomministrate,\n        'Percentuale somministrazioni': v.percentualeSomministrazione,\n      }));\n  }, [vacc, regionMap]);\n\n  const lastUpdate = useMemo(() => {\n    let date;\n    vacc.forEach(v => {\n      const d = moment(v.ultimoAggiornamento);\n      if (!date || date.isBefore(d)) {\n        date = d;\n      }\n    });\n    return date;\n  }, [vacc]);\n\n  return (\n    <>\n      <Container maxWidth=\"xl\" className={classes.container}>\n        <Grid container spacing={2} className={classes.mb2}>\n          <Hidden mdDown>\n            <Grid item xs={12} sm={6} md={6} lg={3} />\n          </Hidden>\n          <Grid item xs={12} sm={6} md={6} lg={3}>\n            <DataPaper\n              title=\"Consegnati\"\n              value={shipped}\n              icon={<LocalShippingIcon className={classes.bigIcon} />}\n            />\n          </Grid>\n          <Grid item xs={12} sm={6} md={6} lg={3}>\n            <DataPaper\n              title=\"Somministrati\"\n              value={given}\n              icon={<LocalHospitalIcon className={classes.bigIcon} />}\n              percent={shipped === 0 ? 0 : (given * 100) / shipped}\n            />\n          </Grid>\n          <Hidden mdDown>\n            <Grid item xs={12} sm={6} md={6} lg={3} />\n          </Hidden>\n        </Grid>\n\n        <Grid container spacing={2}>\n          <Grid item xs={12} sm={3}>\n            <Typography variant=\"h6\" className={classes.title}>\n              <strong>Dati per regione</strong>\n            </Typography>\n          </Grid>\n          <Grid item xs={12} sm={6}>\n            <div className={classes.buttons}>\n              <ToggleButtonGroup\n                size=\"medium\"\n                value={view}\n                exclusive\n                onChange={(evt, val) => {\n                  setView(val);\n                }}\n              >\n                <StyledToggleButton value=\"values\">Valori</StyledToggleButton>\n                <StyledToggleButton value=\"percent\">Percentuali</StyledToggleButton>\n              </ToggleButtonGroup>\n            </div>\n          </Grid>\n          <Hidden xsDown>\n            <Grid item xs={12} sm={3} className={classes.lastUpdate}>\n              Ultimo aggiornamento: {lastUpdate ? lastUpdate.format('DD/MM/YYYY') : ''}\n            </Grid>\n          </Hidden>\n        </Grid>\n\n        <ResponsiveContainer width=\"100%\" height={isXs ? 500 : isSm ? 600 : 700}>\n          <BarChart\n            data={chartData}\n            margin={{ top: 5, right: 30, left: 20, bottom: 5 }}\n            barGap={isXs ? -3 : isSm ? -7 : -15}\n          >\n            <XAxis dataKey=\"regione\" angle={-60} textAnchor=\"end\" height={130} interval={0} />\n            <YAxis width={view === 'values' ? 50 : 30} />\n            <CartesianGrid strokeDasharray=\"3 3\" />\n            <Tooltip />\n            <Legend />\n            {view === 'values' ? (\n              <Bar dataKey=\"Dosi consegnate\" stackId=\"b\" fill={blue[700]} stroke={blue[900]} />\n            ) : null}\n            {view === 'values' ? (\n              <Bar dataKey=\"Dosi somministrate\" stackId=\"a\" fill={blue[400]} stroke={blue[600]} />\n            ) : (\n              <Bar dataKey=\"Percentuale somministrazioni\" fill={blue[700]} stroke={blue[900]}>\n                {isSm ? null : (\n                  <LabelList\n                    dataKey=\"Percentuale somministrazioni\"\n                    position=\"top\"\n                    formatter={v => `${Number.parseFloat(v).toFixed(1)}%`}\n                  />\n                )}\n              </Bar>\n            )}\n          </BarChart>\n        </ResponsiveContainer>\n      </Container>\n\n      <div className={classes.footer}>\n        Fonte dati:{' '}\n        <a href=\"https://github.com/italia/covid19-opendata-vaccini\" target=\"_new\">\n          Commissario straordinario per l&apos;emergenza Covid-19\n        </a>\n      </div>\n    </>\n  );\n};\n\nexport default Vaccini;\n","import React, { useCallback } from 'react';\nimport { AppBar, Toolbar, Typography, IconButton, Button } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { GitHub as GitHubIcon } from '@material-ui/icons';\nimport { useHistory } from 'react-router-dom';\n\nconst useStyles = makeStyles(() => ({\n  title: {\n    display: 'flex',\n    flexDirection: 'column',\n    flexGrow: 1,\n  },\n  subtitle: {\n    lineHeight: 'normal',\n  },\n  github: {\n    color: 'white',\n  },\n  link: {\n    color: 'white',\n  },\n}));\n\ntype TitleProps = {\n  title: string;\n  subtitle: string;\n  linkName: string;\n  link: string;\n};\n\nconst Header: React.FC<TitleProps> = ({ title, subtitle, linkName, link }) => {\n  const classes = useStyles();\n  const history = useHistory();\n\n  const openGitHub = useCallback(() => {\n    window.open('https://github.com/ermannos/covid-19-italy', '_new');\n  }, []);\n\n  return (\n    <AppBar position=\"static\">\n      <Toolbar>\n        <div className={classes.title}>\n          <Typography variant=\"h6\">{title}</Typography>\n          <Typography variant=\"overline\" className={classes.subtitle}>\n            {subtitle}\n          </Typography>\n        </div>\n\n        <Button\n          className={classes.link}\n          color=\"inherit\"\n          onClick={() => {\n            history.push(link);\n          }}\n        >\n          {linkName}\n        </Button>\n        <IconButton className={classes.github} onClick={openGitHub} title=\"GitHub repository\">\n          <GitHubIcon />\n        </IconButton>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nexport default Header;\n","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n\nimport Home from './pages/Home';\nimport Vaccini from './pages/Vaccini';\nimport Header from './pages/Header';\nimport './App.css';\n\nconst App: React.FC = () => {\n  return (\n    <Router basename=\"/covid-19-italy\">\n      <Switch>\n        <Route exact path={['/']}>\n          <Header\n            title=\"Covid-19 Italia\"\n            subtitle=\"Andamento epidemia\"\n            linkName=\"Vaccini\"\n            link=\"/vaccini\"\n          />\n          <Home />\n        </Route>\n        <Route path={['/vaccini']}>\n          <Header\n            title=\"Covid-19 Italia\"\n            subtitle=\"Andamento campagna vaccinale\"\n            linkName=\"Home\"\n            link=\"/\"\n          />\n          <Vaccini />\n        </Route>\n      </Switch>\n    </Router>\n  );\n};\n\nexport default App;\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\nimport { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport { blue, amber } from '@material-ui/core/colors';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst palette = {\n  primary: {\n    main: blue['900'],\n  },\n  secondary: amber,\n};\n\nconst theme = createMuiTheme({\n  palette,\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}