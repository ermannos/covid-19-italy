{"version":3,"sources":["data/dataloader.ts","data/regioni.ts","pages/Home.tsx","data/vaccini.ts","components/DataPaper.tsx","pages/Vaccini.tsx","pages/Header.tsx","pages/Regione.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["regionalData","nationalData","loadData","url","data","axios","get","then","response","json","forEach","row","point","stato","codiceRegione","codice_regione","denominazioneRegione","denominazione_regione","lat","long","lang","ricoveratiConSintomi","ricoverati_con_sintomi","terapiaIntensiva","terapia_intensiva","totaleOspedalizzati","totale_ospedalzzati","isolamentoDomiciliare","isolamento_domiciliare","totalePositivi","totale_positivi","variazioneTotalePositivi","variazione_totale_positivi","nuoviPositivi","nuovi_positivi","dimessiGuariti","dimessi_guariti","deceduti","decedutiTotali","casiDaSospettoDiagnostico","casi_da_sospetto_diagnostico","casiDaScreening","casi_da_screening","totaleCasi","totale_casi","tamponi","tamponiTotali","positiviTamponi","casiTestati","casi_testati","note","push","catch","err","console","error","calculateDerivedData","previousPoint","Math","round","getByRegionCode","regionCode","filter","map","p","newPoint","refresh","Promise","all","rData","nData","splice","length","Regioni","abbreviazione","useStyles","makeStyles","theme","container","padding","spacing","formControl","minWidth","marginRight","marginBottom","lastUpdate","textAlign","footer","backgroundColor","grafici","1","value","description","field","2","3","4","5","6","7","8","9","10","11","ValueLabelComponent","props","children","open","enterTouchDelay","placement","title","arrow","Home","classes","useState","regione","setRegione","grafico","setGrafico","datapoints","setDatapoints","range","setRange","min","setMin","max","setMax","history","useHistory","useEffect","chartData","useMemo","i","moment","format","selectedRegione","find","r","Container","maxWidth","className","Grid","item","xl","lg","md","sm","xs","FormControl","variant","size","Select","labelId","id","onChange","evt","target","placeholder","MenuItem","Object","values","g","Button","onClick","Typography","width","height","margin","top","right","left","bottom","dataKey","strokeDasharray","type","name","stroke","blue","fill","style","marginTop","Slider","valueLabelDisplay","event","Array","isArray","valueLabelFormat","x","href","vaccines","somministrazioni","consegne","vaxx","d","vax","index","area","dosiSomministrate","dosi_somministrate","dosiConsegnate","dosi_consegnate","percentualeSomministrazione","percentuale_somministrazione","ultimoAggiornamento","ultimo_aggiornamento","refreshSomministrazioni","ss","s","dataSomministrazione","data_somministrazione","totale","sessoMaschile","sesso_maschile","sessoFemminile","sesso_femminile","categoriaOperatoriSanitariSociosanitari","categoria_operatori_sanitari_sociosanitari","categoriaPersonaleNonSanitario","categoria_personale_non_sanitario","categoriaOspitiRsa","categoria_ospiti_rsa","categoriaOver80","categoria_over80","primaDose","prima_dose","secondaDose","seconda_dose","refreshConsegne","cc","c","fornitore","replace","dataConsegna","data_consegna","numeroDosi","numero_dosi","paper","minHeight","color","grey","paperContent","display","flexDirection","alignItems","flexGrow","fontSize","fontWeight","bigIcon","DataPaper","icon","percent","delta","Paper","Intl","NumberFormat","toFixed","buttons","mb2","StyledToggleButton","withStyles","root","palette","primary","main","contrastText","light","selected","withTheme","ToggleButton","Vaccini","vacc","setVacc","shipped","setShipped","given","setGiven","view","setView","regionMap","setRegionMap","statusByRegion","setStatusByRegion","useTheme","isXs","useMediaQuery","breakpoints","down","isSm","loadRegioni","useCallback","status","log","a","undefined","sort","b","getStatusByRegionType","localeCompare","v","chartData2","date","isBefore","Hidden","mdDown","LocalShipping","LocalHospital","xsDown","ToggleButtonGroup","exclusive","val","barGap","angle","textAnchor","interval","stackId","lightGreen","position","formatter","Number","parseFloat","purple","lightBlue","pink","orange","subtitle","lineHeight","github","link","Header","linkName","openGitHub","window","AppBar","Toolbar","IconButton","GitHub","section","Regione","code","parseInt","useParams","covidData","setCovidData","setSomministrazioni","setConsegne","previousData","lastData","previousSomministrazione","lastSomministrazione","prepreviousConsegna","previousConsegna","lastConsegna","App","basename","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","secondary","amber","createMuiTheme","ReactDOM","render","StrictMode","ThemeProvider","document","getElementById"],"mappings":"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","file":"static/js/main.9d18b016.chunk.js","sourcesContent":["/* eslint-disable no-param-reassign */\nimport axios from 'axios';\nimport { calendarFormat } from 'moment';\nimport DataPoint from '../types/datapoint';\n\nconst regionalUrl =\n  'https://raw.githubusercontent.com/pcm-dpc/COVID-19/master/dati-json/dpc-covid19-ita-regioni.json';\nconst nationalUrl =\n  'https://raw.githubusercontent.com/pcm-dpc/COVID-19/master/dati-json/dpc-covid19-ita-andamento-nazionale.json';\n\nconst regionalData: DataPoint[] = [];\nconst nationalData: DataPoint[] = [];\n\nconst loadData = (url: string): Promise<DataPoint[]> => {\n  const data: DataPoint[] = [];\n  return axios\n    .get(url)\n    .then(response => response.data)\n    .then(json => {\n      json.forEach(row => {\n        const point: DataPoint = {\n          data: row.data,\n          stato: row.stato,\n          codiceRegione: row.codice_regione,\n          denominazioneRegione: row.denominazione_regione,\n          lat: row.lat,\n          long: row.lang,\n          ricoveratiConSintomi: row.ricoverati_con_sintomi,\n          terapiaIntensiva: row.terapia_intensiva,\n          totaleOspedalizzati: row.totale_ospedalzzati,\n          isolamentoDomiciliare: row.isolamento_domiciliare,\n          totalePositivi: row.totale_positivi,\n          variazioneTotalePositivi: row.variazione_totale_positivi,\n          nuoviPositivi: row.nuovi_positivi,\n          dimessiGuariti: row.dimessi_guariti,\n          deceduti: 0,\n          decedutiTotali: row.deceduti,\n          casiDaSospettoDiagnostico: row.casi_da_sospetto_diagnostico,\n          casiDaScreening: row.casi_da_screening,\n          totaleCasi: row.totale_casi,\n          tamponi: 0,\n          tamponiTotali: row.tamponi,\n          positiviTamponi: 0,\n          casiTestati: row.casi_testati,\n          note: row.note,\n        };\n        data.push(point);\n      });\n\n      return data;\n    })\n    .catch(err => {\n      // eslint-disable-next-line no-console\n      console.error(err);\n      return data;\n    });\n};\n\nconst loadRegionalData = (): Promise<DataPoint[]> => {\n  return loadData(regionalUrl);\n};\n\nconst loadNationalData = (): Promise<DataPoint[]> => {\n  return loadData(nationalUrl);\n};\n\nconst calculateDerivedData = (point: DataPoint, previousPoint?: DataPoint): DataPoint => {\n  return {\n    ...point,\n    deceduti: previousPoint ? point.decedutiTotali - previousPoint.decedutiTotali : 0,\n    tamponi: point.tamponiTotali - (previousPoint ? previousPoint.tamponiTotali : 0),\n    totaleOspedalizzati: point.terapiaIntensiva + point.ricoveratiConSintomi,\n    positiviTamponi:\n      previousPoint && point.tamponiTotali > previousPoint.tamponiTotali\n        ? Math.round(\n            (point.nuoviPositivi / (point.tamponiTotali - previousPoint.tamponiTotali)) * 10000\n          ) / 100\n        : 0,\n  };\n};\n\nconst getByRegionCode = (regionCode: number): DataPoint[] => {\n  const points = regionalData.filter(point => point.codiceRegione === regionCode);\n\n  let previousPoint: DataPoint;\n  return points.map(p => {\n    const newPoint = calculateDerivedData(p, previousPoint);\n    previousPoint = p;\n    return newPoint;\n  });\n};\n\nconst getLastByRegionCode = (regionCode: number): DataPoint => {\n  const data = getByRegionCode(regionCode);\n  return data[data.length - 1];\n};\n\nconst refresh = (): Promise<void> => {\n  return Promise.all([loadRegionalData(), loadNationalData()]).then(([rData, nData]) => {\n    regionalData.splice(0, regionalData.length);\n    nationalData.splice(0, nationalData.length);\n\n    rData.forEach(point => {\n      regionalData.push(point);\n    });\n\n    let previousPoint: DataPoint;\n    nData.forEach(point => {\n      nationalData.push(calculateDerivedData(point, previousPoint));\n      previousPoint = point;\n    });\n  });\n};\n\nexport { refresh, getByRegionCode, getLastByRegionCode, nationalData };\n","import Regione from '../types/regione';\n\nconst Regioni: Regione[] = [\n  {\n    codiceRegione: 99,\n    denominazioneRegione: 'ITALIA',\n    abbreviazione: 'ITA',\n  },\n  {\n    codiceRegione: 13,\n    denominazioneRegione: 'Abruzzo',\n    abbreviazione: 'ABR',\n  },\n  {\n    codiceRegione: 17,\n    denominazioneRegione: 'Basilicata',\n    abbreviazione: 'BAS',\n  },\n  {\n    codiceRegione: 18,\n    denominazioneRegione: 'Calabria',\n    abbreviazione: 'CAL',\n  },\n  {\n    codiceRegione: 15,\n    denominazioneRegione: 'Campania',\n    abbreviazione: 'CAM',\n  },\n  {\n    codiceRegione: 8,\n    denominazioneRegione: 'Emilia romagna',\n    abbreviazione: 'EMR',\n  },\n  {\n    codiceRegione: 6,\n    denominazioneRegione: 'Friuli Venezia Giulia',\n    abbreviazione: 'FVG',\n  },\n  {\n    codiceRegione: 12,\n    denominazioneRegione: 'Lazio',\n    abbreviazione: 'LAZ',\n  },\n  {\n    codiceRegione: 7,\n    denominazioneRegione: 'Liguria',\n    abbreviazione: 'LIG',\n  },\n  {\n    codiceRegione: 3,\n    denominazioneRegione: 'Lombardia',\n    abbreviazione: 'LOM',\n  },\n  {\n    codiceRegione: 11,\n    denominazioneRegione: 'Marche',\n    abbreviazione: 'MAR',\n  },\n  {\n    codiceRegione: 14,\n    denominazioneRegione: 'Molise',\n    abbreviazione: 'MOL',\n  },\n  {\n    codiceRegione: 21,\n    denominazioneRegione: 'P.A. Bolzano',\n    abbreviazione: 'PAB',\n  },\n  {\n    codiceRegione: 22,\n    denominazioneRegione: 'P.A. Trento',\n    abbreviazione: 'PAT',\n  },\n  {\n    codiceRegione: 1,\n    denominazioneRegione: 'Piemonte',\n    abbreviazione: 'PIE',\n  },\n  {\n    codiceRegione: 16,\n    denominazioneRegione: 'Puglia',\n    abbreviazione: 'PUG',\n  },\n  {\n    codiceRegione: 20,\n    denominazioneRegione: 'Sardegna',\n    abbreviazione: 'SAR',\n  },\n  {\n    codiceRegione: 19,\n    denominazioneRegione: 'Sicilia',\n    abbreviazione: 'SIC',\n  },\n  {\n    codiceRegione: 9,\n    denominazioneRegione: 'Toscana',\n    abbreviazione: 'TOS',\n  },\n  {\n    codiceRegione: 10,\n    denominazioneRegione: 'Umbria',\n    abbreviazione: 'UMB',\n  },\n  {\n    codiceRegione: 2,\n    denominazioneRegione: \"Valle D'Aosta\",\n    abbreviazione: 'VDA',\n  },\n  {\n    codiceRegione: 5,\n    denominazioneRegione: 'Veneto',\n    abbreviazione: 'VEN',\n  },\n];\n\nexport default Regioni;\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/no-redeclare */\nimport React, { useEffect, useState, useMemo } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport {\n  Container,\n  FormControl,\n  Select,\n  MenuItem,\n  Grid,\n  Typography,\n  Slider,\n  Tooltip as MUITooltip,\n  Button,\n} from '@material-ui/core';\nimport { blue } from '@material-ui/core/colors';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n  ResponsiveContainer,\n  AreaChart,\n  Area,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n} from 'recharts';\nimport moment from 'moment';\nimport { refresh, getByRegionCode, nationalData } from '../data/dataloader';\nimport Regioni from '../data/regioni';\nimport DataPoint from '../types/datapoint';\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    padding: theme.spacing(2, 3),\n  },\n  formControl: {\n    minWidth: 200,\n    marginRight: theme.spacing(1),\n    marginBottom: theme.spacing(1),\n  },\n  lastUpdate: {\n    textAlign: 'right',\n    padding: theme.spacing(1),\n  },\n  footer: {\n    textAlign: 'center',\n    padding: theme.spacing(2, 0),\n    backgroundColor: '#c0c0c0',\n  },\n}));\n\nconst grafici = {\n  1: { value: 1, description: 'Pazienti degenti', field: 'ricoveratiConSintomi' },\n  2: { value: 2, description: 'Pazienti intensiva', field: 'terapiaIntensiva' },\n  3: { value: 3, description: 'Totale degenti', field: 'totaleOspedalizzati' },\n  4: { value: 4, description: 'Decessi giornalieri', field: 'deceduti' },\n  5: { value: 5, description: 'Decessi totali', field: 'decedutiTotali' },\n  6: { value: 6, description: 'Tamponi giornalieri', field: 'tamponi' },\n  7: { value: 7, description: 'Tamponi totali', field: 'tamponiTotali' },\n  8: { value: 8, description: 'Nuovi positivi', field: 'nuoviPositivi' },\n  9: { value: 9, description: 'Totale positivi', field: 'totalePositivi' },\n  10: { value: 10, description: 'Totale casi', field: 'totaleCasi' },\n  11: { value: 11, description: '% positivi/tamponi giornalieri', field: 'positiviTamponi' },\n};\n\ninterface Props {\n  children: React.ReactElement;\n  open: boolean;\n  value: number;\n}\n\nfunction ValueLabelComponent(props: Props) {\n  const { children, open, value } = props;\n  return (\n    <MUITooltip open={open} enterTouchDelay={0} placement=\"top\" title={value} arrow>\n      {children}\n    </MUITooltip>\n  );\n}\n\nconst Home: React.FC = () => {\n  const classes = useStyles();\n  const [regione, setRegione] = useState(99);\n  const [grafico, setGrafico] = useState(1);\n  const [datapoints, setDatapoints] = useState<DataPoint[]>();\n  const [range, setRange] = useState([0, 100]);\n  const [min, setMin] = useState(0);\n  const [max, setMax] = useState(100);\n  const history = useHistory();\n\n  useEffect(() => {\n    refresh().then(() => {\n      setMin(0);\n      setMax(nationalData.length - 1);\n      setRange([0, nationalData.length - 1]);\n\n      setRegione(99);\n    });\n  }, []);\n\n  useEffect(() => {\n    if (regione) {\n      if (regione === 99) {\n        setDatapoints(nationalData);\n      } else {\n        setDatapoints(getByRegionCode(regione));\n      }\n    }\n  }, [regione]);\n\n  const onChangeRegione = evt => {\n    setRegione(evt.target.value);\n  };\n\n  const onChangeGrafico = evt => {\n    setGrafico(evt.target.value);\n  };\n\n  const chartData = useMemo(() => {\n    if (!datapoints) return [];\n    return datapoints\n      .filter((p, i) => i >= range[0] && i <= range[1])\n      .map(p => ({\n        data: moment(p.data).format('DD.MM.YYYY'),\n        value: p[grafici[grafico].field],\n      }));\n  }, [datapoints, grafico, range]);\n\n  const selectedRegione = useMemo(() => {\n    return Regioni.find(r => r.codiceRegione === regione);\n  }, [regione]);\n\n  return (\n    <>\n      <Container maxWidth=\"xl\" className={classes.container}>\n        <Grid container spacing={1}>\n          <Grid item xl={6} lg={8} md={8} sm={7} xs={12}>\n            <FormControl variant=\"outlined\" size=\"small\" className={classes.formControl}>\n              <Select\n                labelId=\"demo-controlled-open-select-label\"\n                id=\"demo-controlled-open-select\"\n                value={regione}\n                onChange={onChangeRegione}\n                placeholder=\"Regione\"\n              >\n                {Regioni.map(r => (\n                  <MenuItem key={`reg-${r.codiceRegione}`} value={r.codiceRegione}>\n                    {r.denominazioneRegione}\n                  </MenuItem>\n                ))}\n              </Select>\n            </FormControl>\n\n            <FormControl variant=\"outlined\" size=\"small\" className={classes.formControl}>\n              <Select\n                labelId=\"demo-controlled-open-select-label\"\n                id=\"demo-controlled-open-select\"\n                value={grafico}\n                onChange={onChangeGrafico}\n                placeholder=\"Grafico\"\n              >\n                {Object.values(grafici).map(g => (\n                  <MenuItem key={`gf-${g.value}`} value={g.value}>\n                    {g.description}\n                  </MenuItem>\n                ))}\n              </Select>\n            </FormControl>\n\n            {regione === 99 ? null : (\n              <FormControl variant=\"outlined\" size=\"small\" className={classes.formControl}>\n                <Button\n                  variant=\"outlined\"\n                  onClick={() => {\n                    history.push(`/regione/${selectedRegione?.codiceRegione}`);\n                  }}\n                >\n                  Focus {selectedRegione?.denominazioneRegione}\n                </Button>\n              </FormControl>\n            )}\n          </Grid>\n\n          <Grid item xl={6} lg={4} md={4} sm={5} xs={12}>\n            <div className={classes.lastUpdate}>\n              <Typography>\n                Ultimo aggiornamento:{' '}\n                {datapoints && datapoints.length\n                  ? moment(datapoints[datapoints.length - 1].data).format('DD/MM/YYYY')\n                  : '-'}\n              </Typography>\n            </div>\n          </Grid>\n\n          <Grid item xs={12}>\n            <ResponsiveContainer width=\"100%\" height={700}>\n              <AreaChart data={chartData} margin={{ top: 5, right: 30, left: 20, bottom: 5 }}>\n                <XAxis dataKey=\"data\" />\n                <YAxis />\n                <CartesianGrid strokeDasharray=\"3 3\" />\n                <Tooltip />\n                <Legend />\n                <Area\n                  type=\"monotone\"\n                  name={grafici[grafico].description}\n                  dataKey=\"value\"\n                  stroke={blue[900]}\n                  fill={blue[700]}\n                />\n              </AreaChart>\n            </ResponsiveContainer>\n            <Grid item xs={12} style={{ marginTop: '24px' }}>\n              <Slider\n                value={range}\n                min={min}\n                max={max}\n                valueLabelDisplay=\"on\"\n                onChange={(event, value) => {\n                  if (Array.isArray(value)) setRange(value);\n                }}\n                ValueLabelComponent={ValueLabelComponent}\n                valueLabelFormat={x =>\n                  nationalData && nationalData.length\n                    ? moment(nationalData[x].data).format('DD.MM.YYYY')\n                    : x\n                }\n              />\n            </Grid>\n          </Grid>\n        </Grid>\n      </Container>\n\n      <div className={classes.footer}>\n        Fonte dati:{' '}\n        <a href=\"https://github.com/pcm-dpc/COVID-19\" target=\"_new\">\n          Presidenza del Consiglio dei Ministri - Dipartimento della Protezione Civile\n        </a>\n      </div>\n    </>\n  );\n};\n\nexport default Home;\n","/* eslint-disable import/no-mutable-exports */\nimport axios from 'axios';\nimport { StatoVaccinazioni, Somministrazione, Consegna } from '../types/vaccini';\n\nlet vaccines: StatoVaccinazioni[] = [];\nlet somministrazioni: Somministrazione[] = [];\nlet consegne: Consegna[] = [];\n\nconst loadVaccini = (): Promise<StatoVaccinazioni[]> => {\n  return axios\n    .get(\n      'https://raw.githubusercontent.com/italia/covid19-opendata-vaccini/master/dati/vaccini-summary-latest.json'\n    )\n    .then(response => response.data)\n    .then(json => {\n      const vaxx: StatoVaccinazioni[] = [];\n      json.data.forEach(d => {\n        const vax: StatoVaccinazioni = {\n          index: d.index,\n          area: d.area,\n          dosiSomministrate: d.dosi_somministrate,\n          dosiConsegnate: d.dosi_consegnate,\n          percentualeSomministrazione: d.percentuale_somministrazione,\n          ultimoAggiornamento: d.ultimo_aggiornamento,\n        };\n        vaxx.push(vax);\n      });\n      return vaxx;\n    });\n};\n\nconst loadSomministrazioni = (): Promise<Somministrazione[]> => {\n  return axios\n    .get(\n      'https://raw.githubusercontent.com/italia/covid19-opendata-vaccini/master/dati/somministrazioni-vaccini-summary-latest.json'\n    )\n    .then(response => response.data)\n    .then(json => {\n      const ss: Somministrazione[] = [];\n      json.data.forEach(d => {\n        const s: Somministrazione = {\n          index: d.index,\n          area: d.area,\n          dataSomministrazione: d.data_somministrazione,\n          totale: d.totale,\n          sessoMaschile: d.sesso_maschile,\n          sessoFemminile: d.sesso_femminile,\n          categoriaOperatoriSanitariSociosanitari: d.categoria_operatori_sanitari_sociosanitari,\n          categoriaPersonaleNonSanitario: d.categoria_personale_non_sanitario,\n          categoriaOspitiRsa: d.categoria_ospiti_rsa,\n          categoriaOver80: d.categoria_over80,\n          primaDose: d.prima_dose,\n          secondaDose: d.seconda_dose,\n        };\n        ss.push(s);\n      });\n      return ss;\n    });\n};\n\nconst loadConsegne = (): Promise<Consegna[]> => {\n  return axios\n    .get(\n      'https://raw.githubusercontent.com/italia/covid19-opendata-vaccini/master/dati/consegne-vaccini-latest.json'\n    )\n    .then(response => response.data)\n    .then(json => {\n      const cc: Consegna[] = [];\n      json.data.forEach(d => {\n        const c: Consegna = {\n          index: d.index,\n          area: d.area,\n          fornitore: d.fornitore.replace('Pfizer/BioNTech', 'Pfizer'),\n          dataConsegna: d.data_consegna,\n          numeroDosi: d.numero_dosi,\n        };\n        cc.push(c);\n      });\n      return cc;\n    });\n};\n\nconst refresh = (): Promise<StatoVaccinazioni[]> => {\n  return loadVaccini().then(vaxx => {\n    vaccines = vaxx;\n    return vaccines;\n  });\n};\n\nconst refreshSomministrazioni = (): Promise<Somministrazione[]> => {\n  return loadSomministrazioni().then(ss => {\n    somministrazioni = ss;\n    return somministrazioni;\n  });\n};\n\nconst refreshConsegne = (): Promise<Consegna[]> => {\n  return loadConsegne().then(cc => {\n    consegne = cc;\n    return consegne;\n  });\n};\n\nconst getSomministrazioniByRegion = (regionCode: string): Somministrazione[] => {\n  return somministrazioni\n    .filter(s => s.area === regionCode)\n    .sort((a, b) => (a.dataSomministrazione > b.dataSomministrazione ? 1 : -1));\n};\n\nconst getStatusByRegionType = (): Somministrazione[] => {\n  const status = {};\n  somministrazioni.forEach(s => {\n    if (!status[s.area]) {\n      status[s.area] = {\n        ...s,\n        dataSomministrazione: undefined,\n      };\n    } else {\n      if (s.area === 'LOM') console.log('Adding', s);\n      const a: Somministrazione = status[s.area];\n      a.categoriaOperatoriSanitariSociosanitari += s.categoriaOperatoriSanitariSociosanitari;\n      a.categoriaOspitiRsa += s.categoriaOspitiRsa;\n      a.categoriaOver80 += s.categoriaOver80;\n      a.categoriaPersonaleNonSanitario += s.categoriaPersonaleNonSanitario;\n      a.primaDose += s.primaDose;\n      a.secondaDose += s.secondaDose;\n      a.sessoFemminile += s.sessoFemminile;\n      a.sessoMaschile += s.sessoMaschile;\n      a.totale += s.totale;\n    }\n  });\n  const values: Somministrazione[] = Object.values(status);\n  return values.sort((a, b) => (a.area > b.area ? 1 : -1));\n};\n\nconst getConsegneByRegion = (regionCode: string): Consegna[] => {\n  return consegne\n    .filter(s => s.area === regionCode)\n    .sort((a, b) => (a.dataConsegna > b.dataConsegna ? 1 : -1));\n};\n\nexport {\n  refresh,\n  refreshSomministrazioni,\n  refreshConsegne,\n  vaccines,\n  somministrazioni,\n  consegne,\n  getSomministrazioniByRegion,\n  getConsegneByRegion,\n  getStatusByRegionType,\n};\n","import React from 'react';\nimport { Paper, Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { grey } from '@material-ui/core/colors';\n\ntype Props = {\n  title: string;\n  value: number;\n  percent?: number;\n  delta?: number;\n  icon?: React.ReactNode;\n};\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    padding: theme.spacing(1),\n    minHeight: '80px',\n  },\n  title: {\n    color: grey[500],\n  },\n  paperContent: {\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'center',\n    '& *:last-child': {\n      flexGrow: 1,\n      textAlign: 'right',\n      fontSize: '170%',\n      fontWeight: 'bold',\n    },\n  },\n  bigIcon: {\n    fontSize: '400%',\n  },\n}));\n\nconst DataPaper: React.FC<Props> = ({ title, value, icon, percent, delta }) => {\n  const classes = useStyles();\n\n  return (\n    <Paper className={classes.paper}>\n      <Typography variant=\"h6\" className={classes.title}>\n        <strong>{title}</strong>\n      </Typography>\n      <div className={classes.paperContent}>\n        {icon || <span>&nbsp;</span>}\n        <span>\n          {new Intl.NumberFormat().format(value)}\n          {percent ? ` (${percent.toFixed(1)}%)` : ''}\n          {delta ? `(${delta > 0 ? '+' : ''}${Intl.NumberFormat().format(delta)})` : ''}\n        </span>\n      </div>\n    </Paper>\n  );\n};\n\nexport default DataPaper;\n","/* eslint-disable no-nested-ternary */\nimport React, { useEffect, useState, useMemo, useCallback } from 'react';\nimport { withStyles, makeStyles, useTheme } from '@material-ui/core/styles';\nimport { Container, Grid, Hidden, Typography, useMediaQuery } from '@material-ui/core';\nimport { ToggleButton, ToggleButtonGroup } from '@material-ui/lab';\nimport { blue, grey, lightBlue, pink, lightGreen, orange, purple } from '@material-ui/core/colors';\nimport {\n  LocalShipping as LocalShippingIcon,\n  LocalHospital as LocalHospitalIcon,\n} from '@material-ui/icons';\nimport moment from 'moment';\nimport {\n  ResponsiveContainer,\n  BarChart,\n  Bar,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  LabelList,\n} from 'recharts';\nimport { refresh, vaccines, refreshSomministrazioni, getStatusByRegionType } from '../data/vaccini';\nimport Regioni from '../data/regioni';\nimport DataPaper from '../components/DataPaper';\nimport { Somministrazione } from '../types/vaccini';\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    padding: theme.spacing(2, 3),\n  },\n  buttons: {\n    textAlign: 'center',\n  },\n  lastUpdate: {\n    textAlign: 'right',\n    padding: theme.spacing(2),\n  },\n  bigIcon: {\n    fontSize: '400%',\n  },\n  title: {\n    color: grey[500],\n  },\n  footer: {\n    textAlign: 'center',\n    padding: theme.spacing(2, 0),\n    backgroundColor: '#c0c0c0',\n  },\n  mb2: {\n    marginBottom: theme.spacing(2),\n  },\n}));\n\nconst styles = theme => ({\n  root: {\n    color: theme.palette.primary.main,\n    '&$selected': {\n      color: theme.palette.primary.contrastText,\n      backgroundColor: theme.palette.primary.main,\n      '&:hover': {\n        backgroundColor: theme.palette.primary.light,\n      },\n    },\n    padding: theme.spacing(0.75, 2),\n  },\n  selected: {},\n});\n\nconst StyledToggleButton = withStyles(styles, { withTheme: true })(ToggleButton);\n\nconst Vaccini: React.FC = () => {\n  const classes = useStyles();\n  const [vacc, setVacc] = useState(vaccines);\n  const [shipped, setShipped] = useState(0);\n  const [given, setGiven] = useState(0);\n  const [view, setView] = useState('values');\n  const [regionMap, setRegionMap] = useState({});\n  const [statusByRegion, setStatusByRegion] = useState<Somministrazione[]>([]);\n\n  const theme = useTheme();\n  const isXs = useMediaQuery(theme.breakpoints.down('xs'));\n  const isSm = useMediaQuery(theme.breakpoints.down('sm'));\n\n  const loadRegioni = useCallback(() => {\n    const map = {};\n    Regioni.forEach(r => {\n      map[r.abbreviazione] = r.denominazioneRegione;\n    });\n    setRegionMap(map);\n  }, []);\n\n  useEffect(() => {\n    loadRegioni();\n    refresh().then(vaxx => {\n      setVacc(vaxx);\n      let c = 0;\n      let s = 0;\n      vaxx.forEach(vax => {\n        c += vax.dosiConsegnate;\n        s += vax.dosiSomministrate;\n      });\n      setShipped(c);\n      setGiven(s);\n    });\n    refreshSomministrazioni().then(() => {\n      setStatusByRegion(getStatusByRegionType());\n    });\n  }, [loadRegioni]);\n\n  const chartData = useMemo(() => {\n    return vacc\n      .sort((a, b) => {\n        return a.area.localeCompare(b.area);\n      })\n      .map(v => ({\n        regione: regionMap[v.area] || v.area,\n        'Dosi consegnate': v.dosiConsegnate,\n        'Dosi somministrate': v.dosiSomministrate,\n        'Percentuale somministrazioni': v.percentualeSomministrazione,\n      }));\n  }, [vacc, regionMap]);\n\n  const chartData2 = useMemo(() => {\n    return statusByRegion.map(v => ({\n      regione: regionMap[v.area] || v.area,\n      ...v,\n    }));\n  }, [statusByRegion, regionMap]);\n\n  const lastUpdate = useMemo(() => {\n    let date;\n    vacc.forEach(v => {\n      const d = moment(v.ultimoAggiornamento);\n      if (!date || date.isBefore(d)) {\n        date = d;\n      }\n    });\n    return date;\n  }, [vacc]);\n\n  return (\n    <>\n      <Container maxWidth=\"xl\" className={classes.container}>\n        <Grid container spacing={2} className={classes.mb2}>\n          <Hidden mdDown>\n            <Grid item xs={12} sm={6} md={6} lg={3} />\n          </Hidden>\n          <Grid item xs={12} sm={6} md={6} lg={3}>\n            <DataPaper\n              title=\"Consegnati\"\n              value={shipped}\n              icon={<LocalShippingIcon className={classes.bigIcon} />}\n            />\n          </Grid>\n          <Grid item xs={12} sm={6} md={6} lg={3}>\n            <DataPaper\n              title=\"Somministrati\"\n              value={given}\n              icon={<LocalHospitalIcon className={classes.bigIcon} />}\n              percent={shipped === 0 ? 0 : (given * 100) / shipped}\n            />\n          </Grid>\n          <Hidden mdDown>\n            <Grid item xs={12} sm={6} md={6} lg={3} />\n          </Hidden>\n        </Grid>\n\n        <Grid container spacing={2}>\n          <Grid item xs={12} sm={6}>\n            <Typography variant=\"h6\" className={classes.title}>\n              <strong>Dati per regione</strong>\n            </Typography>\n          </Grid>\n          <Hidden xsDown>\n            <Grid item sm={6} className={classes.lastUpdate}>\n              Ultimo aggiornamento: {lastUpdate ? lastUpdate.format('DD/MM/YYYY') : ''}\n            </Grid>\n          </Hidden>\n          <Grid item sm={12}>\n            <div className={classes.buttons}>\n              <ToggleButtonGroup\n                size=\"medium\"\n                value={view}\n                exclusive\n                onChange={(evt, val) => {\n                  setView(val);\n                }}\n              >\n                <StyledToggleButton value=\"values\">Cons./som.</StyledToggleButton>\n                <StyledToggleButton value=\"percent\">Sommin. (%)</StyledToggleButton>\n                <StyledToggleButton value=\"type\">Categoria</StyledToggleButton>\n                <StyledToggleButton value=\"sex\">Sesso</StyledToggleButton>\n                <StyledToggleButton value=\"dose\">Dose</StyledToggleButton>\n              </ToggleButtonGroup>\n            </div>\n          </Grid>\n        </Grid>\n\n        <ResponsiveContainer width=\"100%\" height={isXs ? 500 : isSm ? 600 : 700}>\n          <BarChart\n            data={view === 'type' || view === 'sex' || view === 'dose' ? chartData2 : chartData}\n            margin={{ top: 5, right: 30, left: 20, bottom: 5 }}\n            barGap={isXs ? -3 : isSm ? -7 : -15}\n          >\n            <XAxis dataKey=\"regione\" angle={-60} textAnchor=\"end\" height={130} interval={0} />\n            <YAxis width={view === 'percent' ? 30 : 50} />\n            <CartesianGrid strokeDasharray=\"3 3\" />\n            <Tooltip />\n            <Legend />\n            {view === 'values' ? (\n              <Bar dataKey=\"Dosi consegnate\" stackId=\"b\" fill={blue[700]} stroke={blue[900]} />\n            ) : null}\n            {view === 'values' ? (\n              <Bar dataKey=\"Dosi somministrate\" stackId=\"a\" fill={blue[400]} stroke={blue[600]} />\n            ) : null}\n            {view === 'percent' ? (\n              <Bar\n                dataKey=\"Percentuale somministrazioni\"\n                fill={lightGreen[700]}\n                stroke={lightGreen[900]}\n              >\n                {isSm ? null : (\n                  <LabelList\n                    dataKey=\"Percentuale somministrazioni\"\n                    position=\"top\"\n                    formatter={v => `${Number.parseFloat(v).toFixed(1)}%`}\n                  />\n                )}\n              </Bar>\n            ) : null}\n\n            {view === 'type' ? (\n              <Bar\n                dataKey=\"categoriaOperatoriSanitariSociosanitari\"\n                name=\"Operatori sanitari\"\n                stackId=\"a\"\n                fill={purple[800]}\n                stroke={purple[900]}\n              />\n            ) : null}\n            {view === 'type' ? (\n              <Bar\n                dataKey=\"categoriaOspitiRsa\"\n                name=\"Ospiti RSA\"\n                stackId=\"a\"\n                fill={purple[600]}\n                stroke={purple[700]}\n              />\n            ) : null}\n            {view === 'type' ? (\n              <Bar\n                dataKey=\"categoriaOver80\"\n                name=\"Over 80\"\n                stackId=\"a\"\n                fill={purple[400]}\n                stroke={purple[500]}\n              />\n            ) : null}\n            {view === 'type' ? (\n              <Bar\n                dataKey=\"categoriaPersonaleNonSanitario\"\n                name=\"Personale non sanitario\"\n                stackId=\"a\"\n                fill={purple[200]}\n                stroke={purple[300]}\n              />\n            ) : null}\n\n            {view === 'sex' ? (\n              <Bar\n                dataKey=\"sessoMaschile\"\n                name=\"Maschi\"\n                stackId=\"a\"\n                fill={lightBlue[400]}\n                stroke={lightBlue[600]}\n              />\n            ) : null}\n            {view === 'sex' ? (\n              <Bar\n                dataKey=\"sessoFemminile\"\n                name=\"Femmine\"\n                stackId=\"a\"\n                fill={pink[300]}\n                stroke={pink[500]}\n              />\n            ) : null}\n\n            {view === 'dose' ? (\n              <Bar\n                dataKey=\"primaDose\"\n                name=\"Prima dose\"\n                stackId=\"a\"\n                fill={orange[700]}\n                stroke={orange[900]}\n              />\n            ) : null}\n            {view === 'dose' ? (\n              <Bar\n                dataKey=\"secondaDose\"\n                name=\"Seconda dose\"\n                stackId=\"a\"\n                fill={orange[400]}\n                stroke={orange[600]}\n              />\n            ) : null}\n          </BarChart>\n        </ResponsiveContainer>\n      </Container>\n\n      <div className={classes.footer}>\n        Fonte dati:{' '}\n        <a href=\"https://github.com/italia/covid19-opendata-vaccini\" target=\"_new\">\n          Commissario straordinario per l&apos;emergenza Covid-19\n        </a>\n      </div>\n    </>\n  );\n};\n\nexport default Vaccini;\n","import React, { useCallback } from 'react';\nimport { AppBar, Toolbar, Typography, IconButton, Button } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { GitHub as GitHubIcon } from '@material-ui/icons';\nimport { useHistory } from 'react-router-dom';\n\nconst useStyles = makeStyles(() => ({\n  title: {\n    display: 'flex',\n    flexDirection: 'column',\n    flexGrow: 1,\n  },\n  subtitle: {\n    lineHeight: 'normal',\n  },\n  github: {\n    color: 'white',\n  },\n  link: {\n    color: 'white',\n  },\n}));\n\ntype TitleProps = {\n  title: string;\n  subtitle: string;\n  linkName: string;\n  link: string;\n};\n\nconst Header: React.FC<TitleProps> = ({ title, subtitle, linkName, link }) => {\n  const classes = useStyles();\n  const history = useHistory();\n\n  const openGitHub = useCallback(() => {\n    window.open('https://github.com/ermannos/covid-19-italy', '_new');\n  }, []);\n\n  return (\n    <AppBar position=\"static\">\n      <Toolbar>\n        <div className={classes.title}>\n          <Typography variant=\"h6\">{title}</Typography>\n          <Typography variant=\"overline\" className={classes.subtitle}>\n            {subtitle}\n          </Typography>\n        </div>\n\n        <Button\n          className={classes.link}\n          color=\"inherit\"\n          onClick={() => {\n            history.push(link);\n          }}\n        >\n          {linkName}\n        </Button>\n        <IconButton className={classes.github} onClick={openGitHub} title=\"GitHub repository\">\n          <GitHubIcon />\n        </IconButton>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nexport default Header;\n","import React, { useMemo, useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Container, Grid, Typography } from '@material-ui/core';\nimport { useParams } from 'react-router-dom';\nimport moment from 'moment';\nimport Regioni from '../data/regioni';\nimport Header from './Header';\nimport {\n  refreshSomministrazioni,\n  getSomministrazioniByRegion,\n  refreshConsegne,\n  getConsegneByRegion,\n} from '../data/vaccini';\nimport { refresh, getByRegionCode } from '../data/dataloader';\nimport DataPaper from '../components/DataPaper';\nimport DataPoint from '../types/datapoint';\nimport { Somministrazione, Consegna } from '../types/vaccini';\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    minHeight: 600,\n    padding: theme.spacing(2, 3),\n  },\n  section: {\n    marginBottom: theme.spacing(4),\n  },\n  subtitle: {\n    fontSize: '60%',\n  },\n  footer: {\n    textAlign: 'center',\n    padding: theme.spacing(2, 0),\n    backgroundColor: '#c0c0c0',\n  },\n}));\n\ninterface ParamTypes {\n  code: string;\n}\n\nconst Regione: React.FC = () => {\n  const classes = useStyles();\n  const code = Number.parseInt(useParams<ParamTypes>().code, 10);\n  const [covidData, setCovidData] = useState<DataPoint[]>([]);\n  const [somministrazioni, setSomministrazioni] = useState<Somministrazione[]>([]);\n  const [consegne, setConsegne] = useState<Consegna[]>([]);\n\n  const regione = useMemo(() => {\n    return Regioni.find(r => r.codiceRegione === code);\n  }, [code]);\n\n  useEffect(() => {\n    refresh().then(() => {\n      setCovidData(getByRegionCode(code));\n    });\n    refreshSomministrazioni().then(() => {\n      setSomministrazioni(getSomministrazioniByRegion(regione?.abbreviazione || '?'));\n    });\n    refreshConsegne().then(() => {\n      setConsegne(getConsegneByRegion(regione?.abbreviazione || '?'));\n    });\n  }, [code, regione]);\n\n  const previousData: DataPoint | undefined = covidData.length\n    ? covidData[covidData.length - 2]\n    : undefined;\n  const lastData: DataPoint | undefined = covidData.length\n    ? covidData[covidData.length - 1]\n    : undefined;\n  const previousSomministrazione: Somministrazione | undefined = somministrazioni.length\n    ? somministrazioni[somministrazioni.length - 2]\n    : undefined;\n  const lastSomministrazione: Somministrazione | undefined = somministrazioni.length\n    ? somministrazioni[somministrazioni.length - 1]\n    : undefined;\n\n  const prepreviousConsegna: Consegna | undefined =\n    consegne.length >= 3 ? consegne[consegne.length - 3] : undefined;\n  const previousConsegna: Consegna | undefined =\n    consegne.length >= 2 ? consegne[consegne.length - 2] : undefined;\n  const lastConsegna: Consegna | undefined = consegne.length\n    ? consegne[consegne.length - 1]\n    : undefined;\n\n  return (\n    <>\n      <Header\n        title=\"Covid-19 Italia\"\n        subtitle={`Focus ${regione?.denominazioneRegione}`}\n        linkName=\"Home\"\n        link=\"/\"\n      />\n      <Container maxWidth=\"xl\" className={classes.container}>\n        <Grid container spacing={2} className={classes.section}>\n          <Grid item xs={12}>\n            <Typography variant=\"h4\">\n              Situazione epidemia{' '}\n              <span className={classes.subtitle}>\n                {lastData ? ` al ${moment(lastData.data).format('DD/MM/YYYY')}` : ''}\n              </span>\n            </Typography>\n          </Grid>\n          <Grid item md={3} sm={4} xs={12}>\n            <DataPaper\n              title=\"Pazienti degenti\"\n              value={lastData?.ricoveratiConSintomi || 0}\n              delta={\n                (lastData?.ricoveratiConSintomi || 0) - (previousData?.ricoveratiConSintomi || 0)\n              }\n            />\n          </Grid>\n          <Grid item md={3} sm={4} xs={12}>\n            <DataPaper\n              title=\"Pazienti intensiva\"\n              value={lastData?.terapiaIntensiva || 0}\n              delta={(lastData?.terapiaIntensiva || 0) - (previousData?.terapiaIntensiva || 0)}\n            />\n          </Grid>\n          <Grid item md={3} sm={4} xs={12}>\n            <DataPaper\n              title=\"Pazienti deceduti\"\n              value={lastData?.deceduti || 0}\n              delta={(lastData?.deceduti || 0) - (previousData?.deceduti || 0)}\n            />\n          </Grid>\n          <Grid item md={3} sm={4} xs={12}>\n            <DataPaper\n              title=\"Tamponi effettuati\"\n              value={lastData?.tamponi || 0}\n              delta={(lastData?.tamponi || 0) - (previousData?.tamponi || 0)}\n            />\n          </Grid>\n          <Grid item md={3} sm={4} xs={12}>\n            <DataPaper\n              title=\"Tamponi positivi\"\n              value={lastData?.nuoviPositivi || 0}\n              percent={lastData?.positiviTamponi || 0}\n            />\n          </Grid>\n          <Grid item md={3} sm={4} xs={12}>\n            <DataPaper\n              title=\"Attualmente positivi\"\n              value={lastData?.totalePositivi || 0}\n              delta={(lastData?.totalePositivi || 0) - (previousData?.totalePositivi || 0)}\n            />\n          </Grid>\n        </Grid>\n\n        <Grid container spacing={2} className={classes.section}>\n          <Grid item xs={12}>\n            <Typography variant=\"h4\">\n              Campagna vaccinale\n              <span className={classes.subtitle}>\n                {lastData\n                  ? ` al ${moment(lastSomministrazione?.dataSomministrazione).format('DD/MM/YYYY')}`\n                  : ''}\n              </span>\n            </Typography>\n          </Grid>\n          <Grid item md={3} sm={4} xs={12}>\n            <DataPaper\n              title=\"Vaccini somministrati\"\n              value={lastSomministrazione?.totale || 0}\n              delta={(lastSomministrazione?.totale || 0) - (previousSomministrazione?.totale || 0)}\n            />\n          </Grid>\n          <Grid item md={3} sm={4} xs={12}>\n            <DataPaper\n              title=\"Somm. prima dose\"\n              value={lastSomministrazione?.primaDose || 0}\n              delta={\n                (lastSomministrazione?.primaDose || 0) - (previousSomministrazione?.primaDose || 0)\n              }\n            />\n          </Grid>\n          <Grid item md={3} sm={4} xs={12}>\n            <DataPaper\n              title=\"Somm. seconda dose\"\n              value={lastSomministrazione?.secondaDose || 0}\n              delta={\n                (lastSomministrazione?.secondaDose || 0) -\n                (previousSomministrazione?.secondaDose || 0)\n              }\n            />\n          </Grid>\n          <Grid item md={3} sm={4} xs={12}>\n            <DataPaper\n              title=\"Operatori sanitari\"\n              value={lastSomministrazione?.categoriaOperatoriSanitariSociosanitari || 0}\n              delta={\n                (lastSomministrazione?.categoriaOperatoriSanitariSociosanitari || 0) -\n                (previousSomministrazione?.categoriaOperatoriSanitariSociosanitari || 0)\n              }\n            />\n          </Grid>\n          <Grid item md={3} sm={4} xs={12}>\n            <DataPaper\n              title=\"Ospiti RSA\"\n              value={lastSomministrazione?.categoriaOspitiRsa || 0}\n              delta={\n                (lastSomministrazione?.categoriaOspitiRsa || 0) -\n                (previousSomministrazione?.categoriaOspitiRsa || 0)\n              }\n            />\n          </Grid>\n          <Grid item md={3} sm={4} xs={12}>\n            <DataPaper\n              title=\"Over 80\"\n              value={lastSomministrazione?.categoriaOver80 || 0}\n              delta={\n                (lastSomministrazione?.categoriaOver80 || 0) -\n                (previousSomministrazione?.categoriaOver80 || 0)\n              }\n            />\n          </Grid>\n          <Grid item md={3} sm={4} xs={12}>\n            <DataPaper\n              title=\"Pers. non sanitario\"\n              value={lastSomministrazione?.categoriaPersonaleNonSanitario || 0}\n              delta={\n                (lastSomministrazione?.categoriaPersonaleNonSanitario || 0) -\n                (previousSomministrazione?.categoriaPersonaleNonSanitario || 0)\n              }\n            />\n          </Grid>\n        </Grid>\n        <Grid container spacing={2} className={classes.section}>\n          <Grid item xs={12}>\n            <Typography variant=\"h4\">Ultime consegne vaccini</Typography>\n          </Grid>\n          <Grid item md={3} sm={4} xs={12}>\n            <DataPaper\n              title={\n                prepreviousConsegna\n                  ? `${prepreviousConsegna.fornitore} - ${moment(\n                      prepreviousConsegna.dataConsegna\n                    ).format('DD MMM')}`\n                  : ''\n              }\n              value={prepreviousConsegna?.numeroDosi || 0}\n            />\n          </Grid>\n          <Grid item md={3} sm={4} xs={12}>\n            <DataPaper\n              title={\n                previousConsegna\n                  ? `${previousConsegna.fornitore} - ${moment(previousConsegna.dataConsegna).format(\n                      'DD MMM'\n                    )}`\n                  : ''\n              }\n              value={previousConsegna?.numeroDosi || 0}\n            />\n          </Grid>\n          <Grid item md={3} sm={4} xs={12}>\n            <DataPaper\n              title={\n                lastConsegna\n                  ? `${lastConsegna.fornitore} - ${moment(lastConsegna.dataConsegna).format(\n                      'DD MMM'\n                    )}`\n                  : ''\n              }\n              value={lastConsegna?.numeroDosi || 0}\n            />\n          </Grid>\n        </Grid>\n      </Container>\n\n      <div className={classes.footer}>\n        Fonti dati:{' '}\n        <a href=\"https://github.com/pcm-dpc/COVID-19\" target=\"_new\">\n          Presidenza del Consiglio dei Ministri - Dipartimento della Protezione Civile\n        </a>\n        <br />\n        <a href=\"https://github.com/italia/covid19-opendata-vaccini\" target=\"_new\">\n          Commissario straordinario per l&apos;emergenza Covid-19\n        </a>\n      </div>\n    </>\n  );\n};\n\nexport default Regione;\n","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n\nimport Home from './pages/Home';\nimport Vaccini from './pages/Vaccini';\nimport Regione from './pages/Regione';\nimport Header from './pages/Header';\nimport './App.css';\n\nconst App: React.FC = () => {\n  return (\n    <Router basename=\"/covid-19-italy\">\n      <Switch>\n        <Route exact path={['/']}>\n          <Header\n            title=\"Covid-19 Italia\"\n            subtitle=\"Andamento epidemia\"\n            linkName=\"Vaccini\"\n            link=\"/vaccini\"\n          />\n          <Home />\n        </Route>\n        <Route path={['/vaccini']}>\n          <Header\n            title=\"Covid-19 Italia\"\n            subtitle=\"Andamento campagna vaccinale\"\n            linkName=\"Home\"\n            link=\"/\"\n          />\n          <Vaccini />\n        </Route>\n        <Route path={['/regione/:code']}>\n          <Regione />\n        </Route>\n      </Switch>\n    </Router>\n  );\n};\n\nexport default App;\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\nimport { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport { blue, amber } from '@material-ui/core/colors';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst palette = {\n  primary: {\n    main: blue['900'],\n  },\n  secondary: amber,\n};\n\nconst theme = createMuiTheme({\n  palette,\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}