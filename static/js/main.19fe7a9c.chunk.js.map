{"version":3,"sources":["data/dataloader.ts","data/regioni.ts","pages/Home.tsx","data/vaccini.ts","components/DataPaper.tsx","pages/Vaccini.tsx","pages/Header.tsx","pages/Regione.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["regionalData","nationalData","loadData","url","data","axios","get","then","response","json","forEach","row","point","stato","codiceRegione","codice_regione","denominazioneRegione","denominazione_regione","lat","long","lang","ricoveratiConSintomi","ricoverati_con_sintomi","terapiaIntensiva","terapia_intensiva","totaleOspedalizzati","totale_ospedalzzati","isolamentoDomiciliare","isolamento_domiciliare","totalePositivi","totale_positivi","variazioneTotalePositivi","variazione_totale_positivi","nuoviPositivi","nuovi_positivi","dimessiGuariti","dimessi_guariti","deceduti","decedutiTotali","casiDaSospettoDiagnostico","casi_da_sospetto_diagnostico","casiDaScreening","casi_da_screening","totaleCasi","totale_casi","tamponi","tamponiTotali","positiviTamponi","casiTestati","casi_testati","note","push","catch","err","console","error","calculateDerivedData","previousPoint","Math","round","getByRegionCode","regionCode","filter","map","p","newPoint","refresh","Promise","all","rData","nData","splice","length","Regioni","abbreviazione","useStyles","makeStyles","theme","container","padding","spacing","formControl","minWidth","marginRight","marginBottom","lastUpdate","textAlign","footer","backgroundColor","grafici","1","value","description","field","2","3","4","5","6","7","8","9","10","11","ValueLabelComponent","props","children","open","enterTouchDelay","placement","title","arrow","Home","classes","useState","regione","setRegione","grafico","setGrafico","datapoints","setDatapoints","range","setRange","min","setMin","max","setMax","history","useHistory","useEffect","chartData","useMemo","i","moment","format","selectedRegione","find","r","Container","maxWidth","className","Grid","item","xl","lg","md","sm","xs","FormControl","variant","size","Select","labelId","id","onChange","evt","target","placeholder","MenuItem","Object","values","g","Button","onClick","Typography","width","height","margin","top","right","left","bottom","dataKey","strokeDasharray","type","name","stroke","blue","fill","style","marginTop","Slider","valueLabelDisplay","event","Array","isArray","valueLabelFormat","x","href","vaccines","somministrazioni","consegne","vaxx","d","vax","index","area","dosiSomministrate","dosi_somministrate","dosiConsegnate","dosi_consegnate","percentualeSomministrazione","percentuale_somministrazione","ultimoAggiornamento","ultimo_aggiornamento","refreshSomministrazioni","ss","s","dataSomministrazione","data_somministrazione","totale","sessoMaschile","sesso_maschile","sessoFemminile","sesso_femminile","categoriaOperatoriSanitariSociosanitari","categoria_operatori_sanitari_sociosanitari","categoriaPersonaleNonSanitario","categoria_personale_non_sanitario","categoriaOspitiRsa","categoria_ospiti_rsa","categoriaPersonaleScolastico","categoria_personale_scolastico","categoriaSoggettiFragili","categoria_soggetti_fragili","categoriaForzeArmate","categoria_forze_armate","categoriaAltro","categoria_altro","categoriaUnder50","categoria_under50","categoria5059","categoria_50_59","categoria6069","categoria_60_69","categoria7079","categoria_70_79","categoriaOver80","categoria_over80","primaDose","prima_dose","secondaDose","seconda_dose","refreshConsegne","cc","c","fornitore","replace","dataConsegna","data_consegna","numeroDosi","numero_dosi","paper","minHeight","color","grey","paperContent","display","flexDirection","alignItems","flexGrow","fontSize","fontWeight","addendum","bigIcon","DataPaper","icon","percent","delta","Paper","Intl","NumberFormat","toFixed","buttons","mb2","StyledToggleButton","withStyles","root","palette","primary","main","contrastText","light","selected","withTheme","ToggleButton","Vaccini","vacc","setVacc","shipped","setShipped","given","setGiven","view","setView","regionMap","setRegionMap","statusByRegion","setStatusByRegion","consegneBySupplier","setConsegneBySupplier","useTheme","isXs","useMediaQuery","breakpoints","down","isSm","loadRegioni","useCallback","status","a","undefined","sort","b","getStatusByRegionType","getTotaleConsegneBySupplier","localeCompare","v","chartData2","chartData3","date","isBefore","getBar","viewRestriction","stackId","Hidden","mdDown","LocalShipping","LocalHospital","xsDown","ToggleButtonGroup","exclusive","val","barGap","angle","textAnchor","interval","lightGreen","position","formatter","Number","parseFloat","purple","green","lightBlue","pink","orange","indigo","subtitle","lineHeight","github","link","Header","linkName","openGitHub","window","AppBar","Toolbar","IconButton","GitHub","sectionTitle","section","Regione","code","parseInt","useParams","covidData","setCovidData","setSomministrazioni","setConsegne","previousData","lastData","previousSomministrazione","lastSomministrazione","lastConsegna1","lastConsegna2","lastConsegna3","lastConsegna4","App","basename","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","secondary","amber","createMuiTheme","ReactDOM","render","StrictMode","ThemeProvider","document","getElementById"],"mappings":"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","file":"static/js/main.19fe7a9c.chunk.js","sourcesContent":["/* eslint-disable no-param-reassign */\nimport axios from 'axios';\nimport { calendarFormat } from 'moment';\nimport DataPoint from '../types/datapoint';\n\nconst regionalUrl =\n  'https://raw.githubusercontent.com/pcm-dpc/COVID-19/master/dati-json/dpc-covid19-ita-regioni.json';\nconst nationalUrl =\n  'https://raw.githubusercontent.com/pcm-dpc/COVID-19/master/dati-json/dpc-covid19-ita-andamento-nazionale.json';\n\nconst regionalData: DataPoint[] = [];\nconst nationalData: DataPoint[] = [];\n\nconst loadData = (url: string): Promise<DataPoint[]> => {\n  const data: DataPoint[] = [];\n  return axios\n    .get(url)\n    .then(response => response.data)\n    .then(json => {\n      json.forEach(row => {\n        const point: DataPoint = {\n          data: row.data,\n          stato: row.stato,\n          codiceRegione: row.codice_regione,\n          denominazioneRegione: row.denominazione_regione,\n          lat: row.lat,\n          long: row.lang,\n          ricoveratiConSintomi: row.ricoverati_con_sintomi,\n          terapiaIntensiva: row.terapia_intensiva,\n          totaleOspedalizzati: row.totale_ospedalzzati,\n          isolamentoDomiciliare: row.isolamento_domiciliare,\n          totalePositivi: row.totale_positivi,\n          variazioneTotalePositivi: row.variazione_totale_positivi,\n          nuoviPositivi: row.nuovi_positivi,\n          dimessiGuariti: row.dimessi_guariti,\n          deceduti: 0,\n          decedutiTotali: row.deceduti,\n          casiDaSospettoDiagnostico: row.casi_da_sospetto_diagnostico,\n          casiDaScreening: row.casi_da_screening,\n          totaleCasi: row.totale_casi,\n          tamponi: 0,\n          tamponiTotali: row.tamponi,\n          positiviTamponi: 0,\n          casiTestati: row.casi_testati,\n          note: row.note,\n        };\n        data.push(point);\n      });\n\n      return data;\n    })\n    .catch(err => {\n      // eslint-disable-next-line no-console\n      console.error(err);\n      return data;\n    });\n};\n\nconst loadRegionalData = (): Promise<DataPoint[]> => {\n  return loadData(regionalUrl);\n};\n\nconst loadNationalData = (): Promise<DataPoint[]> => {\n  return loadData(nationalUrl);\n};\n\nconst calculateDerivedData = (point: DataPoint, previousPoint?: DataPoint): DataPoint => {\n  return {\n    ...point,\n    deceduti: previousPoint ? point.decedutiTotali - previousPoint.decedutiTotali : 0,\n    tamponi: point.tamponiTotali - (previousPoint ? previousPoint.tamponiTotali : 0),\n    totaleOspedalizzati: point.terapiaIntensiva + point.ricoveratiConSintomi,\n    positiviTamponi:\n      previousPoint && point.tamponiTotali > previousPoint.tamponiTotali\n        ? Math.round(\n            (point.nuoviPositivi / (point.tamponiTotali - previousPoint.tamponiTotali)) * 10000\n          ) / 100\n        : 0,\n  };\n};\n\nconst getByRegionCode = (regionCode: number): DataPoint[] => {\n  const points = regionalData.filter(point => point.codiceRegione === regionCode);\n\n  let previousPoint: DataPoint;\n  return points.map(p => {\n    const newPoint = calculateDerivedData(p, previousPoint);\n    previousPoint = p;\n    return newPoint;\n  });\n};\n\nconst getLastByRegionCode = (regionCode: number): DataPoint => {\n  const data = getByRegionCode(regionCode);\n  return data[data.length - 1];\n};\n\nconst refresh = (): Promise<void> => {\n  return Promise.all([loadRegionalData(), loadNationalData()]).then(([rData, nData]) => {\n    regionalData.splice(0, regionalData.length);\n    nationalData.splice(0, nationalData.length);\n\n    rData.forEach(point => {\n      regionalData.push(point);\n    });\n\n    let previousPoint: DataPoint;\n    nData.forEach(point => {\n      nationalData.push(calculateDerivedData(point, previousPoint));\n      previousPoint = point;\n    });\n  });\n};\n\nexport { refresh, getByRegionCode, getLastByRegionCode, nationalData };\n","import Regione from '../types/regione';\n\nconst Regioni: Regione[] = [\n  {\n    codiceRegione: 99,\n    denominazioneRegione: 'ITALIA',\n    abbreviazione: 'ITA',\n  },\n  {\n    codiceRegione: 13,\n    denominazioneRegione: 'Abruzzo',\n    abbreviazione: 'ABR',\n  },\n  {\n    codiceRegione: 17,\n    denominazioneRegione: 'Basilicata',\n    abbreviazione: 'BAS',\n  },\n  {\n    codiceRegione: 18,\n    denominazioneRegione: 'Calabria',\n    abbreviazione: 'CAL',\n  },\n  {\n    codiceRegione: 15,\n    denominazioneRegione: 'Campania',\n    abbreviazione: 'CAM',\n  },\n  {\n    codiceRegione: 8,\n    denominazioneRegione: 'Emilia romagna',\n    abbreviazione: 'EMR',\n  },\n  {\n    codiceRegione: 6,\n    denominazioneRegione: 'Friuli Venezia Giulia',\n    abbreviazione: 'FVG',\n  },\n  {\n    codiceRegione: 12,\n    denominazioneRegione: 'Lazio',\n    abbreviazione: 'LAZ',\n  },\n  {\n    codiceRegione: 7,\n    denominazioneRegione: 'Liguria',\n    abbreviazione: 'LIG',\n  },\n  {\n    codiceRegione: 3,\n    denominazioneRegione: 'Lombardia',\n    abbreviazione: 'LOM',\n  },\n  {\n    codiceRegione: 11,\n    denominazioneRegione: 'Marche',\n    abbreviazione: 'MAR',\n  },\n  {\n    codiceRegione: 14,\n    denominazioneRegione: 'Molise',\n    abbreviazione: 'MOL',\n  },\n  {\n    codiceRegione: 21,\n    denominazioneRegione: 'P.A. Bolzano',\n    abbreviazione: 'PAB',\n  },\n  {\n    codiceRegione: 22,\n    denominazioneRegione: 'P.A. Trento',\n    abbreviazione: 'PAT',\n  },\n  {\n    codiceRegione: 1,\n    denominazioneRegione: 'Piemonte',\n    abbreviazione: 'PIE',\n  },\n  {\n    codiceRegione: 16,\n    denominazioneRegione: 'Puglia',\n    abbreviazione: 'PUG',\n  },\n  {\n    codiceRegione: 20,\n    denominazioneRegione: 'Sardegna',\n    abbreviazione: 'SAR',\n  },\n  {\n    codiceRegione: 19,\n    denominazioneRegione: 'Sicilia',\n    abbreviazione: 'SIC',\n  },\n  {\n    codiceRegione: 9,\n    denominazioneRegione: 'Toscana',\n    abbreviazione: 'TOS',\n  },\n  {\n    codiceRegione: 10,\n    denominazioneRegione: 'Umbria',\n    abbreviazione: 'UMB',\n  },\n  {\n    codiceRegione: 2,\n    denominazioneRegione: \"Valle D'Aosta\",\n    abbreviazione: 'VDA',\n  },\n  {\n    codiceRegione: 5,\n    denominazioneRegione: 'Veneto',\n    abbreviazione: 'VEN',\n  },\n];\n\nexport default Regioni;\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/no-redeclare */\nimport React, { useEffect, useState, useMemo } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport {\n  Container,\n  FormControl,\n  Select,\n  MenuItem,\n  Grid,\n  Typography,\n  Slider,\n  Tooltip as MUITooltip,\n  Button,\n} from '@material-ui/core';\nimport { blue } from '@material-ui/core/colors';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n  ResponsiveContainer,\n  AreaChart,\n  Area,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n} from 'recharts';\nimport moment from 'moment';\nimport { refresh, getByRegionCode, nationalData } from '../data/dataloader';\nimport Regioni from '../data/regioni';\nimport DataPoint from '../types/datapoint';\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    padding: theme.spacing(2, 3),\n  },\n  formControl: {\n    minWidth: 200,\n    marginRight: theme.spacing(1),\n    marginBottom: theme.spacing(1),\n  },\n  lastUpdate: {\n    textAlign: 'right',\n    padding: theme.spacing(1),\n  },\n  footer: {\n    textAlign: 'center',\n    padding: theme.spacing(2, 0),\n    backgroundColor: '#c0c0c0',\n  },\n}));\n\nconst grafici = {\n  1: { value: 1, description: 'Pazienti degenti', field: 'ricoveratiConSintomi' },\n  2: { value: 2, description: 'Pazienti intensiva', field: 'terapiaIntensiva' },\n  3: { value: 3, description: 'Totale degenti', field: 'totaleOspedalizzati' },\n  4: { value: 4, description: 'Decessi giornalieri', field: 'deceduti' },\n  5: { value: 5, description: 'Decessi totali', field: 'decedutiTotali' },\n  6: { value: 6, description: 'Tamponi giornalieri', field: 'tamponi' },\n  7: { value: 7, description: 'Tamponi totali', field: 'tamponiTotali' },\n  8: { value: 8, description: 'Nuovi positivi', field: 'nuoviPositivi' },\n  9: { value: 9, description: 'Totale positivi', field: 'totalePositivi' },\n  10: { value: 10, description: 'Totale casi', field: 'totaleCasi' },\n  11: { value: 11, description: '% positivi/tamponi giornalieri', field: 'positiviTamponi' },\n};\n\ninterface Props {\n  children: React.ReactElement;\n  open: boolean;\n  value: number;\n}\n\nfunction ValueLabelComponent(props: Props) {\n  const { children, open, value } = props;\n  return (\n    <MUITooltip open={open} enterTouchDelay={0} placement=\"top\" title={value} arrow>\n      {children}\n    </MUITooltip>\n  );\n}\n\nconst Home: React.FC = () => {\n  const classes = useStyles();\n  const [regione, setRegione] = useState(99);\n  const [grafico, setGrafico] = useState(1);\n  const [datapoints, setDatapoints] = useState<DataPoint[]>();\n  const [range, setRange] = useState([0, 100]);\n  const [min, setMin] = useState(0);\n  const [max, setMax] = useState(100);\n  const history = useHistory();\n\n  useEffect(() => {\n    refresh().then(() => {\n      setMin(0);\n      setMax(nationalData.length - 1);\n      setRange([0, nationalData.length - 1]);\n\n      setRegione(99);\n    });\n  }, []);\n\n  useEffect(() => {\n    if (regione) {\n      if (regione === 99) {\n        setDatapoints(nationalData);\n      } else {\n        setDatapoints(getByRegionCode(regione));\n      }\n    }\n  }, [regione]);\n\n  const onChangeRegione = evt => {\n    setRegione(evt.target.value);\n  };\n\n  const onChangeGrafico = evt => {\n    setGrafico(evt.target.value);\n  };\n\n  const chartData = useMemo(() => {\n    if (!datapoints) return [];\n    return datapoints\n      .filter((p, i) => i >= range[0] && i <= range[1])\n      .map(p => ({\n        data: moment(p.data).format('DD.MM.YYYY'),\n        value: p[grafici[grafico].field],\n      }));\n  }, [datapoints, grafico, range]);\n\n  const selectedRegione = useMemo(() => {\n    return Regioni.find(r => r.codiceRegione === regione);\n  }, [regione]);\n\n  return (\n    <>\n      <Container maxWidth=\"xl\" className={classes.container}>\n        <Grid container spacing={1}>\n          <Grid item xl={6} lg={8} md={8} sm={7} xs={12}>\n            <FormControl variant=\"outlined\" size=\"small\" className={classes.formControl}>\n              <Select\n                labelId=\"demo-controlled-open-select-label\"\n                id=\"demo-controlled-open-select\"\n                value={regione}\n                onChange={onChangeRegione}\n                placeholder=\"Regione\"\n              >\n                {Regioni.map(r => (\n                  <MenuItem key={`reg-${r.codiceRegione}`} value={r.codiceRegione}>\n                    {r.denominazioneRegione}\n                  </MenuItem>\n                ))}\n              </Select>\n            </FormControl>\n\n            <FormControl variant=\"outlined\" size=\"small\" className={classes.formControl}>\n              <Select\n                labelId=\"demo-controlled-open-select-label\"\n                id=\"demo-controlled-open-select\"\n                value={grafico}\n                onChange={onChangeGrafico}\n                placeholder=\"Grafico\"\n              >\n                {Object.values(grafici).map(g => (\n                  <MenuItem key={`gf-${g.value}`} value={g.value}>\n                    {g.description}\n                  </MenuItem>\n                ))}\n              </Select>\n            </FormControl>\n\n            {regione === 99 ? null : (\n              <FormControl variant=\"outlined\" size=\"small\" className={classes.formControl}>\n                <Button\n                  variant=\"outlined\"\n                  onClick={() => {\n                    history.push(`/regione/${selectedRegione?.codiceRegione}`);\n                  }}\n                >\n                  Focus {selectedRegione?.denominazioneRegione}\n                </Button>\n              </FormControl>\n            )}\n          </Grid>\n\n          <Grid item xl={6} lg={4} md={4} sm={5} xs={12}>\n            <div className={classes.lastUpdate}>\n              <Typography>\n                Ultimo aggiornamento:{' '}\n                {datapoints && datapoints.length\n                  ? moment(datapoints[datapoints.length - 1].data).format('DD/MM/YYYY')\n                  : '-'}\n              </Typography>\n            </div>\n          </Grid>\n\n          <Grid item xs={12}>\n            <ResponsiveContainer width=\"100%\" height={700}>\n              <AreaChart data={chartData} margin={{ top: 5, right: 30, left: 20, bottom: 5 }}>\n                <XAxis dataKey=\"data\" />\n                <YAxis />\n                <CartesianGrid strokeDasharray=\"3 3\" />\n                <Tooltip />\n                <Legend />\n                <Area\n                  type=\"monotone\"\n                  name={grafici[grafico].description}\n                  dataKey=\"value\"\n                  stroke={blue[900]}\n                  fill={blue[700]}\n                />\n              </AreaChart>\n            </ResponsiveContainer>\n            <Grid item xs={12} style={{ marginTop: '24px' }}>\n              <Slider\n                value={range}\n                min={min}\n                max={max}\n                valueLabelDisplay=\"on\"\n                onChange={(event, value) => {\n                  if (Array.isArray(value)) setRange(value);\n                }}\n                ValueLabelComponent={ValueLabelComponent}\n                valueLabelFormat={x =>\n                  nationalData && nationalData.length\n                    ? moment(nationalData[x].data).format('DD.MM.YYYY')\n                    : x\n                }\n              />\n            </Grid>\n          </Grid>\n        </Grid>\n      </Container>\n\n      <div className={classes.footer}>\n        Fonte dati:{' '}\n        <a href=\"https://github.com/pcm-dpc/COVID-19\" target=\"_new\">\n          Presidenza del Consiglio dei Ministri - Dipartimento della Protezione Civile\n        </a>\n      </div>\n    </>\n  );\n};\n\nexport default Home;\n","/* eslint-disable import/no-mutable-exports */\nimport axios from 'axios';\nimport { StatoVaccinazioni, Somministrazione, Consegna } from '../types/vaccini';\n\nlet vaccines: StatoVaccinazioni[] = [];\nlet somministrazioni: Somministrazione[] = [];\nlet consegne: Consegna[] = [];\n\nconst loadVaccini = (): Promise<StatoVaccinazioni[]> => {\n  return axios\n    .get(\n      'https://raw.githubusercontent.com/italia/covid19-opendata-vaccini/master/dati/vaccini-summary-latest.json'\n    )\n    .then(response => response.data)\n    .then(json => {\n      const vaxx: StatoVaccinazioni[] = [];\n      json.data.forEach(d => {\n        const vax: StatoVaccinazioni = {\n          index: d.index,\n          area: d.area,\n          dosiSomministrate: d.dosi_somministrate,\n          dosiConsegnate: d.dosi_consegnate,\n          percentualeSomministrazione: d.percentuale_somministrazione,\n          ultimoAggiornamento: d.ultimo_aggiornamento,\n        };\n        vaxx.push(vax);\n      });\n      return vaxx;\n    });\n};\n\nconst loadSomministrazioni = (): Promise<Somministrazione[]> => {\n  return axios\n    .get(\n      'https://raw.githubusercontent.com/italia/covid19-opendata-vaccini/master/dati/somministrazioni-vaccini-summary-latest.json'\n    )\n    .then(response => response.data)\n    .then(json => {\n      const ss: Somministrazione[] = [];\n      json.data.forEach(d => {\n        const s: Somministrazione = {\n          index: d.index,\n          area: d.area,\n          dataSomministrazione: d.data_somministrazione,\n          totale: d.totale,\n          sessoMaschile: d.sesso_maschile,\n          sessoFemminile: d.sesso_femminile,\n          categoriaOperatoriSanitariSociosanitari: d.categoria_operatori_sanitari_sociosanitari,\n          categoriaPersonaleNonSanitario: d.categoria_personale_non_sanitario,\n          categoriaOspitiRsa: d.categoria_ospiti_rsa,\n          categoriaPersonaleScolastico: d.categoria_personale_scolastico,\n          categoriaSoggettiFragili: d.categoria_soggetti_fragili,\n          categoriaForzeArmate: d.categoria_forze_armate,\n          categoriaAltro: d.categoria_altro,\n          categoriaUnder50: d.categoria_under50 || 0,\n          categoria5059: d.categoria_50_59 || 0,\n          categoria6069: d.categoria_60_69,\n          categoria7079: d.categoria_70_79,\n          categoriaOver80: d.categoria_over80,\n          primaDose: d.prima_dose,\n          secondaDose: d.seconda_dose,\n        };\n        ss.push(s);\n      });\n      return ss;\n    });\n};\n\nconst loadConsegne = (): Promise<Consegna[]> => {\n  return axios\n    .get(\n      'https://raw.githubusercontent.com/italia/covid19-opendata-vaccini/master/dati/consegne-vaccini-latest.json'\n    )\n    .then(response => response.data)\n    .then(json => {\n      const cc: Consegna[] = [];\n      json.data.forEach(d => {\n        const c: Consegna = {\n          index: d.index,\n          area: d.area,\n          fornitore: d.fornitore.replace('Pfizer/BioNTech', 'Pfizer').replace('(AstraZeneca)', ''),\n          dataConsegna: d.data_consegna,\n          numeroDosi: d.numero_dosi,\n        };\n        cc.push(c);\n      });\n      return cc;\n    });\n};\n\nconst refresh = (): Promise<StatoVaccinazioni[]> => {\n  return loadVaccini().then(vaxx => {\n    vaccines = vaxx;\n    return vaccines;\n  });\n};\n\nconst refreshSomministrazioni = (): Promise<Somministrazione[]> => {\n  return loadSomministrazioni().then(ss => {\n    somministrazioni = ss;\n    return somministrazioni;\n  });\n};\n\nconst refreshConsegne = (): Promise<Consegna[]> => {\n  return loadConsegne().then(cc => {\n    consegne = cc;\n    return consegne;\n  });\n};\n\nconst getSomministrazioniByRegion = (regionCode: string): Somministrazione[] => {\n  return somministrazioni\n    .filter(s => s.area === regionCode)\n    .sort((a, b) => (a.dataSomministrazione > b.dataSomministrazione ? 1 : -1));\n};\n\nconst getStatusByRegionType = (): Somministrazione[] => {\n  const status = {};\n  somministrazioni.forEach(s => {\n    if (!status[s.area]) {\n      status[s.area] = {\n        ...s,\n        dataSomministrazione: undefined,\n      };\n    } else {\n      const a: Somministrazione = status[s.area];\n      a.categoriaOperatoriSanitariSociosanitari += s.categoriaOperatoriSanitariSociosanitari;\n      a.categoriaOspitiRsa += s.categoriaOspitiRsa;\n      a.categoriaUnder50 += s.categoriaUnder50;\n      a.categoria5059 += s.categoria5059;\n      a.categoria6069 += s.categoria6069;\n      a.categoria7079 += s.categoria7079;\n      a.categoriaOver80 += s.categoriaOver80;\n      a.categoriaPersonaleNonSanitario += s.categoriaPersonaleNonSanitario;\n      a.categoriaPersonaleScolastico += s.categoriaPersonaleScolastico;\n      a.categoriaSoggettiFragili += s.categoriaSoggettiFragili;\n      a.categoriaForzeArmate += s.categoriaForzeArmate;\n      a.categoriaAltro += s.categoriaAltro;\n\n      a.primaDose += s.primaDose;\n      a.secondaDose += s.secondaDose;\n      a.sessoFemminile += s.sessoFemminile;\n      a.sessoMaschile += s.sessoMaschile;\n      a.totale += s.totale;\n    }\n  });\n  const values: Somministrazione[] = Object.values(status);\n  return values.sort((a, b) => (a.area > b.area ? 1 : -1));\n};\n\nconst getConsegneByRegion = (regionCode: string): Consegna[] => {\n  return consegne\n    .filter(s => s.area === regionCode)\n    .sort((a, b) => (a.dataConsegna > b.dataConsegna ? 1 : -1));\n};\n\nconst getTotaleConsegneBySupplier = (): Consegna[] => {\n  const map = {};\n  consegne.forEach(c => {\n    if (!map[c.fornitore]) {\n      map[c.fornitore] = { ...c, index: 0, dataConsegna: '', area: '' };\n    } else {\n      map[c.fornitore].numeroDosi += c.numeroDosi;\n    }\n  });\n  return Object.values(map);\n};\n\nexport {\n  refresh,\n  refreshSomministrazioni,\n  refreshConsegne,\n  vaccines,\n  somministrazioni,\n  consegne,\n  getSomministrazioniByRegion,\n  getConsegneByRegion,\n  getStatusByRegionType,\n  getTotaleConsegneBySupplier,\n};\n","import React from 'react';\nimport { Paper, Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { grey } from '@material-ui/core/colors';\n\ntype Props = {\n  title: string;\n  value: number;\n  percent?: number;\n  delta?: number;\n  icon?: React.ReactNode;\n};\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    padding: theme.spacing(1),\n    minHeight: '80px',\n  },\n  title: {\n    color: grey[500],\n  },\n  paperContent: {\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  value: {\n    flexGrow: 1,\n    textAlign: 'right',\n    fontSize: '1.7rem',\n    fontWeight: 'bold',\n  },\n  addendum: {\n    fontSize: '1.3rem',\n  },\n  bigIcon: {\n    fontSize: '400%',\n  },\n}));\n\nconst DataPaper: React.FC<Props> = ({ title, value, icon, percent, delta }) => {\n  const classes = useStyles();\n\n  return (\n    <Paper className={classes.paper}>\n      <Typography variant=\"h6\" className={classes.title}>\n        <strong>{title}</strong>\n      </Typography>\n      <div className={classes.paperContent}>\n        {icon || <span>&nbsp;</span>}\n        <span className={classes.value}>\n          {new Intl.NumberFormat().format(value)}\n          {percent ? <span className={classes.addendum}>{` (${percent.toFixed(1)}%)`}</span> : ''}\n          {delta ? (\n            <span className={classes.addendum}>\n              {` (${delta > 0 ? '+' : ''}${Intl.NumberFormat().format(delta)})`}\n            </span>\n          ) : (\n            ''\n          )}\n        </span>\n      </div>\n    </Paper>\n  );\n};\n\nexport default DataPaper;\n","/* eslint-disable no-nested-ternary */\nimport React, { useEffect, useState, useMemo, useCallback } from 'react';\nimport { withStyles, makeStyles, useTheme } from '@material-ui/core/styles';\nimport { Container, Grid, Hidden, Typography, useMediaQuery } from '@material-ui/core';\nimport { ToggleButton, ToggleButtonGroup } from '@material-ui/lab';\nimport {\n  blue,\n  grey,\n  lightBlue,\n  pink,\n  lightGreen,\n  orange,\n  purple,\n  green,\n  indigo,\n} from '@material-ui/core/colors';\nimport {\n  LocalShipping as LocalShippingIcon,\n  LocalHospital as LocalHospitalIcon,\n} from '@material-ui/icons';\nimport moment from 'moment';\nimport {\n  ResponsiveContainer,\n  BarChart,\n  Bar,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  LabelList,\n} from 'recharts';\nimport {\n  refresh,\n  vaccines,\n  refreshConsegne,\n  refreshSomministrazioni,\n  getStatusByRegionType,\n  getTotaleConsegneBySupplier,\n} from '../data/vaccini';\nimport Regioni from '../data/regioni';\nimport DataPaper from '../components/DataPaper';\nimport { Consegna, Somministrazione } from '../types/vaccini';\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    padding: theme.spacing(2, 3),\n  },\n  buttons: {\n    textAlign: 'center',\n  },\n  lastUpdate: {\n    textAlign: 'right',\n    padding: theme.spacing(2),\n  },\n  bigIcon: {\n    fontSize: '400%',\n  },\n  title: {\n    color: grey[500],\n  },\n  footer: {\n    textAlign: 'center',\n    padding: theme.spacing(2, 0),\n    backgroundColor: '#c0c0c0',\n  },\n  mb2: {\n    marginBottom: theme.spacing(2),\n  },\n}));\n\nconst styles = theme => ({\n  root: {\n    color: theme.palette.primary.main,\n    '&$selected': {\n      color: theme.palette.primary.contrastText,\n      backgroundColor: theme.palette.primary.main,\n      '&:hover': {\n        backgroundColor: theme.palette.primary.light,\n      },\n    },\n    padding: theme.spacing(0.75, 2),\n  },\n  selected: {},\n});\n\nconst StyledToggleButton = withStyles(styles, { withTheme: true })(ToggleButton);\n\nconst Vaccini: React.FC = () => {\n  const classes = useStyles();\n  const [vacc, setVacc] = useState(vaccines);\n  const [shipped, setShipped] = useState(0);\n  const [given, setGiven] = useState(0);\n  const [view, setView] = useState('values');\n  const [regionMap, setRegionMap] = useState({});\n  const [statusByRegion, setStatusByRegion] = useState<Somministrazione[]>([]);\n  const [consegneBySupplier, setConsegneBySupplier] = useState<Consegna[]>([]);\n\n  const theme = useTheme();\n  const isXs = useMediaQuery(theme.breakpoints.down('xs'));\n  const isSm = useMediaQuery(theme.breakpoints.down('sm'));\n\n  const loadRegioni = useCallback(() => {\n    const map = {};\n    Regioni.forEach(r => {\n      map[r.abbreviazione] = r.denominazioneRegione;\n    });\n    setRegionMap(map);\n  }, []);\n\n  useEffect(() => {\n    loadRegioni();\n    refresh().then(vaxx => {\n      setVacc(vaxx);\n      let c = 0;\n      let s = 0;\n      vaxx.forEach(vax => {\n        c += vax.dosiConsegnate;\n        s += vax.dosiSomministrate;\n      });\n      setShipped(c);\n      setGiven(s);\n    });\n    refreshSomministrazioni().then(() => {\n      setStatusByRegion(getStatusByRegionType());\n    });\n    refreshConsegne().then(() => {\n      setConsegneBySupplier(getTotaleConsegneBySupplier());\n    });\n  }, [loadRegioni]);\n\n  const chartData = useMemo(() => {\n    return vacc\n      .sort((a, b) => {\n        return a.area.localeCompare(b.area);\n      })\n      .map(v => ({\n        regione: regionMap[v.area] || v.area,\n        'Dosi consegnate': v.dosiConsegnate,\n        'Dosi somministrate': v.dosiSomministrate,\n        'Percentuale somministrazioni': v.percentualeSomministrazione,\n      }));\n  }, [vacc, regionMap]);\n\n  const chartData2 = useMemo(() => {\n    return statusByRegion.map(v => ({\n      regione: regionMap[v.area] || v.area,\n      ...v,\n    }));\n  }, [statusByRegion, regionMap]);\n\n  const chartData3 = useMemo(() => {\n    return consegneBySupplier.sort((a, b) => {\n      return a.numeroDosi < b.numeroDosi ? 1 : -1;\n    });\n  }, [consegneBySupplier]);\n\n  const lastUpdate = useMemo(() => {\n    let date;\n    vacc.forEach(v => {\n      const d = moment(v.ultimoAggiornamento);\n      if (!date || date.isBefore(d)) {\n        date = d;\n      }\n    });\n    return date;\n  }, [vacc]);\n\n  const getBar = (viewRestriction, name, dataKey, color, stackId) => {\n    return view === viewRestriction ? (\n      <Bar dataKey={dataKey} name={name} stackId={stackId} fill={color} stroke={color} />\n    ) : null;\n  };\n\n  const getChartData = () => {\n    if (view === 'type' || view === 'sex' || view === 'dose') return chartData2;\n    if (view === 'supplier') return chartData3;\n    return chartData;\n  };\n\n  return (\n    <>\n      <Container maxWidth=\"xl\" className={classes.container}>\n        <Grid container spacing={2} className={classes.mb2}>\n          <Hidden mdDown>\n            <Grid item xs={12} sm={6} md={6} lg={3} />\n          </Hidden>\n          <Grid item xs={12} sm={6} md={6} lg={3}>\n            <DataPaper\n              title=\"Consegnati\"\n              value={shipped}\n              icon={<LocalShippingIcon className={classes.bigIcon} />}\n            />\n          </Grid>\n          <Grid item xs={12} sm={6} md={6} lg={3}>\n            <DataPaper\n              title=\"Somministrati\"\n              value={given}\n              icon={<LocalHospitalIcon className={classes.bigIcon} />}\n              percent={shipped === 0 ? 0 : (given * 100) / shipped}\n            />\n          </Grid>\n          <Hidden mdDown>\n            <Grid item xs={12} sm={6} md={6} lg={3} />\n          </Hidden>\n        </Grid>\n\n        <Grid container spacing={2}>\n          <Grid item xs={12} sm={6}>\n            <Typography variant=\"h6\" className={classes.title}>\n              <strong>Dati per regione</strong>\n            </Typography>\n          </Grid>\n          <Hidden xsDown>\n            <Grid item sm={6} className={classes.lastUpdate}>\n              Ultimo aggiornamento: {lastUpdate ? lastUpdate.format('DD/MM/YYYY') : ''}\n            </Grid>\n          </Hidden>\n          <Grid item sm={12}>\n            <div className={classes.buttons}>\n              <ToggleButtonGroup\n                size=\"medium\"\n                value={view}\n                exclusive\n                onChange={(evt, val) => {\n                  setView(val);\n                }}\n              >\n                <StyledToggleButton value=\"values\">Cons./som.</StyledToggleButton>\n                <StyledToggleButton value=\"percent\">Sommin. (%)</StyledToggleButton>\n                <StyledToggleButton value=\"type\">Categoria</StyledToggleButton>\n                <StyledToggleButton value=\"sex\">Sesso</StyledToggleButton>\n                <StyledToggleButton value=\"dose\">Dose</StyledToggleButton>\n                <StyledToggleButton value=\"supplier\">Fornitore</StyledToggleButton>\n              </ToggleButtonGroup>\n            </div>\n          </Grid>\n        </Grid>\n\n        <ResponsiveContainer width=\"100%\" height={isXs ? 500 : isSm ? 600 : 700}>\n          <BarChart\n            data={getChartData()}\n            margin={{ top: 5, right: 30, left: 20, bottom: 5 }}\n            barGap={isXs ? -3 : isSm ? -7 : -15}\n          >\n            <XAxis\n              dataKey={view === 'supplier' ? 'fornitore' : 'regione'}\n              angle={-60}\n              textAnchor=\"end\"\n              height={130}\n              interval={0}\n            />\n            <YAxis width={view === 'percent' ? 30 : 70} />\n            <CartesianGrid strokeDasharray=\"3 3\" />\n            <Tooltip />\n            <Legend />\n            {view === 'values' ? (\n              <Bar dataKey=\"Dosi consegnate\" stackId=\"b\" fill={blue[700]} stroke={blue[900]} />\n            ) : null}\n            {view === 'values' ? (\n              <Bar dataKey=\"Dosi somministrate\" stackId=\"a\" fill={blue[400]} stroke={blue[600]} />\n            ) : null}\n            {view === 'percent' ? (\n              <Bar\n                dataKey=\"Percentuale somministrazioni\"\n                fill={lightGreen[700]}\n                stroke={lightGreen[900]}\n              >\n                {isSm ? null : (\n                  <LabelList\n                    dataKey=\"Percentuale somministrazioni\"\n                    position=\"top\"\n                    formatter={v => `${Number.parseFloat(v).toFixed(1)}%`}\n                  />\n                )}\n              </Bar>\n            ) : null}\n\n            {getBar(\n              'type',\n              'Operatori sanitari',\n              'categoriaOperatoriSanitariSociosanitari',\n              purple[700],\n              'a'\n            )}\n            {getBar('type', 'Ospiti RSA', 'categoriaOspitiRsa', purple[600], 'a')}\n            {getBar(\n              'type',\n              'Personale non sanitario',\n              'categoriaPersonaleNonSanitario',\n              purple[500],\n              'a'\n            )}\n            {getBar(\n              'type',\n              'Personale scolastico',\n              'categoriaPersonaleScolastico',\n              purple[400],\n              'a'\n            )}\n            {getBar('type', 'Soggetti fragili', 'categoriaSoggettiFragili', purple[300], 'a')}\n            {getBar('type', 'Forze armate', 'categoriaForzeArmate', purple[200], 'a')}\n            {getBar('type', 'Altro', 'categoriaAltro', purple[100], 'a')}\n\n            {getBar('type', 'Under 50', 'categoriaUnder50', green[200], 'a')}\n            {getBar('type', '50-59 anni', 'categoria5059', green[300], 'a')}\n            {getBar('type', '60-69 anni', 'categoria6069', green[400], 'a')}\n            {getBar('type', '70-79 anni', 'categoria7079', green[500], 'a')}\n            {getBar('type', 'Over 80', 'categoriaOver80', green[600], 'a')}\n\n            {view === 'sex' ? (\n              <Bar\n                dataKey=\"sessoMaschile\"\n                name=\"Maschi\"\n                stackId=\"a\"\n                fill={lightBlue[400]}\n                stroke={lightBlue[600]}\n              />\n            ) : null}\n            {view === 'sex' ? (\n              <Bar\n                dataKey=\"sessoFemminile\"\n                name=\"Femmine\"\n                stackId=\"a\"\n                fill={pink[300]}\n                stroke={pink[500]}\n              />\n            ) : null}\n\n            {view === 'dose' ? (\n              <Bar\n                dataKey=\"primaDose\"\n                name=\"Prima dose\"\n                stackId=\"a\"\n                fill={orange[700]}\n                stroke={orange[900]}\n              />\n            ) : null}\n            {view === 'dose' ? (\n              <Bar\n                dataKey=\"secondaDose\"\n                name=\"Seconda dose\"\n                stackId=\"a\"\n                fill={orange[400]}\n                stroke={orange[600]}\n              />\n            ) : null}\n\n            {getBar('supplier', 'Dosi consegnate', 'numeroDosi', indigo[600], 'a')}\n          </BarChart>\n        </ResponsiveContainer>\n      </Container>\n\n      <div className={classes.footer}>\n        Fonte dati:{' '}\n        <a href=\"https://github.com/italia/covid19-opendata-vaccini\" target=\"_new\">\n          Commissario straordinario per l&apos;emergenza Covid-19\n        </a>\n      </div>\n    </>\n  );\n};\n\nexport default Vaccini;\n","import React, { useCallback } from 'react';\nimport { AppBar, Toolbar, Typography, IconButton, Button } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { GitHub as GitHubIcon } from '@material-ui/icons';\nimport { useHistory } from 'react-router-dom';\n\nconst useStyles = makeStyles(() => ({\n  title: {\n    display: 'flex',\n    flexDirection: 'column',\n    flexGrow: 1,\n  },\n  subtitle: {\n    lineHeight: 'normal',\n  },\n  github: {\n    color: 'white',\n  },\n  link: {\n    color: 'white',\n  },\n}));\n\ntype TitleProps = {\n  title: string;\n  subtitle: string;\n  linkName: string;\n  link: string;\n};\n\nconst Header: React.FC<TitleProps> = ({ title, subtitle, linkName, link }) => {\n  const classes = useStyles();\n  const history = useHistory();\n\n  const openGitHub = useCallback(() => {\n    window.open('https://github.com/ermannos/covid-19-italy', '_new');\n  }, []);\n\n  return (\n    <AppBar position=\"static\">\n      <Toolbar>\n        <div className={classes.title}>\n          <Typography variant=\"h6\">{title}</Typography>\n          <Typography variant=\"overline\" className={classes.subtitle}>\n            {subtitle}\n          </Typography>\n        </div>\n\n        <Button\n          className={classes.link}\n          color=\"inherit\"\n          onClick={() => {\n            history.push(link);\n          }}\n        >\n          {linkName}\n        </Button>\n        <IconButton className={classes.github} onClick={openGitHub} title=\"GitHub repository\">\n          <GitHubIcon />\n        </IconButton>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nexport default Header;\n","import React, { useMemo, useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Container, Grid, Typography } from '@material-ui/core';\nimport { useParams } from 'react-router-dom';\nimport moment from 'moment';\nimport Regioni from '../data/regioni';\nimport Header from './Header';\nimport {\n  refreshSomministrazioni,\n  getSomministrazioniByRegion,\n  refreshConsegne,\n  getConsegneByRegion,\n} from '../data/vaccini';\nimport { refresh, getByRegionCode } from '../data/dataloader';\nimport DataPaper from '../components/DataPaper';\nimport DataPoint from '../types/datapoint';\nimport { Somministrazione, Consegna } from '../types/vaccini';\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    minHeight: 600,\n    padding: theme.spacing(2, 3),\n  },\n  sectionTitle: {\n    marginBottom: theme.spacing(2),\n  },\n  section: {\n    marginBottom: theme.spacing(4),\n  },\n  subtitle: {\n    fontSize: '60%',\n  },\n  footer: {\n    textAlign: 'center',\n    padding: theme.spacing(2, 0),\n    backgroundColor: '#c0c0c0',\n  },\n}));\n\ninterface ParamTypes {\n  code: string;\n}\n\nconst Regione: React.FC = () => {\n  const classes = useStyles();\n  const code = Number.parseInt(useParams<ParamTypes>().code, 10);\n  const [covidData, setCovidData] = useState<DataPoint[]>([]);\n  const [somministrazioni, setSomministrazioni] = useState<Somministrazione[]>([]);\n  const [consegne, setConsegne] = useState<Consegna[]>([]);\n\n  const regione = useMemo(() => {\n    return Regioni.find(r => r.codiceRegione === code);\n  }, [code]);\n\n  useEffect(() => {\n    refresh().then(() => {\n      setCovidData(getByRegionCode(code));\n    });\n    refreshSomministrazioni().then(() => {\n      setSomministrazioni(getSomministrazioniByRegion(regione?.abbreviazione || '?'));\n    });\n    refreshConsegne().then(() => {\n      setConsegne(getConsegneByRegion(regione?.abbreviazione || '?'));\n    });\n  }, [code, regione]);\n\n  const previousData: DataPoint | undefined = covidData.length\n    ? covidData[covidData.length - 2]\n    : undefined;\n  const lastData: DataPoint | undefined = covidData.length\n    ? covidData[covidData.length - 1]\n    : undefined;\n  const previousSomministrazione: Somministrazione | undefined = somministrazioni.length\n    ? somministrazioni[somministrazioni.length - 2]\n    : undefined;\n  const lastSomministrazione: Somministrazione | undefined = somministrazioni.length\n    ? somministrazioni[somministrazioni.length - 1]\n    : undefined;\n\n  const lastConsegna1: Consegna | undefined =\n    consegne.length >= 4 ? consegne[consegne.length - 4] : undefined;\n  const lastConsegna2: Consegna | undefined =\n    consegne.length >= 3 ? consegne[consegne.length - 3] : undefined;\n  const lastConsegna3: Consegna | undefined =\n    consegne.length >= 2 ? consegne[consegne.length - 2] : undefined;\n  const lastConsegna4: Consegna | undefined = consegne.length\n    ? consegne[consegne.length - 1]\n    : undefined;\n\n  return (\n    <>\n      <Header\n        title=\"Covid-19 Italia\"\n        subtitle={`Focus ${regione?.denominazioneRegione}`}\n        linkName=\"Home\"\n        link=\"/\"\n      />\n      <Container maxWidth=\"xl\" className={classes.container}>\n        <Typography variant=\"h4\" className={classes.sectionTitle}>\n          Situazione epidemia{' '}\n          <span className={classes.subtitle}>\n            {lastData ? ` al ${moment(lastData.data).format('DD/MM/YYYY')}` : ''}\n          </span>\n        </Typography>\n        <Grid container spacing={2} className={classes.section}>\n          <Grid item md={3} sm={4} xs={12}>\n            <DataPaper\n              title=\"Pazienti degenti\"\n              value={lastData?.ricoveratiConSintomi || 0}\n              delta={\n                (lastData?.ricoveratiConSintomi || 0) - (previousData?.ricoveratiConSintomi || 0)\n              }\n            />\n          </Grid>\n          <Grid item md={3} sm={4} xs={12}>\n            <DataPaper\n              title=\"Pazienti intensiva\"\n              value={lastData?.terapiaIntensiva || 0}\n              delta={(lastData?.terapiaIntensiva || 0) - (previousData?.terapiaIntensiva || 0)}\n            />\n          </Grid>\n          <Grid item md={3} sm={4} xs={12}>\n            <DataPaper\n              title=\"Pazienti deceduti\"\n              value={lastData?.deceduti || 0}\n              delta={(lastData?.deceduti || 0) - (previousData?.deceduti || 0)}\n            />\n          </Grid>\n          <Grid item md={3} sm={4} xs={12}>\n            <DataPaper\n              title=\"Tamponi effettuati\"\n              value={lastData?.tamponi || 0}\n              delta={(lastData?.tamponi || 0) - (previousData?.tamponi || 0)}\n            />\n          </Grid>\n          <Grid item md={3} sm={4} xs={12}>\n            <DataPaper\n              title=\"Tamponi positivi\"\n              value={lastData?.nuoviPositivi || 0}\n              percent={lastData?.positiviTamponi || 0}\n            />\n          </Grid>\n          <Grid item md={3} sm={4} xs={12}>\n            <DataPaper\n              title=\"Attualmente positivi\"\n              value={lastData?.totalePositivi || 0}\n              delta={(lastData?.totalePositivi || 0) - (previousData?.totalePositivi || 0)}\n            />\n          </Grid>\n        </Grid>\n\n        <Typography variant=\"h4\" className={classes.sectionTitle}>\n          Campagna vaccinale\n          <span className={classes.subtitle}>\n            {lastData\n              ? ` al ${moment(lastSomministrazione?.dataSomministrazione).format('DD/MM/YYYY')}`\n              : ''}\n          </span>\n        </Typography>\n        <Grid container spacing={2} className={classes.section}>\n          <Grid item md={3} sm={4} xs={12}>\n            <DataPaper\n              title=\"Vaccini somministrati\"\n              value={lastSomministrazione?.totale || 0}\n              delta={(lastSomministrazione?.totale || 0) - (previousSomministrazione?.totale || 0)}\n            />\n          </Grid>\n          <Grid item md={3} sm={4} xs={12}>\n            <DataPaper\n              title=\"Somm. prima dose\"\n              value={lastSomministrazione?.primaDose || 0}\n              delta={\n                (lastSomministrazione?.primaDose || 0) - (previousSomministrazione?.primaDose || 0)\n              }\n            />\n          </Grid>\n          <Grid item md={3} sm={4} xs={12}>\n            <DataPaper\n              title=\"Somm. seconda dose\"\n              value={lastSomministrazione?.secondaDose || 0}\n              delta={\n                (lastSomministrazione?.secondaDose || 0) -\n                (previousSomministrazione?.secondaDose || 0)\n              }\n            />\n          </Grid>\n        </Grid>\n        <Grid container spacing={2} className={classes.section}>\n          <Grid item md={3} sm={4} xs={12}>\n            <DataPaper\n              title=\"Operatori sanitari\"\n              value={lastSomministrazione?.categoriaOperatoriSanitariSociosanitari || 0}\n              delta={\n                (lastSomministrazione?.categoriaOperatoriSanitariSociosanitari || 0) -\n                (previousSomministrazione?.categoriaOperatoriSanitariSociosanitari || 0)\n              }\n            />\n          </Grid>\n          <Grid item md={3} sm={4} xs={12}>\n            <DataPaper\n              title=\"Ospiti RSA\"\n              value={lastSomministrazione?.categoriaOspitiRsa || 0}\n              delta={\n                (lastSomministrazione?.categoriaOspitiRsa || 0) -\n                (previousSomministrazione?.categoriaOspitiRsa || 0)\n              }\n            />\n          </Grid>\n          <Grid item md={3} sm={4} xs={12}>\n            <DataPaper\n              title=\"Under 50\"\n              value={lastSomministrazione?.categoriaUnder50 || 0}\n              delta={\n                (lastSomministrazione?.categoriaUnder50 || 0) -\n                (previousSomministrazione?.categoriaUnder50 || 0)\n              }\n            />\n          </Grid>\n          <Grid item md={3} sm={4} xs={12}>\n            <DataPaper\n              title=\"50-59 anni\"\n              value={lastSomministrazione?.categoria5059 || 0}\n              delta={\n                (lastSomministrazione?.categoria5059 || 0) -\n                (previousSomministrazione?.categoria5059 || 0)\n              }\n            />\n          </Grid>\n          <Grid item md={3} sm={4} xs={12}>\n            <DataPaper\n              title=\"60-69 anni\"\n              value={lastSomministrazione?.categoria6069 || 0}\n              delta={\n                (lastSomministrazione?.categoria6069 || 0) -\n                (previousSomministrazione?.categoria6069 || 0)\n              }\n            />\n          </Grid>\n          <Grid item md={3} sm={4} xs={12}>\n            <DataPaper\n              title=\"70-79 anni\"\n              value={lastSomministrazione?.categoria7079 || 0}\n              delta={\n                (lastSomministrazione?.categoria7079 || 0) -\n                (previousSomministrazione?.categoria7079 || 0)\n              }\n            />\n          </Grid>\n          <Grid item md={3} sm={4} xs={12}>\n            <DataPaper\n              title=\"Over 80\"\n              value={lastSomministrazione?.categoriaOver80 || 0}\n              delta={\n                (lastSomministrazione?.categoriaOver80 || 0) -\n                (previousSomministrazione?.categoriaOver80 || 0)\n              }\n            />\n          </Grid>\n          <Grid item md={3} sm={4} xs={12}>\n            <DataPaper\n              title=\"Pers. non sanitario\"\n              value={lastSomministrazione?.categoriaPersonaleNonSanitario || 0}\n              delta={\n                (lastSomministrazione?.categoriaPersonaleNonSanitario || 0) -\n                (previousSomministrazione?.categoriaPersonaleNonSanitario || 0)\n              }\n            />\n          </Grid>\n          <Grid item md={3} sm={4} xs={12}>\n            <DataPaper\n              title=\"Pers. scolastico\"\n              value={lastSomministrazione?.categoriaPersonaleScolastico || 0}\n              delta={\n                (lastSomministrazione?.categoriaPersonaleScolastico || 0) -\n                (previousSomministrazione?.categoriaPersonaleScolastico || 0)\n              }\n            />\n          </Grid>\n          <Grid item md={3} sm={4} xs={12}>\n            <DataPaper\n              title=\"Sogg. fragili\"\n              value={lastSomministrazione?.categoriaSoggettiFragili || 0}\n              delta={\n                (lastSomministrazione?.categoriaSoggettiFragili || 0) -\n                (previousSomministrazione?.categoriaSoggettiFragili || 0)\n              }\n            />\n          </Grid>\n          <Grid item md={3} sm={4} xs={12}>\n            <DataPaper\n              title=\"Forze armate\"\n              value={lastSomministrazione?.categoriaForzeArmate || 0}\n              delta={\n                (lastSomministrazione?.categoriaForzeArmate || 0) -\n                (previousSomministrazione?.categoriaForzeArmate || 0)\n              }\n            />\n          </Grid>\n          <Grid item md={3} sm={4} xs={12}>\n            <DataPaper\n              title=\"Altro\"\n              value={lastSomministrazione?.categoriaAltro || 0}\n              delta={\n                (lastSomministrazione?.categoriaAltro || 0) -\n                (previousSomministrazione?.categoriaAltro || 0)\n              }\n            />\n          </Grid>\n        </Grid>\n\n        <Typography variant=\"h4\" className={classes.sectionTitle}>\n          Ultime consegne vaccini\n        </Typography>\n        <Grid container spacing={2} className={classes.section}>\n          <Grid item md={3} sm={4} xs={12}>\n            <DataPaper\n              title={\n                lastConsegna1\n                  ? `${lastConsegna1.fornitore} - ${moment(lastConsegna1.dataConsegna).format(\n                      'DD MMM'\n                    )}`\n                  : ''\n              }\n              value={lastConsegna2?.numeroDosi || 0}\n            />\n          </Grid>\n          <Grid item md={3} sm={4} xs={12}>\n            <DataPaper\n              title={\n                lastConsegna2\n                  ? `${lastConsegna2.fornitore} - ${moment(lastConsegna2.dataConsegna).format(\n                      'DD MMM'\n                    )}`\n                  : ''\n              }\n              value={lastConsegna2?.numeroDosi || 0}\n            />\n          </Grid>\n          <Grid item md={3} sm={4} xs={12}>\n            <DataPaper\n              title={\n                lastConsegna3\n                  ? `${lastConsegna3.fornitore} - ${moment(lastConsegna3.dataConsegna).format(\n                      'DD MMM'\n                    )}`\n                  : ''\n              }\n              value={lastConsegna3?.numeroDosi || 0}\n            />\n          </Grid>\n          <Grid item md={3} sm={4} xs={12}>\n            <DataPaper\n              title={\n                lastConsegna4\n                  ? `${lastConsegna4.fornitore} - ${moment(lastConsegna4.dataConsegna).format(\n                      'DD MMM'\n                    )}`\n                  : ''\n              }\n              value={lastConsegna4?.numeroDosi || 0}\n            />\n          </Grid>\n        </Grid>\n      </Container>\n\n      <div className={classes.footer}>\n        Fonti dati:{' '}\n        <a href=\"https://github.com/pcm-dpc/COVID-19\" target=\"_new\">\n          Presidenza del Consiglio dei Ministri - Dipartimento della Protezione Civile\n        </a>\n        <br />\n        <a href=\"https://github.com/italia/covid19-opendata-vaccini\" target=\"_new\">\n          Commissario straordinario per l&apos;emergenza Covid-19\n        </a>\n      </div>\n    </>\n  );\n};\n\nexport default Regione;\n","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n\nimport Home from './pages/Home';\nimport Vaccini from './pages/Vaccini';\nimport Regione from './pages/Regione';\nimport Header from './pages/Header';\nimport './App.css';\n\nconst App: React.FC = () => {\n  return (\n    <Router basename=\"/covid-19-italy\">\n      <Switch>\n        <Route exact path={['/']}>\n          <Header\n            title=\"Covid-19 Italia\"\n            subtitle=\"Andamento epidemia\"\n            linkName=\"Vaccini\"\n            link=\"/vaccini\"\n          />\n          <Home />\n        </Route>\n        <Route path={['/vaccini']}>\n          <Header\n            title=\"Covid-19 Italia\"\n            subtitle=\"Andamento campagna vaccinale\"\n            linkName=\"Home\"\n            link=\"/\"\n          />\n          <Vaccini />\n        </Route>\n        <Route path={['/regione/:code']}>\n          <Regione />\n        </Route>\n      </Switch>\n    </Router>\n  );\n};\n\nexport default App;\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\nimport { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport { blue, amber } from '@material-ui/core/colors';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst palette = {\n  primary: {\n    main: blue['900'],\n  },\n  secondary: amber,\n};\n\nconst theme = createMuiTheme({\n  palette,\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}